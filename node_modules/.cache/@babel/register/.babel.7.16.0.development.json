{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\server.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _data = _interopRequireDefault(require(\"./data\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//gives access to express package.\n//bypass cors protocols\n//let you control products from backend.\nconst app = (0, _express.default)();\napp.use((0, _cors.default)());\napp.get(\"/api/products\", (req, res) => {\n  res.send(_data.default.products);\n}); //returns the adress in server.js.\n\napp.get('/api/products/:id', (req, res) => {\n  const product = _data.default.products.find(x => x._id === req.params.id);\n\n  if (product) {\n    res.send(product);\n  } else {\n    res.status(404).send({\n      message: 'product Not Found'\n    });\n  }\n});\napp.listen(5000, () => {\n  console.log('serve at http://localhost:5000');\n}); //crea webserver\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwiZGF0YSIsInByb2R1Y3RzIiwicHJvZHVjdCIsImZpbmQiLCJ4IiwiX2lkIiwicGFyYW1zIiwiaWQiLCJzdGF0dXMiLCJtZXNzYWdlIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUYrQjtBQUNQO0FBQ0U7QUFFMUIsTUFBTUEsR0FBRyxHQUFHLHVCQUFaO0FBRUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLG9CQUFSO0FBRUFELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLGVBQVIsRUFBeUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWE7QUFDckNBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTQyxjQUFLQyxRQUFkO0FBQ0EsQ0FGRCxFLENBRUk7O0FBQ0pQLEdBQUcsQ0FBQ0UsR0FBSixDQUFRLG1CQUFSLEVBQTZCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFhO0FBQ3pDLFFBQU1JLE9BQU8sR0FBR0YsY0FBS0MsUUFBTCxDQUFjRSxJQUFkLENBQW9CQyxDQUFELElBQU1BLENBQUMsQ0FBQ0MsR0FBRixLQUFVUixHQUFHLENBQUNTLE1BQUosQ0FBV0MsRUFBOUMsQ0FBaEI7O0FBQ0MsTUFBS0wsT0FBTCxFQUFhO0FBQ1pKLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTRyxPQUFUO0FBQ0QsR0FGQSxNQUVNO0FBQ0xKLElBQUFBLEdBQUcsQ0FBQ1UsTUFBSixDQUFXLEdBQVgsRUFBZ0JULElBQWhCLENBQXNCO0FBQUNVLE1BQUFBLE9BQU8sRUFBRTtBQUFWLEtBQXRCO0FBQ0E7QUFDRCxDQVBGO0FBU0FmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBVyxJQUFYLEVBQWlCLE1BQU07QUFDdEJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdDQUFaO0FBQ0EsQ0FGRCxFLENBRUciLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJzsgLy9naXZlcyBhY2Nlc3MgdG8gZXhwcmVzcyBwYWNrYWdlLlxyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJzsvL2J5cGFzcyBjb3JzIHByb3RvY29sc1xyXG5pbXBvcnQgZGF0YSBmcm9tICcuL2RhdGEnOy8vbGV0IHlvdSBjb250cm9sIHByb2R1Y3RzIGZyb20gYmFja2VuZC5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuXHJcbmFwcC5nZXQoXCIvYXBpL3Byb2R1Y3RzXCIsIChyZXEsIHJlcykgPT57XHJcblx0cmVzLnNlbmQoZGF0YS5wcm9kdWN0cyk7XHJcbn0pOyAvL3JldHVybnMgdGhlIGFkcmVzcyBpbiBzZXJ2ZXIuanMuXHJcbmFwcC5nZXQoJy9hcGkvcHJvZHVjdHMvOmlkJywgKHJlcSwgcmVzKT0+IHtcclxuXHRjb25zdCBwcm9kdWN0ID0gZGF0YS5wcm9kdWN0cy5maW5kKCh4KSA9PnguX2lkID09PSByZXEucGFyYW1zLmlkKTtcclxuXHRcdGlmICAocHJvZHVjdCl7XHJcblx0XHRcdHJlcy5zZW5kKHByb2R1Y3QpO1xyXG5cdH1cdGVsc2Uge1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwNCkuc2VuZCgge21lc3NhZ2U6ICdwcm9kdWN0IE5vdCBGb3VuZCd9KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcbmFwcC5saXN0ZW4oNTAwMCwgKCkgPT4ge1xyXG5cdGNvbnNvbGUubG9nKCdzZXJ2ZSBhdCBodHRwOi8vbG9jYWxob3N0OjUwMDAnKTtcclxufSk7Ly9jcmVhIHdlYnNlcnZlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "get",
        "req",
        "res",
        "send",
        "data",
        "products",
        "product",
        "find",
        "x",
        "_id",
        "params",
        "id",
        "status",
        "message",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAF+B;AACP;AACE;AAE1B,MAAMA,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AAEAD,GAAG,CAACE,GAAJ,CAAQ,eAAR,EAAyB,CAACC,GAAD,EAAMC,GAAN,KAAa;AACrCA,EAAAA,GAAG,CAACC,IAAJ,CAASC,cAAKC,QAAd;AACA,CAFD,E,CAEI;;AACJP,GAAG,CAACE,GAAJ,CAAQ,mBAAR,EAA6B,CAACC,GAAD,EAAMC,GAAN,KAAa;AACzC,QAAMI,OAAO,GAAGF,cAAKC,QAAL,CAAcE,IAAd,CAAoBC,CAAD,IAAMA,CAAC,CAACC,GAAF,KAAUR,GAAG,CAACS,MAAJ,CAAWC,EAA9C,CAAhB;;AACC,MAAKL,OAAL,EAAa;AACZJ,IAAAA,GAAG,CAACC,IAAJ,CAASG,OAAT;AACD,GAFA,MAEM;AACLJ,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAsB;AAACU,MAAAA,OAAO,EAAE;AAAV,KAAtB;AACA;AACD,CAPF;AASAf,GAAG,CAACgB,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,CAFD,E,CAEG",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
      "sourcesContent": [
        "import express from 'express'; //gives access to express package.\r\nimport cors from 'cors';//bypass cors protocols\r\nimport data from './data';//let you control products from backend.\r\n\r\nconst app = express();\r\n\r\napp.use(cors());\r\n\r\napp.get(\"/api/products\", (req, res) =>{\r\n\tres.send(data.products);\r\n}); //returns the adress in server.js.\r\napp.get('/api/products/:id', (req, res)=> {\r\n\tconst product = data.products.find((x) =>x._id === req.params.id);\r\n\t\tif  (product){\r\n\t\t\tres.send(product);\r\n\t}\telse {\r\n\t\t\tres.status(404).send( {message: 'product Not Found'});\r\n\t\t}\r\n\t});\r\n\r\napp.listen(5000, () => {\r\n\tconsole.log('serve at http://localhost:5000');\r\n});//crea webserver"
      ]
    },
    "sourceType": "script",
    "mtime": 1637196740534
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n\nmodule.exports = require('./lib/express');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLE9BQU8sQ0FBQyxlQUFELENBQXhCIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxleHByZXNzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZXhwcmVzc1xyXG4gKiBDb3B5cmlnaHQoYykgMjAwOS0yMDEzIFRKIEhvbG93YXljaHVrXHJcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXHJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9leHByZXNzJyk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "require"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,eAAD,CAAxB",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\nmodule.exports = require('./lib/express');\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\express.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\express.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\express.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\express.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
        "sourceFileName": "express.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n */\n\nvar bodyParser = require('body-parser');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar mixin = require('merge-descriptors');\n\nvar proto = require('./application');\n\nvar Route = require('./router/route');\n\nvar Router = require('./router');\n\nvar req = require('./request');\n\nvar res = require('./response');\n/**\r\n * Expose `createApplication()`.\r\n */\n\n\nexports = module.exports = createApplication;\n/**\r\n * Create an express application.\r\n *\r\n * @return {Function}\r\n * @api public\r\n */\n\nfunction createApplication() {\n  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false); // expose the prototype that will get set on requests\n\n  app.request = Object.create(req, {\n    app: {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: app\n    }\n  }); // expose the prototype that will get set on responses\n\n  app.response = Object.create(res, {\n    app: {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: app\n    }\n  });\n  app.init();\n  return app;\n}\n/**\r\n * Expose the prototypes.\r\n */\n\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n/**\r\n * Expose constructors.\r\n */\n\nexports.Route = Route;\nexports.Router = Router;\n/**\r\n * Expose middleware\r\n */\n\nexports.json = bodyParser.json;\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw;\nexports.static = require('serve-static');\nexports.text = bodyParser.text;\nexports.urlencoded = bodyParser.urlencoded;\n/**\r\n * Replace removed middleware with an appropriate error message.\r\n */\n\nvar removedMiddlewares = ['bodyParser', 'compress', 'cookieSession', 'session', 'logger', 'cookieParser', 'favicon', 'responseTime', 'errorHandler', 'timeout', 'methodOverride', 'vhost', 'csrf', 'directory', 'limit', 'multipart', 'staticCache'];\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cHJlc3MuanMiXSwibmFtZXMiOlsiYm9keVBhcnNlciIsInJlcXVpcmUiLCJFdmVudEVtaXR0ZXIiLCJtaXhpbiIsInByb3RvIiwiUm91dGUiLCJSb3V0ZXIiLCJyZXEiLCJyZXMiLCJleHBvcnRzIiwibW9kdWxlIiwiY3JlYXRlQXBwbGljYXRpb24iLCJhcHAiLCJuZXh0IiwiaGFuZGxlIiwicHJvdG90eXBlIiwicmVxdWVzdCIsIk9iamVjdCIsImNyZWF0ZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwicmVzcG9uc2UiLCJpbml0IiwiYXBwbGljYXRpb24iLCJqc29uIiwicXVlcnkiLCJyYXciLCJzdGF0aWMiLCJ0ZXh0IiwidXJsZW5jb2RlZCIsInJlbW92ZWRNaWRkbGV3YXJlcyIsImZvckVhY2giLCJuYW1lIiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUNBLElBQUlDLFlBQVksR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsWUFBckM7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBbkI7O0FBQ0EsSUFBSUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsZUFBRCxDQUFuQjs7QUFDQSxJQUFJSSxLQUFLLEdBQUdKLE9BQU8sQ0FBQyxnQkFBRCxDQUFuQjs7QUFDQSxJQUFJSyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxVQUFELENBQXBCOztBQUNBLElBQUlNLEdBQUcsR0FBR04sT0FBTyxDQUFDLFdBQUQsQ0FBakI7O0FBQ0EsSUFBSU8sR0FBRyxHQUFHUCxPQUFPLENBQUMsWUFBRCxDQUFqQjtBQUVBO0FBQ0E7QUFDQTs7O0FBRUFRLE9BQU8sR0FBR0MsTUFB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SUMsS0FBSixDQUFVLDJCQUEyQkgsSUFBM0IsR0FBa0Msb0lBQTVDLENBQU47QUFDRCxLQUhrQztBQUluQ2YsSUFBQUEsWUFBWSxFQUFFO0FBSnFCLEdBQXJDO0FBTUQsQ0FQRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcZXhwcmVzc1xcbGliXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZXhwcmVzc1xyXG4gKiBDb3B5cmlnaHQoYykgMjAwOS0yMDEzIFRKIEhvbG93YXljaHVrXHJcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXHJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqL1xyXG5cclxudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpXHJcbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XHJcbnZhciBtaXhpbiA9IHJlcXVpcmUoJ21lcmdlLWRlc2NyaXB0b3JzJyk7XHJcbnZhciBwcm90byA9IHJlcXVpcmUoJy4vYXBwbGljYXRpb24nKTtcclxudmFyIFJvdXRlID0gcmVxdWlyZSgnLi9yb3V0ZXIvcm91dGUnKTtcclxudmFyIFJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVyJyk7XHJcbnZhciByZXEgPSByZXF1aXJlKCcuL3JlcXVlc3QnKTtcclxudmFyIHJlcyA9IHJlcXVpcmUoJy4vcmVzcG9uc2UnKTtcclxuXHJcbi8qKlxyXG4gKiBFeHBvc2UgYGNyZWF0ZUFwcGxpY2F0aW9uKClgLlxyXG4gKi9cclxuXHJcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUFwcGxpY2F0aW9uO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhbiBleHByZXNzIGFwcGxpY2F0aW9uLlxyXG4gKlxyXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBjcmVhdGVBcHBsaWNhdGlvbigpIHtcclxuICB2YXIgYXBwID0gZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGFwcC5oYW5kbGUocmVxLCByZXMsIG5leHQpO1xyXG4gIH07XHJcblxyXG4gIG1peGluKGFwcCwgRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwgZmFsc2UpO1xyXG4gIG1peGluKGFwcCwgcHJvdG8sIGZhbHNlKTtcclxuXHJcbiAgLy8gZXhwb3NlIHRoZSBwcm90b3R5cGUgdGhhdCB3aWxsIGdldCBzZXQgb24gcmVxdWVzdHNcclxuICBhcHAucmVxdWVzdCA9IE9iamVjdC5jcmVhdGUocmVxLCB7XHJcbiAgICBhcHA6IHsgY29uZmlndXJhYmxlOiB0cnVlLCBlbnVtZXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWU6IGFwcCB9XHJcbiAgfSlcclxuXHJcbiAgLy8gZXhwb3NlIHRoZSBwcm90b3R5cGUgdGhhdCB3aWxsIGdldCBzZXQgb24gcmVzcG9uc2VzXHJcbiAgYXBwLnJlc3BvbnNlID0gT2JqZWN0LmNyZWF0ZShyZXMsIHtcclxuICAgIGFwcDogeyBjb25maWd1cmFibGU6IHRydWUsIGVudW1lcmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZTogYXBwIH1cclxuICB9KVxyXG5cclxuICBhcHAuaW5pdCgpO1xyXG4gIHJldHVybiBhcHA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeHBvc2UgdGhlIHByb3RvdHlwZXMuXHJcbiAqL1xyXG5cclxuZXhwb3J0cy5hcHBsaWNhdGlvbiA9IHByb3RvO1xyXG5leHBvcnRzLnJlcXVlc3QgPSByZXE7XHJcbmV4cG9ydHMucmVzcG9uc2UgPSByZXM7XHJcblxyXG4vKipcclxuICogRXhwb3NlIGNvbnN0cnVjdG9ycy5cclxuICovXHJcblxyXG5leHBvcnRzLlJvdXRlID0gUm91dGU7XHJcbmV4cG9ydHMuUm91dGVyID0gUm91dGVyO1xyXG5cclxuLyoqXHJcbiAqIEV4cG9zZSBtaWRkbGV3YXJlXHJcbiAqL1xyXG5cclxuZXhwb3J0cy5qc29uID0gYm9keVBhcnNlci5qc29uXHJcbmV4cG9ydHMucXVlcnkgPSByZXF1aXJlKCcuL21pZGRsZXdhcmUvcXVlcnknKTtcclxuZXhwb3J0cy5yYXcgPSBib2R5UGFyc2VyLnJhd1xyXG5leHBvcnRzLnN0YXRpYyA9IHJlcXVpcmUoJ3NlcnZlLXN0YXRpYycpO1xyXG5leHBvcnRzLnRleHQgPSBib2R5UGFyc2VyLnRleHRcclxuZXhwb3J0cy51cmxlbmNvZGVkID0gYm9keVBhcnNlci51cmxlbmNvZGVkXHJcblxyXG4vKipcclxuICogUmVwbGFjZSByZW1vdmVkIG1pZGRsZXdhcmUgd2l0aCBhbiBhcHByb3ByaWF0ZSBlcnJvciBtZXNzYWdlLlxyXG4gKi9cclxuXHJcbnZhciByZW1vdmVkTWlkZGxld2FyZXMgPSBbXHJcbiAgJ2JvZHlQYXJzZXInLFxyXG4gICdjb21wcmVzcycsXHJcbiAgJ2Nvb2tpZVNlc3Npb24nLFxyXG4gICdzZXNzaW9uJyxcclxuICAnbG9nZ2VyJyxcclxuICAnY29va2llUGFyc2VyJyxcclxuICAnZmF2aWNvbicsXHJcbiAgJ3Jlc3BvbnNlVGltZScsXHJcbiAgJ2Vycm9ySGFuZGxlcicsXHJcbiAgJ3RpbWVvdXQnLFxyXG4gICdtZXRob2RPdmVycmlkZScsXHJcbiAgJ3Zob3N0JyxcclxuICAnY3NyZicsXHJcbiAgJ2RpcmVjdG9yeScsXHJcbiAgJ2xpbWl0JyxcclxuICAnbXVsdGlwYXJ0JyxcclxuICAnc3RhdGljQ2FjaGUnXHJcbl1cclxuXHJcbnJlbW92ZWRNaWRkbGV3YXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcclxuICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01vc3QgbWlkZGxld2FyZSAobGlrZSAnICsgbmFtZSArICcpIGlzIG5vIGxvbmdlciBidW5kbGVkIHdpdGggRXhwcmVzcyBhbmQgbXVzdCBiZSBpbnN0YWxsZWQgc2VwYXJhdGVseS4gUGxlYXNlIHNlZSBodHRwczovL2dpdGh1Yi5jb20vc2VuY2hhbGFicy9jb25uZWN0I21pZGRsZXdhcmUuJyk7XHJcbiAgICB9LFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgfSk7XHJcbn0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "express.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "EventEmitter",
        "mixin",
        "proto",
        "Route",
        "Router",
        "req",
        "res",
        "exports",
        "module",
        "createApplication",
        "app",
        "next",
        "handle",
        "prototype",
        "request",
        "Object",
        "create",
        "configurable",
        "enumerable",
        "writable",
        "value",
        "response",
        "init",
        "application",
        "json",
        "query",
        "raw",
        "static",
        "text",
        "urlencoded",
        "removedMiddlewares",
        "forEach",
        "name",
        "defineProperty",
        "get",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar bodyParser = require('body-parser')\r\nvar EventEmitter = require('events').EventEmitter;\r\nvar mixin = require('merge-descriptors');\r\nvar proto = require('./application');\r\nvar Route = require('./router/route');\r\nvar Router = require('./router');\r\nvar req = require('./request');\r\nvar res = require('./response');\r\n\r\n/**\r\n * Expose `createApplication()`.\r\n */\r\n\r\nexports = module.exports = createApplication;\r\n\r\n/**\r\n * Create an express application.\r\n *\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createApplication() {\r\n  var app = function(req, res, next) {\r\n    app.handle(req, res, next);\r\n  };\r\n\r\n  mixin(app, EventEmitter.prototype, false);\r\n  mixin(app, proto, false);\r\n\r\n  // expose the prototype that will get set on requests\r\n  app.request = Object.create(req, {\r\n    app: { configurable: true, enumerable: true, writable: true, value: app }\r\n  })\r\n\r\n  // expose the prototype that will get set on responses\r\n  app.response = Object.create(res, {\r\n    app: { configurable: true, enumerable: true, writable: true, value: app }\r\n  })\r\n\r\n  app.init();\r\n  return app;\r\n}\r\n\r\n/**\r\n * Expose the prototypes.\r\n */\r\n\r\nexports.application = proto;\r\nexports.request = req;\r\nexports.response = res;\r\n\r\n/**\r\n * Expose constructors.\r\n */\r\n\r\nexports.Route = Route;\r\nexports.Router = Router;\r\n\r\n/**\r\n * Expose middleware\r\n */\r\n\r\nexports.json = bodyParser.json\r\nexports.query = require('./middleware/query');\r\nexports.raw = bodyParser.raw\r\nexports.static = require('serve-static');\r\nexports.text = bodyParser.text\r\nexports.urlencoded = bodyParser.urlencoded\r\n\r\n/**\r\n * Replace removed middleware with an appropriate error message.\r\n */\r\n\r\nvar removedMiddlewares = [\r\n  'bodyParser',\r\n  'compress',\r\n  'cookieSession',\r\n  'session',\r\n  'logger',\r\n  'cookieParser',\r\n  'favicon',\r\n  'responseTime',\r\n  'errorHandler',\r\n  'timeout',\r\n  'methodOverride',\r\n  'vhost',\r\n  'csrf',\r\n  'directory',\r\n  'limit',\r\n  'multipart',\r\n  'staticCache'\r\n]\r\n\r\nremovedMiddlewares.forEach(function (name) {\r\n  Object.defineProperty(exports, name, {\r\n    get: function () {\r\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\r\n    },\r\n    configurable: true\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar deprecate = require('depd')('body-parser');\n/**\r\n * Cache of loaded parsers.\r\n * @private\r\n */\n\n\nvar parsers = Object.create(null);\n/**\r\n * @typedef Parsers\r\n * @type {function}\r\n * @property {function} json\r\n * @property {function} raw\r\n * @property {function} text\r\n * @property {function} urlencoded\r\n */\n\n/**\r\n * Module exports.\r\n * @type {Parsers}\r\n */\n\nexports = module.exports = deprecate.function(bodyParser, 'bodyParser: use individual json/urlencoded middlewares');\n/**\r\n * JSON parser.\r\n * @public\r\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n});\n/**\r\n * Raw parser.\r\n * @public\r\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n});\n/**\r\n * Text parser.\r\n * @public\r\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n});\n/**\r\n * URL-encoded parser.\r\n * @public\r\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n});\n/**\r\n * Create a middleware to parse json and urlencoded bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @deprecated\r\n * @public\r\n */\n\nfunction bodyParser(options) {\n  var opts = {}; // exclude type option\n\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop];\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts);\n\n  var _json = exports.json(opts);\n\n  return function bodyParser(req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err);\n\n      _urlencoded(req, res, next);\n    });\n  };\n}\n/**\r\n * Create a getter for loading a parser.\r\n * @private\r\n */\n\n\nfunction createParserGetter(name) {\n  return function get() {\n    return loadParser(name);\n  };\n}\n/**\r\n * Load a parser module.\r\n * @private\r\n */\n\n\nfunction loadParser(parserName) {\n  var parser = parsers[parserName];\n\n  if (parser !== undefined) {\n    return parser;\n  } // this uses a switch for static require analysis\n\n\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json');\n      break;\n\n    case 'raw':\n      parser = require('./lib/types/raw');\n      break;\n\n    case 'text':\n      parser = require('./lib/types/text');\n      break;\n\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded');\n      break;\n  } // store to prevent invoking require()\n\n\n  return parsers[parserName] = parser;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "deprecate",
        "require",
        "parsers",
        "Object",
        "create",
        "exports",
        "module",
        "function",
        "bodyParser",
        "defineProperty",
        "configurable",
        "enumerable",
        "get",
        "createParserGetter",
        "options",
        "opts",
        "prop",
        "_urlencoded",
        "urlencoded",
        "_json",
        "json",
        "req",
        "res",
        "next",
        "err",
        "name",
        "loadParser",
        "parserName",
        "parser",
        "undefined"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\",
      "sourcesContent": [
        "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar deprecate = require('depd')('body-parser')\r\n\r\n/**\r\n * Cache of loaded parsers.\r\n * @private\r\n */\r\n\r\nvar parsers = Object.create(null)\r\n\r\n/**\r\n * @typedef Parsers\r\n * @type {function}\r\n * @property {function} json\r\n * @property {function} raw\r\n * @property {function} text\r\n * @property {function} urlencoded\r\n */\r\n\r\n/**\r\n * Module exports.\r\n * @type {Parsers}\r\n */\r\n\r\nexports = module.exports = deprecate.function(bodyParser,\r\n  'bodyParser: use individual json/urlencoded middlewares')\r\n\r\n/**\r\n * JSON parser.\r\n * @public\r\n */\r\n\r\nObject.defineProperty(exports, 'json', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: createParserGetter('json')\r\n})\r\n\r\n/**\r\n * Raw parser.\r\n * @public\r\n */\r\n\r\nObject.defineProperty(exports, 'raw', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: createParserGetter('raw')\r\n})\r\n\r\n/**\r\n * Text parser.\r\n * @public\r\n */\r\n\r\nObject.defineProperty(exports, 'text', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: createParserGetter('text')\r\n})\r\n\r\n/**\r\n * URL-encoded parser.\r\n * @public\r\n */\r\n\r\nObject.defineProperty(exports, 'urlencoded', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: createParserGetter('urlencoded')\r\n})\r\n\r\n/**\r\n * Create a middleware to parse json and urlencoded bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @deprecated\r\n * @public\r\n */\r\n\r\nfunction bodyParser (options) {\r\n  var opts = {}\r\n\r\n  // exclude type option\r\n  if (options) {\r\n    for (var prop in options) {\r\n      if (prop !== 'type') {\r\n        opts[prop] = options[prop]\r\n      }\r\n    }\r\n  }\r\n\r\n  var _urlencoded = exports.urlencoded(opts)\r\n  var _json = exports.json(opts)\r\n\r\n  return function bodyParser (req, res, next) {\r\n    _json(req, res, function (err) {\r\n      if (err) return next(err)\r\n      _urlencoded(req, res, next)\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Create a getter for loading a parser.\r\n * @private\r\n */\r\n\r\nfunction createParserGetter (name) {\r\n  return function get () {\r\n    return loadParser(name)\r\n  }\r\n}\r\n\r\n/**\r\n * Load a parser module.\r\n * @private\r\n */\r\n\r\nfunction loadParser (parserName) {\r\n  var parser = parsers[parserName]\r\n\r\n  if (parser !== undefined) {\r\n    return parser\r\n  }\r\n\r\n  // this uses a switch for static require analysis\r\n  switch (parserName) {\r\n    case 'json':\r\n      parser = require('./lib/types/json')\r\n      break\r\n    case 'raw':\r\n      parser = require('./lib/types/raw')\r\n      break\r\n    case 'text':\r\n      parser = require('./lib/types/text')\r\n      break\r\n    case 'urlencoded':\r\n      parser = require('./lib/types/urlencoded')\r\n      break\r\n  }\r\n\r\n  // store to prevent invoking require()\r\n  return (parsers[parserName] = parser)\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210697
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\depd\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\depd\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * depd\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n/**\r\n * Module dependencies.\r\n */\nvar callSiteToString = require('./lib/compat').callSiteToString;\n\nvar eventListenerCount = require('./lib/compat').eventListenerCount;\n\nvar relative = require('path').relative;\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = depd;\n/**\r\n * Get the path to base files on.\r\n */\n\nvar basePath = process.cwd();\n/**\r\n * Determine if namespace is contained in the string.\r\n */\n\nfunction containsNamespace(str, namespace) {\n  var vals = str.split(/[ ,]+/);\n  var ns = String(namespace).toLowerCase();\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]; // namespace contained\n\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Convert a data descriptor to accessor descriptor.\r\n */\n\n\nfunction convertDataDescriptorToAccessor(obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n  var value = descriptor.value;\n\n  descriptor.get = function getter() {\n    return value;\n  };\n\n  if (descriptor.writable) {\n    descriptor.set = function setter(val) {\n      return value = val;\n    };\n  }\n\n  delete descriptor.value;\n  delete descriptor.writable;\n  Object.defineProperty(obj, prop, descriptor);\n  return descriptor;\n}\n/**\r\n * Create arguments string to keep arity.\r\n */\n\n\nfunction createArgumentsString(arity) {\n  var str = '';\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i;\n  }\n\n  return str.substr(2);\n}\n/**\r\n * Create stack string from stack.\r\n */\n\n\nfunction createStackString(stack) {\n  var str = this.name + ': ' + this.namespace;\n\n  if (this.message) {\n    str += ' deprecated ' + this.message;\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + callSiteToString(stack[i]);\n  }\n\n  return str;\n}\n/**\r\n * Create deprecate for namespace in caller.\r\n */\n\n\nfunction depd(namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required');\n  }\n\n  var stack = getStack();\n  var site = callSiteLocation(stack[1]);\n  var file = site[0];\n\n  function deprecate(message) {\n    // call to self as log\n    log.call(deprecate, message);\n  }\n\n  deprecate._file = file;\n  deprecate._ignored = isignored(namespace);\n  deprecate._namespace = namespace;\n  deprecate._traced = istraced(namespace);\n  deprecate._warned = Object.create(null);\n  deprecate.function = wrapfunction;\n  deprecate.property = wrapproperty;\n  return deprecate;\n}\n/**\r\n * Determine if namespace is ignored.\r\n */\n\n\nfunction isignored(namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true;\n  }\n\n  var str = process.env.NO_DEPRECATION || ''; // namespace ignored\n\n  return containsNamespace(str, namespace);\n}\n/**\r\n * Determine if namespace is traced.\r\n */\n\n\nfunction istraced(namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true;\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''; // namespace traced\n\n  return containsNamespace(str, namespace);\n}\n/**\r\n * Display deprecation message.\r\n */\n\n\nfunction log(message, site) {\n  var haslisteners = eventListenerCount(process, 'deprecation') !== 0; // abort early if no destination\n\n  if (!haslisteners && this._ignored) {\n    return;\n  }\n\n  var caller;\n  var callFile;\n  var callSite;\n  var depSite;\n  var i = 0;\n  var seen = false;\n  var stack = getStack();\n  var file = this._file;\n\n  if (site) {\n    // provided site\n    depSite = site;\n    callSite = callSiteLocation(stack[1]);\n    callSite.name = depSite.name;\n    file = callSite[0];\n  } else {\n    // get call site\n    i = 2;\n    depSite = callSiteLocation(stack[i]);\n    callSite = depSite;\n  } // get caller of deprecated thing in relation to file\n\n\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i]);\n    callFile = caller[0];\n\n    if (callFile === file) {\n      seen = true;\n    } else if (callFile === this._file) {\n      file = this._file;\n    } else if (seen) {\n      break;\n    }\n  }\n\n  var key = caller ? depSite.join(':') + '__' + caller.join(':') : undefined;\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return;\n  }\n\n  this._warned[key] = true; // generate automatic message from call site\n\n  var msg = message;\n\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name ? defaultMessage(depSite) : defaultMessage(callSite);\n  } // emit deprecation if listeners exist\n\n\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i));\n    process.emit('deprecation', err);\n    return;\n  } // format and write message\n\n\n  var format = process.stderr.isTTY ? formatColor : formatPlain;\n  var output = format.call(this, msg, caller, stack.slice(i));\n  process.stderr.write(output + '\\n', 'utf8');\n}\n/**\r\n * Get call site location as array.\r\n */\n\n\nfunction callSiteLocation(callSite) {\n  var file = callSite.getFileName() || '<anonymous>';\n  var line = callSite.getLineNumber();\n  var colm = callSite.getColumnNumber();\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file;\n  }\n\n  var site = [file, line, colm];\n  site.callSite = callSite;\n  site.name = callSite.getFunctionName();\n  return site;\n}\n/**\r\n * Generate a default message from the site.\r\n */\n\n\nfunction defaultMessage(site) {\n  var callSite = site.callSite;\n  var funcName = site.name; // make useful anonymous name\n\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>';\n  }\n\n  var context = callSite.getThis();\n  var typeName = context && callSite.getTypeName(); // ignore useless type name\n\n  if (typeName === 'Object') {\n    typeName = undefined;\n  } // make useful type name\n\n\n  if (typeName === 'Function') {\n    typeName = context.name || typeName;\n  }\n\n  return typeName && callSite.getMethodName() ? typeName + '.' + funcName : funcName;\n}\n/**\r\n * Format deprecation message without color.\r\n */\n\n\nfunction formatPlain(msg, caller, stack) {\n  var timestamp = new Date().toUTCString();\n  var formatted = timestamp + ' ' + this._namespace + ' deprecated ' + msg; // add stack trace\n\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + callSiteToString(stack[i]);\n    }\n\n    return formatted;\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller);\n  }\n\n  return formatted;\n}\n/**\r\n * Format deprecation message with color.\r\n */\n\n\nfunction formatColor(msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n  ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n  ' \\x1b[0m' + msg + '\\x1b[39m'; // reset\n  // add stack trace\n\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m'; // cyan\n    }\n\n    return formatted;\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m'; // cyan\n  }\n\n  return formatted;\n}\n/**\r\n * Format call site location.\r\n */\n\n\nfunction formatLocation(callSite) {\n  return relative(basePath, callSite[0]) + ':' + callSite[1] + ':' + callSite[2];\n}\n/**\r\n * Get the stack as array of call sites.\r\n */\n\n\nfunction getStack() {\n  var limit = Error.stackTraceLimit;\n  var obj = {};\n  var prep = Error.prepareStackTrace;\n  Error.prepareStackTrace = prepareObjectStackTrace;\n  Error.stackTraceLimit = Math.max(10, limit); // capture the stack\n\n  Error.captureStackTrace(obj); // slice this function off the top\n\n  var stack = obj.stack.slice(1);\n  Error.prepareStackTrace = prep;\n  Error.stackTraceLimit = limit;\n  return stack;\n}\n/**\r\n * Capture call site stack from v8.\r\n */\n\n\nfunction prepareObjectStackTrace(obj, stack) {\n  return stack;\n}\n/**\r\n * Return a wrapped function in a deprecation message.\r\n */\n\n\nfunction wrapfunction(fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function');\n  }\n\n  var args = createArgumentsString(fn.length);\n  var deprecate = this; // eslint-disable-line no-unused-vars\n\n  var stack = getStack();\n  var site = callSiteLocation(stack[1]);\n  site.name = fn.name; // eslint-disable-next-line no-eval\n\n  var deprecatedfn = eval('(function (' + args + ') {\\n' + '\"use strict\"\\n' + 'log.call(deprecate, message, site)\\n' + 'return fn.apply(this, arguments)\\n' + '})');\n  return deprecatedfn;\n}\n/**\r\n * Wrap property in a deprecation message.\r\n */\n\n\nfunction wrapproperty(obj, prop, message) {\n  if (!obj || typeof obj !== 'object' && typeof obj !== 'function') {\n    throw new TypeError('argument obj must be object');\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object');\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable');\n  }\n\n  var deprecate = this;\n  var stack = getStack();\n  var site = callSiteLocation(stack[1]); // set site name\n\n  site.name = prop; // convert data descriptor\n\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message);\n  }\n\n  var get = descriptor.get;\n  var set = descriptor.set; // wrap getter\n\n  if (typeof get === 'function') {\n    descriptor.get = function getter() {\n      log.call(deprecate, message, site);\n      return get.apply(this, arguments);\n    };\n  } // wrap setter\n\n\n  if (typeof set === 'function') {\n    descriptor.set = function setter() {\n      log.call(deprecate, message, site);\n      return set.apply(this, arguments);\n    };\n  }\n\n  Object.defineProperty(obj, prop, descriptor);\n}\n/**\r\n * Create DeprecationError for deprecation\r\n */\n\n\nfunction DeprecationError(namespace, message, stack) {\n  var error = new Error();\n  var stackString;\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  });\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  });\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  });\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  });\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString;\n      } // prepare stack trace\n\n\n      return stackString = createStackString.call(this, stack);\n    },\n    set: function setter(val) {\n      stackString = val;\n    }\n  });\n  return error;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "callSiteToString",
        "require",
        "eventListenerCount",
        "relative",
        "module",
        "exports",
        "depd",
        "basePath",
        "process",
        "cwd",
        "containsNamespace",
        "str",
        "namespace",
        "vals",
        "split",
        "ns",
        "String",
        "toLowerCase",
        "i",
        "length",
        "val",
        "convertDataDescriptorToAccessor",
        "obj",
        "prop",
        "message",
        "descriptor",
        "Object",
        "getOwnPropertyDescriptor",
        "value",
        "get",
        "getter",
        "writable",
        "set",
        "setter",
        "defineProperty",
        "createArgumentsString",
        "arity",
        "substr",
        "createStackString",
        "stack",
        "name",
        "TypeError",
        "getStack",
        "site",
        "callSiteLocation",
        "file",
        "deprecate",
        "log",
        "call",
        "_file",
        "_ignored",
        "isignored",
        "_namespace",
        "_traced",
        "istraced",
        "_warned",
        "create",
        "function",
        "wrapfunction",
        "property",
        "wrapproperty",
        "noDeprecation",
        "env",
        "NO_DEPRECATION",
        "traceDeprecation",
        "TRACE_DEPRECATION",
        "haslisteners",
        "caller",
        "callFile",
        "callSite",
        "depSite",
        "seen",
        "key",
        "join",
        "undefined",
        "msg",
        "defaultMessage",
        "err",
        "DeprecationError",
        "slice",
        "emit",
        "format",
        "stderr",
        "isTTY",
        "formatColor",
        "formatPlain",
        "output",
        "write",
        "getFileName",
        "line",
        "getLineNumber",
        "colm",
        "getColumnNumber",
        "isEval",
        "getEvalOrigin",
        "getFunctionName",
        "funcName",
        "formatLocation",
        "context",
        "getThis",
        "typeName",
        "getTypeName",
        "getMethodName",
        "timestamp",
        "Date",
        "toUTCString",
        "formatted",
        "limit",
        "Error",
        "stackTraceLimit",
        "prep",
        "prepareStackTrace",
        "prepareObjectStackTrace",
        "Math",
        "max",
        "captureStackTrace",
        "fn",
        "args",
        "deprecatedfn",
        "eval",
        "configurable",
        "apply",
        "arguments",
        "error",
        "stackString",
        "enumerable"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\",
      "sourcesContent": [
        "/*!\r\n * depd\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar callSiteToString = require('./lib/compat').callSiteToString\r\nvar eventListenerCount = require('./lib/compat').eventListenerCount\r\nvar relative = require('path').relative\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = depd\r\n\r\n/**\r\n * Get the path to base files on.\r\n */\r\n\r\nvar basePath = process.cwd()\r\n\r\n/**\r\n * Determine if namespace is contained in the string.\r\n */\r\n\r\nfunction containsNamespace (str, namespace) {\r\n  var vals = str.split(/[ ,]+/)\r\n  var ns = String(namespace).toLowerCase()\r\n\r\n  for (var i = 0; i < vals.length; i++) {\r\n    var val = vals[i]\r\n\r\n    // namespace contained\r\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Convert a data descriptor to accessor descriptor.\r\n */\r\n\r\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\r\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\r\n  var value = descriptor.value\r\n\r\n  descriptor.get = function getter () { return value }\r\n\r\n  if (descriptor.writable) {\r\n    descriptor.set = function setter (val) { return (value = val) }\r\n  }\r\n\r\n  delete descriptor.value\r\n  delete descriptor.writable\r\n\r\n  Object.defineProperty(obj, prop, descriptor)\r\n\r\n  return descriptor\r\n}\r\n\r\n/**\r\n * Create arguments string to keep arity.\r\n */\r\n\r\nfunction createArgumentsString (arity) {\r\n  var str = ''\r\n\r\n  for (var i = 0; i < arity; i++) {\r\n    str += ', arg' + i\r\n  }\r\n\r\n  return str.substr(2)\r\n}\r\n\r\n/**\r\n * Create stack string from stack.\r\n */\r\n\r\nfunction createStackString (stack) {\r\n  var str = this.name + ': ' + this.namespace\r\n\r\n  if (this.message) {\r\n    str += ' deprecated ' + this.message\r\n  }\r\n\r\n  for (var i = 0; i < stack.length; i++) {\r\n    str += '\\n    at ' + callSiteToString(stack[i])\r\n  }\r\n\r\n  return str\r\n}\r\n\r\n/**\r\n * Create deprecate for namespace in caller.\r\n */\r\n\r\nfunction depd (namespace) {\r\n  if (!namespace) {\r\n    throw new TypeError('argument namespace is required')\r\n  }\r\n\r\n  var stack = getStack()\r\n  var site = callSiteLocation(stack[1])\r\n  var file = site[0]\r\n\r\n  function deprecate (message) {\r\n    // call to self as log\r\n    log.call(deprecate, message)\r\n  }\r\n\r\n  deprecate._file = file\r\n  deprecate._ignored = isignored(namespace)\r\n  deprecate._namespace = namespace\r\n  deprecate._traced = istraced(namespace)\r\n  deprecate._warned = Object.create(null)\r\n\r\n  deprecate.function = wrapfunction\r\n  deprecate.property = wrapproperty\r\n\r\n  return deprecate\r\n}\r\n\r\n/**\r\n * Determine if namespace is ignored.\r\n */\r\n\r\nfunction isignored (namespace) {\r\n  /* istanbul ignore next: tested in a child processs */\r\n  if (process.noDeprecation) {\r\n    // --no-deprecation support\r\n    return true\r\n  }\r\n\r\n  var str = process.env.NO_DEPRECATION || ''\r\n\r\n  // namespace ignored\r\n  return containsNamespace(str, namespace)\r\n}\r\n\r\n/**\r\n * Determine if namespace is traced.\r\n */\r\n\r\nfunction istraced (namespace) {\r\n  /* istanbul ignore next: tested in a child processs */\r\n  if (process.traceDeprecation) {\r\n    // --trace-deprecation support\r\n    return true\r\n  }\r\n\r\n  var str = process.env.TRACE_DEPRECATION || ''\r\n\r\n  // namespace traced\r\n  return containsNamespace(str, namespace)\r\n}\r\n\r\n/**\r\n * Display deprecation message.\r\n */\r\n\r\nfunction log (message, site) {\r\n  var haslisteners = eventListenerCount(process, 'deprecation') !== 0\r\n\r\n  // abort early if no destination\r\n  if (!haslisteners && this._ignored) {\r\n    return\r\n  }\r\n\r\n  var caller\r\n  var callFile\r\n  var callSite\r\n  var depSite\r\n  var i = 0\r\n  var seen = false\r\n  var stack = getStack()\r\n  var file = this._file\r\n\r\n  if (site) {\r\n    // provided site\r\n    depSite = site\r\n    callSite = callSiteLocation(stack[1])\r\n    callSite.name = depSite.name\r\n    file = callSite[0]\r\n  } else {\r\n    // get call site\r\n    i = 2\r\n    depSite = callSiteLocation(stack[i])\r\n    callSite = depSite\r\n  }\r\n\r\n  // get caller of deprecated thing in relation to file\r\n  for (; i < stack.length; i++) {\r\n    caller = callSiteLocation(stack[i])\r\n    callFile = caller[0]\r\n\r\n    if (callFile === file) {\r\n      seen = true\r\n    } else if (callFile === this._file) {\r\n      file = this._file\r\n    } else if (seen) {\r\n      break\r\n    }\r\n  }\r\n\r\n  var key = caller\r\n    ? depSite.join(':') + '__' + caller.join(':')\r\n    : undefined\r\n\r\n  if (key !== undefined && key in this._warned) {\r\n    // already warned\r\n    return\r\n  }\r\n\r\n  this._warned[key] = true\r\n\r\n  // generate automatic message from call site\r\n  var msg = message\r\n  if (!msg) {\r\n    msg = callSite === depSite || !callSite.name\r\n      ? defaultMessage(depSite)\r\n      : defaultMessage(callSite)\r\n  }\r\n\r\n  // emit deprecation if listeners exist\r\n  if (haslisteners) {\r\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\r\n    process.emit('deprecation', err)\r\n    return\r\n  }\r\n\r\n  // format and write message\r\n  var format = process.stderr.isTTY\r\n    ? formatColor\r\n    : formatPlain\r\n  var output = format.call(this, msg, caller, stack.slice(i))\r\n  process.stderr.write(output + '\\n', 'utf8')\r\n}\r\n\r\n/**\r\n * Get call site location as array.\r\n */\r\n\r\nfunction callSiteLocation (callSite) {\r\n  var file = callSite.getFileName() || '<anonymous>'\r\n  var line = callSite.getLineNumber()\r\n  var colm = callSite.getColumnNumber()\r\n\r\n  if (callSite.isEval()) {\r\n    file = callSite.getEvalOrigin() + ', ' + file\r\n  }\r\n\r\n  var site = [file, line, colm]\r\n\r\n  site.callSite = callSite\r\n  site.name = callSite.getFunctionName()\r\n\r\n  return site\r\n}\r\n\r\n/**\r\n * Generate a default message from the site.\r\n */\r\n\r\nfunction defaultMessage (site) {\r\n  var callSite = site.callSite\r\n  var funcName = site.name\r\n\r\n  // make useful anonymous name\r\n  if (!funcName) {\r\n    funcName = '<anonymous@' + formatLocation(site) + '>'\r\n  }\r\n\r\n  var context = callSite.getThis()\r\n  var typeName = context && callSite.getTypeName()\r\n\r\n  // ignore useless type name\r\n  if (typeName === 'Object') {\r\n    typeName = undefined\r\n  }\r\n\r\n  // make useful type name\r\n  if (typeName === 'Function') {\r\n    typeName = context.name || typeName\r\n  }\r\n\r\n  return typeName && callSite.getMethodName()\r\n    ? typeName + '.' + funcName\r\n    : funcName\r\n}\r\n\r\n/**\r\n * Format deprecation message without color.\r\n */\r\n\r\nfunction formatPlain (msg, caller, stack) {\r\n  var timestamp = new Date().toUTCString()\r\n\r\n  var formatted = timestamp +\r\n    ' ' + this._namespace +\r\n    ' deprecated ' + msg\r\n\r\n  // add stack trace\r\n  if (this._traced) {\r\n    for (var i = 0; i < stack.length; i++) {\r\n      formatted += '\\n    at ' + callSiteToString(stack[i])\r\n    }\r\n\r\n    return formatted\r\n  }\r\n\r\n  if (caller) {\r\n    formatted += ' at ' + formatLocation(caller)\r\n  }\r\n\r\n  return formatted\r\n}\r\n\r\n/**\r\n * Format deprecation message with color.\r\n */\r\n\r\nfunction formatColor (msg, caller, stack) {\r\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\r\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\r\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\r\n\r\n  // add stack trace\r\n  if (this._traced) {\r\n    for (var i = 0; i < stack.length; i++) {\r\n      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m' // cyan\r\n    }\r\n\r\n    return formatted\r\n  }\r\n\r\n  if (caller) {\r\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\r\n  }\r\n\r\n  return formatted\r\n}\r\n\r\n/**\r\n * Format call site location.\r\n */\r\n\r\nfunction formatLocation (callSite) {\r\n  return relative(basePath, callSite[0]) +\r\n    ':' + callSite[1] +\r\n    ':' + callSite[2]\r\n}\r\n\r\n/**\r\n * Get the stack as array of call sites.\r\n */\r\n\r\nfunction getStack () {\r\n  var limit = Error.stackTraceLimit\r\n  var obj = {}\r\n  var prep = Error.prepareStackTrace\r\n\r\n  Error.prepareStackTrace = prepareObjectStackTrace\r\n  Error.stackTraceLimit = Math.max(10, limit)\r\n\r\n  // capture the stack\r\n  Error.captureStackTrace(obj)\r\n\r\n  // slice this function off the top\r\n  var stack = obj.stack.slice(1)\r\n\r\n  Error.prepareStackTrace = prep\r\n  Error.stackTraceLimit = limit\r\n\r\n  return stack\r\n}\r\n\r\n/**\r\n * Capture call site stack from v8.\r\n */\r\n\r\nfunction prepareObjectStackTrace (obj, stack) {\r\n  return stack\r\n}\r\n\r\n/**\r\n * Return a wrapped function in a deprecation message.\r\n */\r\n\r\nfunction wrapfunction (fn, message) {\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('argument fn must be a function')\r\n  }\r\n\r\n  var args = createArgumentsString(fn.length)\r\n  var deprecate = this // eslint-disable-line no-unused-vars\r\n  var stack = getStack()\r\n  var site = callSiteLocation(stack[1])\r\n\r\n  site.name = fn.name\r\n\r\n   // eslint-disable-next-line no-eval\r\n  var deprecatedfn = eval('(function (' + args + ') {\\n' +\r\n    '\"use strict\"\\n' +\r\n    'log.call(deprecate, message, site)\\n' +\r\n    'return fn.apply(this, arguments)\\n' +\r\n    '})')\r\n\r\n  return deprecatedfn\r\n}\r\n\r\n/**\r\n * Wrap property in a deprecation message.\r\n */\r\n\r\nfunction wrapproperty (obj, prop, message) {\r\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\r\n    throw new TypeError('argument obj must be object')\r\n  }\r\n\r\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\r\n\r\n  if (!descriptor) {\r\n    throw new TypeError('must call property on owner object')\r\n  }\r\n\r\n  if (!descriptor.configurable) {\r\n    throw new TypeError('property must be configurable')\r\n  }\r\n\r\n  var deprecate = this\r\n  var stack = getStack()\r\n  var site = callSiteLocation(stack[1])\r\n\r\n  // set site name\r\n  site.name = prop\r\n\r\n  // convert data descriptor\r\n  if ('value' in descriptor) {\r\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\r\n  }\r\n\r\n  var get = descriptor.get\r\n  var set = descriptor.set\r\n\r\n  // wrap getter\r\n  if (typeof get === 'function') {\r\n    descriptor.get = function getter () {\r\n      log.call(deprecate, message, site)\r\n      return get.apply(this, arguments)\r\n    }\r\n  }\r\n\r\n  // wrap setter\r\n  if (typeof set === 'function') {\r\n    descriptor.set = function setter () {\r\n      log.call(deprecate, message, site)\r\n      return set.apply(this, arguments)\r\n    }\r\n  }\r\n\r\n  Object.defineProperty(obj, prop, descriptor)\r\n}\r\n\r\n/**\r\n * Create DeprecationError for deprecation\r\n */\r\n\r\nfunction DeprecationError (namespace, message, stack) {\r\n  var error = new Error()\r\n  var stackString\r\n\r\n  Object.defineProperty(error, 'constructor', {\r\n    value: DeprecationError\r\n  })\r\n\r\n  Object.defineProperty(error, 'message', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: message,\r\n    writable: true\r\n  })\r\n\r\n  Object.defineProperty(error, 'name', {\r\n    enumerable: false,\r\n    configurable: true,\r\n    value: 'DeprecationError',\r\n    writable: true\r\n  })\r\n\r\n  Object.defineProperty(error, 'namespace', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: namespace,\r\n    writable: true\r\n  })\r\n\r\n  Object.defineProperty(error, 'stack', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: function () {\r\n      if (stackString !== undefined) {\r\n        return stackString\r\n      }\r\n\r\n      // prepare stack trace\r\n      return (stackString = createStackString.call(this, stack))\r\n    },\r\n    set: function setter (val) {\r\n      stackString = val\r\n    }\r\n  })\r\n\r\n  return error\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211087
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\depd\\\\lib\\\\compat\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\depd\\\\lib\\\\compat\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\lib\\compat\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\lib\\compat\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\lib\\compat\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\lib\\compat\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\lib\\compat\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * depd\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar EventEmitter = require('events').EventEmitter;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString() {\n  var limit = Error.stackTraceLimit;\n  var obj = {};\n  var prep = Error.prepareStackTrace;\n\n  function prepareObjectStackTrace(obj, stack) {\n    return stack;\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace;\n  Error.stackTraceLimit = 2; // capture the stack\n\n  Error.captureStackTrace(obj); // slice the stack\n\n  var stack = obj.stack.slice();\n  Error.prepareStackTrace = prep;\n  Error.stackTraceLimit = limit;\n  return stack[0].toString ? toString : require('./callsite-tostring');\n});\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount() {\n  return EventEmitter.listenerCount || require('./event-listener-count');\n});\n/**\r\n * Define a lazy property.\r\n */\n\nfunction lazyProperty(obj, prop, getter) {\n  function get() {\n    var val = getter();\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    });\n    return val;\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  });\n}\n/**\r\n * Call toString() on the obj\r\n */\n\n\nfunction toString(obj) {\n  return obj.toString();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsInJlcXVpcmUiLCJsYXp5UHJvcGVydHkiLCJtb2R1bGUiLCJleHBvcnRzIiwiY2FsbFNpdGVUb1N0cmluZyIsImxpbWl0IiwiRXJyb3IiLCJzdGFja1RyYWNlTGltaXQiLCJvYmoiLCJwcmVwIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJwcmVwYXJlT2JqZWN0U3RhY2tUcmFjZSIsInN0YWNrIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJzbGljZSIsInRvU3RyaW5nIiwiZXZlbnRMaXN0ZW5lckNvdW50IiwibGlzdGVuZXJDb3VudCIsInByb3AiLCJnZXR0ZXIiLCJnZXQiLCJ2YWwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCRCxZQUFyQztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQUUsWUFBWSxDQUFDQyxNQUFNLENBQUNDLE9BQVIsRUFBaUIsa0JBQWpCLEVBQXFDLFNBQVNDLGdCQUFULEdBQTZCO0FBQzVFLE1BQUlDLEtBQUssR0FBR0MsS0FBSyxDQUFDQyxlQUFsQjtBQUNBLE1BQUlDLEdBQUcsR0FBRyxFQUFWO0FBQ0EsTUFBSUMsSUFBSSxHQUFHSCxLQUFLLENBQUNJLGlCQUFqQjs7QUFFQSxXQUFTQyx1QkFBVCxDQUFrQ0gsR0FBbEMsRUFBdUNJLEtBQXZDLEVBQThDO0FBQzVDLFdBQU9BLEtBQVA7QUFDRDs7QUFFRE4sRUFBQUEsS0FBSyxDQUFDSSxpQkFBTixHQUEwQkMsdUJBQTFCO0FBQ0FMLEVBQUFBLEtBQUssQ0FBQ0MsZUFBTixHQUF3QixDQUF4QixDQVY0RSxDQVk1RTs7QUFDQUQsRUFBQUEsS0FBSyxDQUFDTyxpQkFBTixDQUF3QkwsR0FBeEIsRUFiNEUsQ0FlNUU7O0FBQ0EsTUFBSUksS0FBSyxHQUFHSixHQUFHLENBQUNJLEtBQUosQ0FBVUUsS0FBVixFQUFaO0FBRUFSLEVBQUFBLEtBQUssQ0FBQ0ksaUJBQU4sR0FBMEJELElBQTFCO0FBQ0FILEVBQUFBLEtBQUssQ0FBQ0MsZUFBTixHQUF3QkYsS0FBeEI7QUFFQSxTQUFPTyxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNHLFFBQVQsR0FBb0JBLFFBQXBCLEdBQStCZixPQUFPLENBQUMscUJBQUQsQ0FBN0M7QUFDRCxDQXRCVyxDQUFaO0FBd0JBQyxZQUFZLENBQUNDLE1BQU0sQ0FBQ0MsT0FBUixFQUFpQixvQkFBakIsRUFBdUMsU0FBU2Esa0JBQVQsR0FBK0I7QUFDaEYsU0FBT2pCLFlBQVksQ0FBQ2tCLGFBQWIsSUFBOEJqQixPQUFPLENBQUMsd0JBQUQsQ0FBNUM7QUFDRCxDQUZXLENBQVo7QUFJQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0MsWUFBVCxDQUF1Qk8sR0FBdkIsRUFBNEJVLElBQTVCLEVBQWtDQyxNQUFsQyxFQUEwQztBQUN4QyxXQUFTQyxHQUFULEdBQWdCO0FBQ2QsUUFBSUMsR0FBRyxHQUFHRixNQUFNLEVBQWhCO0FBRUFHLElBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQmYsR0FBdEIsRUFBMkJVLElBQTNCLEVBQWlDO0FBQy9CTSxNQUFBQSxZQUFZLEVBQUUsSUFEaUI7QUFFL0JDLE1BQUFBLFVBQVUsRUFBRSxJQUZtQjtBQUcvQkMsTUFBQUEsS0FBSyxFQUFFTDtBQUh3QixLQUFqQztBQU1BLFdBQU9BLEdBQVA7QUFDRDs7QUFFREMsRUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCZixHQUF0QixFQUEyQlUsSUFBM0IsRUFBaUM7QUFDL0JNLElBQUFBLFlBQVksRUFBRSxJQURpQjtBQUUvQkMsSUFBQUEsVUFBVSxFQUFFLElBRm1CO0FBRy9CTCxJQUFBQSxHQUFHLEVBQUVBO0FBSDBCLEdBQWpDO0FBS0Q7QUFFRDtBQUNBO0FBQ0E7OztBQUVBLFNBQVNMLFFBQVQsQ0FBbUJQLEdBQW5CLEVBQXdCO0FBQ3RCLFNBQU9BLEdBQUcsQ0FBQ08sUUFBSixFQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFxub2RlX21vZHVsZXNcXGRlcGRcXGxpYlxcY29tcGF0XFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGVwZFxyXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxubGF6eVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCAnY2FsbFNpdGVUb1N0cmluZycsIGZ1bmN0aW9uIGNhbGxTaXRlVG9TdHJpbmcgKCkge1xyXG4gIHZhciBsaW1pdCA9IEVycm9yLnN0YWNrVHJhY2VMaW1pdFxyXG4gIHZhciBvYmogPSB7fVxyXG4gIHZhciBwcmVwID0gRXJyb3IucHJlcGFyZVN0YWNrVHJhY2VcclxuXHJcbiAgZnVuY3Rpb24gcHJlcGFyZU9iamVjdFN0YWNrVHJhY2UgKG9iaiwgc3RhY2spIHtcclxuICAgIHJldHVybiBzdGFja1xyXG4gIH1cclxuXHJcbiAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSBwcmVwYXJlT2JqZWN0U3RhY2tUcmFjZVxyXG4gIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IDJcclxuXHJcbiAgLy8gY2FwdHVyZSB0aGUgc3RhY2tcclxuICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShvYmopXHJcblxyXG4gIC8vIHNsaWNlIHRoZSBzdGFja1xyXG4gIHZhciBzdGFjayA9IG9iai5zdGFjay5zbGljZSgpXHJcblxyXG4gIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gcHJlcFxyXG4gIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IGxpbWl0XHJcblxyXG4gIHJldHVybiBzdGFja1swXS50b1N0cmluZyA/IHRvU3RyaW5nIDogcmVxdWlyZSgnLi9jYWxsc2l0ZS10b3N0cmluZycpXHJcbn0pXHJcblxyXG5sYXp5UHJvcGVydHkobW9kdWxlLmV4cG9ydHMsICdldmVudExpc3RlbmVyQ291bnQnLCBmdW5jdGlvbiBldmVudExpc3RlbmVyQ291bnQgKCkge1xyXG4gIHJldHVybiBFdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCB8fCByZXF1aXJlKCcuL2V2ZW50LWxpc3RlbmVyLWNvdW50JylcclxufSlcclxuXHJcbi8qKlxyXG4gKiBEZWZpbmUgYSBsYXp5IHByb3BlcnR5LlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGxhenlQcm9wZXJ0eSAob2JqLCBwcm9wLCBnZXR0ZXIpIHtcclxuICBmdW5jdGlvbiBnZXQgKCkge1xyXG4gICAgdmFyIHZhbCA9IGdldHRlcigpXHJcblxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgcHJvcCwge1xyXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgIHZhbHVlOiB2YWxcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIHZhbFxyXG4gIH1cclxuXHJcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgcHJvcCwge1xyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGdldDogZ2V0XHJcbiAgfSlcclxufVxyXG5cclxuLyoqXHJcbiAqIENhbGwgdG9TdHJpbmcoKSBvbiB0aGUgb2JqXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gdG9TdHJpbmcgKG9iaikge1xyXG4gIHJldHVybiBvYmoudG9TdHJpbmcoKVxyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "EventEmitter",
        "require",
        "lazyProperty",
        "module",
        "exports",
        "callSiteToString",
        "limit",
        "Error",
        "stackTraceLimit",
        "obj",
        "prep",
        "prepareStackTrace",
        "prepareObjectStackTrace",
        "stack",
        "captureStackTrace",
        "slice",
        "toString",
        "eventListenerCount",
        "listenerCount",
        "prop",
        "getter",
        "get",
        "val",
        "Object",
        "defineProperty",
        "configurable",
        "enumerable",
        "value"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAArC;AAEA;AACA;AACA;AACA;;;AAEAE,YAAY,CAACC,MAAM,CAACC,OAAR,EAAiB,kBAAjB,EAAqC,SAASC,gBAAT,GAA6B;AAC5E,MAAIC,KAAK,GAAGC,KAAK,CAACC,eAAlB;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAGH,KAAK,CAACI,iBAAjB;;AAEA,WAASC,uBAAT,CAAkCH,GAAlC,EAAuCI,KAAvC,EAA8C;AAC5C,WAAOA,KAAP;AACD;;AAEDN,EAAAA,KAAK,CAACI,iBAAN,GAA0BC,uBAA1B;AACAL,EAAAA,KAAK,CAACC,eAAN,GAAwB,CAAxB,CAV4E,CAY5E;;AACAD,EAAAA,KAAK,CAACO,iBAAN,CAAwBL,GAAxB,EAb4E,CAe5E;;AACA,MAAII,KAAK,GAAGJ,GAAG,CAACI,KAAJ,CAAUE,KAAV,EAAZ;AAEAR,EAAAA,KAAK,CAACI,iBAAN,GAA0BD,IAA1B;AACAH,EAAAA,KAAK,CAACC,eAAN,GAAwBF,KAAxB;AAEA,SAAOO,KAAK,CAAC,CAAD,CAAL,CAASG,QAAT,GAAoBA,QAApB,GAA+Bf,OAAO,CAAC,qBAAD,CAA7C;AACD,CAtBW,CAAZ;AAwBAC,YAAY,CAACC,MAAM,CAACC,OAAR,EAAiB,oBAAjB,EAAuC,SAASa,kBAAT,GAA+B;AAChF,SAAOjB,YAAY,CAACkB,aAAb,IAA8BjB,OAAO,CAAC,wBAAD,CAA5C;AACD,CAFW,CAAZ;AAIA;AACA;AACA;;AAEA,SAASC,YAAT,CAAuBO,GAAvB,EAA4BU,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,WAASC,GAAT,GAAgB;AACd,QAAIC,GAAG,GAAGF,MAAM,EAAhB;AAEAG,IAAAA,MAAM,CAACC,cAAP,CAAsBf,GAAtB,EAA2BU,IAA3B,EAAiC;AAC/BM,MAAAA,YAAY,EAAE,IADiB;AAE/BC,MAAAA,UAAU,EAAE,IAFmB;AAG/BC,MAAAA,KAAK,EAAEL;AAHwB,KAAjC;AAMA,WAAOA,GAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,cAAP,CAAsBf,GAAtB,EAA2BU,IAA3B,EAAiC;AAC/BM,IAAAA,YAAY,EAAE,IADiB;AAE/BC,IAAAA,UAAU,EAAE,IAFmB;AAG/BL,IAAAA,GAAG,EAAEA;AAH0B,GAAjC;AAKD;AAED;AACA;AACA;;;AAEA,SAASL,QAAT,CAAmBP,GAAnB,EAAwB;AACtB,SAAOA,GAAG,CAACO,QAAJ,EAAP;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\depd\\lib\\compat\\",
      "sourcesContent": [
        "/*!\r\n * depd\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\r\n  var limit = Error.stackTraceLimit\r\n  var obj = {}\r\n  var prep = Error.prepareStackTrace\r\n\r\n  function prepareObjectStackTrace (obj, stack) {\r\n    return stack\r\n  }\r\n\r\n  Error.prepareStackTrace = prepareObjectStackTrace\r\n  Error.stackTraceLimit = 2\r\n\r\n  // capture the stack\r\n  Error.captureStackTrace(obj)\r\n\r\n  // slice the stack\r\n  var stack = obj.stack.slice()\r\n\r\n  Error.prepareStackTrace = prep\r\n  Error.stackTraceLimit = limit\r\n\r\n  return stack[0].toString ? toString : require('./callsite-tostring')\r\n})\r\n\r\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\r\n  return EventEmitter.listenerCount || require('./event-listener-count')\r\n})\r\n\r\n/**\r\n * Define a lazy property.\r\n */\r\n\r\nfunction lazyProperty (obj, prop, getter) {\r\n  function get () {\r\n    var val = getter()\r\n\r\n    Object.defineProperty(obj, prop, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      value: val\r\n    })\r\n\r\n    return val\r\n  }\r\n\r\n  Object.defineProperty(obj, prop, {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get: get\r\n  })\r\n}\r\n\r\n/**\r\n * Call toString() on the obj\r\n */\r\n\r\nfunction toString (obj) {\r\n  return obj.toString()\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211102
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\merge-descriptors\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\merge-descriptors\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\merge-descriptors\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\merge-descriptors\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\merge-descriptors\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\merge-descriptors\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\merge-descriptors\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * merge-descriptors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = merge;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\r\n * Merge the property descriptors of `src` into `dest`\r\n *\r\n * @param {object} dest Object to add descriptors to\r\n * @param {object} src Object to clone descriptors from\r\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\r\n * @returns {object} Reference to dest\r\n * @public\r\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required');\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required');\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true;\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return;\n    } // Copy descriptor\n\n\n    var descriptor = Object.getOwnPropertyDescriptor(src, name);\n    Object.defineProperty(dest, name, descriptor);\n  });\n  return dest;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXJnZSIsImhhc093blByb3BlcnR5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiZGVzdCIsInNyYyIsInJlZGVmaW5lIiwiVHlwZUVycm9yIiwidW5kZWZpbmVkIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImZvckVhY2giLCJmb3JFYWNoT3duUHJvcGVydHlOYW1lIiwibmFtZSIsImNhbGwiLCJkZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZGVmaW5lUHJvcGVydHkiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsS0FBakI7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQyxjQUFjLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkYsY0FBdEM7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0QsS0FBVCxDQUFlSSxJQUFmLEVBQXFCQyxHQUFyQixFQUEwQkMsUUFBMUIsRUFBb0M7QUFDbEMsTUFBSSxDQUFDRixJQUFMLEVBQVc7QUFDVCxVQUFNLElBQUlHLFNBQUosQ0FBYywyQkFBZCxDQUFOO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDRixHQUFMLEVBQVU7QUFDUixVQUFNLElBQUlFLFNBQUosQ0FBYywwQkFBZCxDQUFOO0FBQ0Q7O0FBRUQsTUFBSUQsUUFBUSxLQUFLRSxTQUFqQixFQUE0QjtBQUMxQjtBQUNBRixJQUFBQSxRQUFRLEdBQUcsSUFBWDtBQUNEOztBQUVESixFQUFBQSxNQUFNLENBQUNPLG1CQUFQLENBQTJCSixHQUEzQixFQUFnQ0ssT0FBaEMsQ0FBd0MsU0FBU0Msc0JBQVQsQ0FBZ0NDLElBQWhDLEVBQXNDO0FBQzVFLFFBQUksQ0FBQ04sUUFBRCxJQUFhTCxjQUFjLENBQUNZLElBQWYsQ0FBb0JULElBQXBCLEVBQTBCUSxJQUExQixDQUFqQixFQUFrRDtBQUNoRDtBQUNBO0FBQ0QsS0FKMkUsQ0FNNUU7OztBQUNBLFFBQUlFLFVBQVUsR0FBR1osTUFBTSxDQUFDYSx3QkFBUCxDQUFnQ1YsR0FBaEMsRUFBcUNPLElBQXJDLENBQWpCO0FBQ0FWLElBQUFBLE1BQU0sQ0FBQ2MsY0FBUCxDQUFzQlosSUFBdEIsRUFBNEJRLElBQTVCLEVBQWtDRSxVQUFsQztBQUNELEdBVEQ7QUFXQSxTQUFPVixJQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFxub2RlX21vZHVsZXNcXG1lcmdlLWRlc2NyaXB0b3JzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogbWVyZ2UtZGVzY3JpcHRvcnNcclxuICogQ29weXJpZ2h0KGMpIDIwMTQgSm9uYXRoYW4gT25nXHJcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtZXJnZVxyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSB2YXJpYWJsZXMuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eVxyXG5cclxuLyoqXHJcbiAqIE1lcmdlIHRoZSBwcm9wZXJ0eSBkZXNjcmlwdG9ycyBvZiBgc3JjYCBpbnRvIGBkZXN0YFxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gZGVzdCBPYmplY3QgdG8gYWRkIGRlc2NyaXB0b3JzIHRvXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBzcmMgT2JqZWN0IHRvIGNsb25lIGRlc2NyaXB0b3JzIGZyb21cclxuICogQHBhcmFtIHtib29sZWFufSBbcmVkZWZpbmU9dHJ1ZV0gUmVkZWZpbmUgYGRlc3RgIHByb3BlcnRpZXMgd2l0aCBgc3JjYCBwcm9wZXJ0aWVzXHJcbiAqIEByZXR1cm5zIHtvYmplY3R9IFJlZmVyZW5jZSB0byBkZXN0XHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBtZXJnZShkZXN0LCBzcmMsIHJlZGVmaW5lKSB7XHJcbiAgaWYgKCFkZXN0KSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBkZXN0IGlzIHJlcXVpcmVkJylcclxuICB9XHJcblxyXG4gIGlmICghc3JjKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzcmMgaXMgcmVxdWlyZWQnKVxyXG4gIH1cclxuXHJcbiAgaWYgKHJlZGVmaW5lID09PSB1bmRlZmluZWQpIHtcclxuICAgIC8vIERlZmF1bHQgdG8gdHJ1ZVxyXG4gICAgcmVkZWZpbmUgPSB0cnVlXHJcbiAgfVxyXG5cclxuICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhzcmMpLmZvckVhY2goZnVuY3Rpb24gZm9yRWFjaE93blByb3BlcnR5TmFtZShuYW1lKSB7XHJcbiAgICBpZiAoIXJlZGVmaW5lICYmIGhhc093blByb3BlcnR5LmNhbGwoZGVzdCwgbmFtZSkpIHtcclxuICAgICAgLy8gU2tpcCBkZXNyaXB0b3JcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ29weSBkZXNjcmlwdG9yXHJcbiAgICB2YXIgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc3JjLCBuYW1lKVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGRlc3QsIG5hbWUsIGRlc2NyaXB0b3IpXHJcbiAgfSlcclxuXHJcbiAgcmV0dXJuIGRlc3RcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "merge",
        "hasOwnProperty",
        "Object",
        "prototype",
        "dest",
        "src",
        "redefine",
        "TypeError",
        "undefined",
        "getOwnPropertyNames",
        "forEach",
        "forEachOwnPropertyName",
        "name",
        "call",
        "descriptor",
        "getOwnPropertyDescriptor",
        "defineProperty"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASD,KAAT,CAAeI,IAAf,EAAqBC,GAArB,EAA0BC,QAA1B,EAAoC;AAClC,MAAI,CAACF,IAAL,EAAW;AACT,UAAM,IAAIG,SAAJ,CAAc,2BAAd,CAAN;AACD;;AAED,MAAI,CAACF,GAAL,EAAU;AACR,UAAM,IAAIE,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,MAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC1B;AACAF,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAEDJ,EAAAA,MAAM,CAACO,mBAAP,CAA2BJ,GAA3B,EAAgCK,OAAhC,CAAwC,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AAC5E,QAAI,CAACN,QAAD,IAAaL,cAAc,CAACY,IAAf,CAAoBT,IAApB,EAA0BQ,IAA1B,CAAjB,EAAkD;AAChD;AACA;AACD,KAJ2E,CAM5E;;;AACA,QAAIE,UAAU,GAAGZ,MAAM,CAACa,wBAAP,CAAgCV,GAAhC,EAAqCO,IAArC,CAAjB;AACAV,IAAAA,MAAM,CAACc,cAAP,CAAsBZ,IAAtB,EAA4BQ,IAA5B,EAAkCE,UAAlC;AACD,GATD;AAWA,SAAOV,IAAP;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\merge-descriptors\\",
      "sourcesContent": [
        "/*!\r\n * merge-descriptors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = merge\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\n/**\r\n * Merge the property descriptors of `src` into `dest`\r\n *\r\n * @param {object} dest Object to add descriptors to\r\n * @param {object} src Object to clone descriptors from\r\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\r\n * @returns {object} Reference to dest\r\n * @public\r\n */\r\n\r\nfunction merge(dest, src, redefine) {\r\n  if (!dest) {\r\n    throw new TypeError('argument dest is required')\r\n  }\r\n\r\n  if (!src) {\r\n    throw new TypeError('argument src is required')\r\n  }\r\n\r\n  if (redefine === undefined) {\r\n    // Default to true\r\n    redefine = true\r\n  }\r\n\r\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\r\n    if (!redefine && hasOwnProperty.call(dest, name)) {\r\n      // Skip desriptor\r\n      return\r\n    }\r\n\r\n    // Copy descriptor\r\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\r\n    Object.defineProperty(dest, name, descriptor)\r\n  })\r\n\r\n  return dest\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211492
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\application.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\application.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\application.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\application.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
        "sourceFileName": "application.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar finalhandler = require('finalhandler');\n\nvar Router = require('./router');\n\nvar methods = require('methods');\n\nvar middleware = require('./middleware/init');\n\nvar query = require('./middleware/query');\n\nvar debug = require('debug')('express:application');\n\nvar View = require('./view');\n\nvar http = require('http');\n\nvar compileETag = require('./utils').compileETag;\n\nvar compileQueryParser = require('./utils').compileQueryParser;\n\nvar compileTrust = require('./utils').compileTrust;\n\nvar deprecate = require('depd')('express');\n\nvar flatten = require('array-flatten');\n\nvar merge = require('utils-merge');\n\nvar resolve = require('path').resolve;\n\nvar setPrototypeOf = require('setprototypeof');\n\nvar slice = Array.prototype.slice;\n/**\r\n * Application prototype.\r\n */\n\nvar app = exports = module.exports = {};\n/**\r\n * Variable for trust proxy inheritance back-compat\r\n * @private\r\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n/**\r\n * Initialize the server.\r\n *\r\n *   - setup default configuration\r\n *   - setup default middleware\r\n *   - setup route reflection methods\r\n *\r\n * @private\r\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n  this.defaultConfiguration();\n};\n/**\r\n * Initialize application configuration.\r\n * @private\r\n */\n\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development'; // default settings\n\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false); // trust proxy inherit back-compat\n\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n  debug('booting in %s mode', env);\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    } // inherit protos\n\n\n    setPrototypeOf(this.request, parent.request);\n    setPrototypeOf(this.response, parent.response);\n    setPrototypeOf(this.engines, parent.engines);\n    setPrototypeOf(this.settings, parent.settings);\n  }); // setup locals\n\n  this.locals = Object.create(null); // top-most app is mounted at /\n\n  this.mountpath = '/'; // default locals\n\n  this.locals.settings = this.settings; // default configuration\n\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function () {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n/**\r\n * lazily adds the base router if it has not yet been added.\r\n *\r\n * We cannot add the base router in the defaultConfiguration because\r\n * it reads app settings which might be set after that has run.\r\n *\r\n * @private\r\n */\n\n\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n\n    this._router.use(middleware.init(this));\n  }\n};\n/**\r\n * Dispatch a req, res pair into the application. Starts pipeline processing.\r\n *\r\n * If no callback is provided, then default error handlers will respond\r\n * in the event of an error bubbling through the stack.\r\n *\r\n * @private\r\n */\n\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router; // final handler\n\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  }); // no routes\n\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n/**\r\n * Proxy `Router#use()` to add middleware to the app router.\r\n * See Router#use() documentation for details.\r\n *\r\n * If the _fn_ parameter is an express app, then it will be\r\n * mounted at the _route_ specified.\r\n *\r\n * @public\r\n */\n\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/'; // default path to '/'\n  // disambiguate app.use([fn])\n\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    } // first arg is the path\n\n\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function');\n  } // setup router\n\n\n  this.lazyrouter();\n  var router = this._router;\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this; // restore .app property on req and res\n\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request);\n        setPrototypeOf(res, orig.response);\n        next(err);\n      });\n    }); // mounted an app\n\n    fn.emit('mount', this);\n  }, this);\n  return this;\n};\n/**\r\n * Proxy to the app `Router#route()`\r\n * Returns a new `Route` instance for the _path_.\r\n *\r\n * Routes are isolated middleware stacks for specific paths.\r\n * See the Route api docs for details.\r\n *\r\n * @public\r\n */\n\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n/**\r\n * Register the given template engine callback `fn`\r\n * as `ext`.\r\n *\r\n * By default will `require()` the engine based on the\r\n * file extension. For example if you try to render\r\n * a \"foo.ejs\" file Express will invoke the following internally:\r\n *\r\n *     app.engine('ejs', require('ejs').__express);\r\n *\r\n * For engines that do not provide `.__express` out of the box,\r\n * or if you wish to \"map\" a different extension to the template engine\r\n * you may use this method. For example mapping the EJS template engine to\r\n * \".html\" files:\r\n *\r\n *     app.engine('html', require('ejs').renderFile);\r\n *\r\n * In this case EJS provides a `.renderFile()` method with\r\n * the same signature that Express expects: `(path, options, callback)`,\r\n * though note that it aliases this method as `ejs.__express` internally\r\n * so if you're using \".ejs\" extensions you dont need to do anything.\r\n *\r\n * Some template engines do not follow this convention, the\r\n * [Consolidate.js](https://github.com/tj/consolidate.js)\r\n * library was created to map all of node's popular template\r\n * engines to follow this convention, thus allowing them to\r\n * work seamlessly within Express.\r\n *\r\n * @param {String} ext\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\n\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  } // get file extension\n\n\n  var extension = ext[0] !== '.' ? '.' + ext : ext; // store engine\n\n  this.engines[extension] = fn;\n  return this;\n};\n/**\r\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\r\n * can be an array of names.\r\n *\r\n * See the Router#param() docs for more details.\r\n *\r\n * @param {String|Array} name\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\n\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n/**\r\n * Assign `setting` to `val`, or return `setting`'s value.\r\n *\r\n *    app.set('foo', 'bar');\r\n *    app.set('foo');\r\n *    // => \"bar\"\r\n *\r\n * Mounted servers inherit their parent server's settings.\r\n *\r\n * @param {String} setting\r\n * @param {*} [val]\r\n * @return {Server} for chaining\r\n * @public\r\n */\n\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    return this.settings[setting];\n  }\n\n  debug('set \"%s\" to %o', setting, val); // set value\n\n  this.settings[setting] = val; // trigger matched settings\n\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val)); // trust proxy inherit back-compat\n\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n      break;\n  }\n\n  return this;\n};\n/**\r\n * Return the app's absolute pathname\r\n * based on the parent(s) that have\r\n * mounted it.\r\n *\r\n * For example if the application was\r\n * mounted as \"/admin\", which itself\r\n * was mounted as \"/blog\" then the\r\n * return value would be \"/blog/admin\".\r\n *\r\n * @return {String}\r\n * @private\r\n */\n\n\napp.path = function path() {\n  return this.parent ? this.parent.path() + this.mountpath : '';\n};\n/**\r\n * Check if `setting` is enabled (truthy).\r\n *\r\n *    app.enabled('foo')\r\n *    // => false\r\n *\r\n *    app.enable('foo')\r\n *    app.enabled('foo')\r\n *    // => true\r\n *\r\n * @param {String} setting\r\n * @return {Boolean}\r\n * @public\r\n */\n\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n/**\r\n * Check if `setting` is disabled.\r\n *\r\n *    app.disabled('foo')\r\n *    // => true\r\n *\r\n *    app.enable('foo')\r\n *    app.disabled('foo')\r\n *    // => false\r\n *\r\n * @param {String} setting\r\n * @return {Boolean}\r\n * @public\r\n */\n\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n/**\r\n * Enable `setting`.\r\n *\r\n * @param {String} setting\r\n * @return {app} for chaining\r\n * @public\r\n */\n\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n/**\r\n * Disable `setting`.\r\n *\r\n * @param {String} setting\r\n * @return {app} for chaining\r\n * @public\r\n */\n\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n/**\r\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\r\n */\n\n\nmethods.forEach(function (method) {\n  app[method] = function (path) {\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n/**\r\n * Special-cased \"all\" method, applying the given route `path`,\r\n * middleware, and callback to _every_ HTTP method.\r\n *\r\n * @param {String} path\r\n * @param {Function} ...\r\n * @return {app} for chaining\r\n * @public\r\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n}; // del -> delete alias\n\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n/**\r\n * Render the given view `name` name with `options`\r\n * and a callback accepting an error and the\r\n * rendered template string.\r\n *\r\n * Example:\r\n *\r\n *    app.render('email', { name: 'Tobi' }, function(err, html){\r\n *      // ...\r\n *    })\r\n *\r\n * @param {String} name\r\n * @param {Object|Function} options or fn\r\n * @param {Function} callback\r\n * @public\r\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view; // support callback function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // merge app.locals\n\n\n  merge(renderOptions, this.locals); // merge options._locals\n\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  } // merge options\n\n\n  merge(renderOptions, opts); // set .cache unless explicitly provided\n\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  } // primed cache\n\n\n  if (renderOptions.cache) {\n    view = cache[name];\n  } // view\n\n\n  if (!view) {\n    var View = this.get('view');\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1 ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"' : 'directory \"' + view.root + '\"';\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    } // prime the cache\n\n\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  } // render\n\n\n  tryRender(view, renderOptions, done);\n};\n/**\r\n * Listen for connections.\r\n *\r\n * A node `http.Server` is returned, with this\r\n * application (which is a `Function`) as its\r\n * callback. If you wish to create both an HTTP\r\n * and HTTPS server you may do so with the \"http\"\r\n * and \"https\" modules as shown here:\r\n *\r\n *    var http = require('http')\r\n *      , https = require('https')\r\n *      , express = require('express')\r\n *      , app = express();\r\n *\r\n *    http.createServer(app).listen(80);\r\n *    https.createServer({ ... }, app).listen(443);\r\n *\r\n * @return {http.Server}\r\n * @public\r\n */\n\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n/**\r\n * Log error using console.error.\r\n *\r\n * @param {Error} err\r\n * @private\r\n */\n\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n/**\r\n * Try rendering a view.\r\n * @private\r\n */\n\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "application.js"
      ],
      "names": [
        "finalhandler",
        "require",
        "Router",
        "methods",
        "middleware",
        "query",
        "debug",
        "View",
        "http",
        "compileETag",
        "compileQueryParser",
        "compileTrust",
        "deprecate",
        "flatten",
        "merge",
        "resolve",
        "setPrototypeOf",
        "slice",
        "Array",
        "prototype",
        "app",
        "exports",
        "module",
        "trustProxyDefaultSymbol",
        "init",
        "cache",
        "engines",
        "settings",
        "defaultConfiguration",
        "env",
        "process",
        "NODE_ENV",
        "enable",
        "set",
        "Object",
        "defineProperty",
        "configurable",
        "value",
        "on",
        "onmount",
        "parent",
        "request",
        "response",
        "locals",
        "create",
        "mountpath",
        "get",
        "Error",
        "lazyrouter",
        "_router",
        "caseSensitive",
        "enabled",
        "strict",
        "use",
        "handle",
        "req",
        "res",
        "callback",
        "router",
        "done",
        "onerror",
        "logerror",
        "bind",
        "fn",
        "offset",
        "path",
        "arg",
        "isArray",
        "length",
        "fns",
        "call",
        "arguments",
        "TypeError",
        "forEach",
        "mounted_app",
        "next",
        "orig",
        "err",
        "emit",
        "route",
        "engine",
        "ext",
        "extension",
        "param",
        "name",
        "i",
        "setting",
        "val",
        "Boolean",
        "disabled",
        "disable",
        "method",
        "apply",
        "all",
        "args",
        "del",
        "function",
        "delete",
        "render",
        "options",
        "opts",
        "renderOptions",
        "view",
        "_locals",
        "defaultEngine",
        "root",
        "dirs",
        "join",
        "tryRender",
        "listen",
        "server",
        "createServer",
        "console",
        "error",
        "stack",
        "toString"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar finalhandler = require('finalhandler');\r\nvar Router = require('./router');\r\nvar methods = require('methods');\r\nvar middleware = require('./middleware/init');\r\nvar query = require('./middleware/query');\r\nvar debug = require('debug')('express:application');\r\nvar View = require('./view');\r\nvar http = require('http');\r\nvar compileETag = require('./utils').compileETag;\r\nvar compileQueryParser = require('./utils').compileQueryParser;\r\nvar compileTrust = require('./utils').compileTrust;\r\nvar deprecate = require('depd')('express');\r\nvar flatten = require('array-flatten');\r\nvar merge = require('utils-merge');\r\nvar resolve = require('path').resolve;\r\nvar setPrototypeOf = require('setprototypeof')\r\nvar slice = Array.prototype.slice;\r\n\r\n/**\r\n * Application prototype.\r\n */\r\n\r\nvar app = exports = module.exports = {};\r\n\r\n/**\r\n * Variable for trust proxy inheritance back-compat\r\n * @private\r\n */\r\n\r\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\r\n\r\n/**\r\n * Initialize the server.\r\n *\r\n *   - setup default configuration\r\n *   - setup default middleware\r\n *   - setup route reflection methods\r\n *\r\n * @private\r\n */\r\n\r\napp.init = function init() {\r\n  this.cache = {};\r\n  this.engines = {};\r\n  this.settings = {};\r\n\r\n  this.defaultConfiguration();\r\n};\r\n\r\n/**\r\n * Initialize application configuration.\r\n * @private\r\n */\r\n\r\napp.defaultConfiguration = function defaultConfiguration() {\r\n  var env = process.env.NODE_ENV || 'development';\r\n\r\n  // default settings\r\n  this.enable('x-powered-by');\r\n  this.set('etag', 'weak');\r\n  this.set('env', env);\r\n  this.set('query parser', 'extended');\r\n  this.set('subdomain offset', 2);\r\n  this.set('trust proxy', false);\r\n\r\n  // trust proxy inherit back-compat\r\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\r\n    configurable: true,\r\n    value: true\r\n  });\r\n\r\n  debug('booting in %s mode', env);\r\n\r\n  this.on('mount', function onmount(parent) {\r\n    // inherit trust proxy\r\n    if (this.settings[trustProxyDefaultSymbol] === true\r\n      && typeof parent.settings['trust proxy fn'] === 'function') {\r\n      delete this.settings['trust proxy'];\r\n      delete this.settings['trust proxy fn'];\r\n    }\r\n\r\n    // inherit protos\r\n    setPrototypeOf(this.request, parent.request)\r\n    setPrototypeOf(this.response, parent.response)\r\n    setPrototypeOf(this.engines, parent.engines)\r\n    setPrototypeOf(this.settings, parent.settings)\r\n  });\r\n\r\n  // setup locals\r\n  this.locals = Object.create(null);\r\n\r\n  // top-most app is mounted at /\r\n  this.mountpath = '/';\r\n\r\n  // default locals\r\n  this.locals.settings = this.settings;\r\n\r\n  // default configuration\r\n  this.set('view', View);\r\n  this.set('views', resolve('views'));\r\n  this.set('jsonp callback name', 'callback');\r\n\r\n  if (env === 'production') {\r\n    this.enable('view cache');\r\n  }\r\n\r\n  Object.defineProperty(this, 'router', {\r\n    get: function() {\r\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * lazily adds the base router if it has not yet been added.\r\n *\r\n * We cannot add the base router in the defaultConfiguration because\r\n * it reads app settings which might be set after that has run.\r\n *\r\n * @private\r\n */\r\napp.lazyrouter = function lazyrouter() {\r\n  if (!this._router) {\r\n    this._router = new Router({\r\n      caseSensitive: this.enabled('case sensitive routing'),\r\n      strict: this.enabled('strict routing')\r\n    });\r\n\r\n    this._router.use(query(this.get('query parser fn')));\r\n    this._router.use(middleware.init(this));\r\n  }\r\n};\r\n\r\n/**\r\n * Dispatch a req, res pair into the application. Starts pipeline processing.\r\n *\r\n * If no callback is provided, then default error handlers will respond\r\n * in the event of an error bubbling through the stack.\r\n *\r\n * @private\r\n */\r\n\r\napp.handle = function handle(req, res, callback) {\r\n  var router = this._router;\r\n\r\n  // final handler\r\n  var done = callback || finalhandler(req, res, {\r\n    env: this.get('env'),\r\n    onerror: logerror.bind(this)\r\n  });\r\n\r\n  // no routes\r\n  if (!router) {\r\n    debug('no routes defined on app');\r\n    done();\r\n    return;\r\n  }\r\n\r\n  router.handle(req, res, done);\r\n};\r\n\r\n/**\r\n * Proxy `Router#use()` to add middleware to the app router.\r\n * See Router#use() documentation for details.\r\n *\r\n * If the _fn_ parameter is an express app, then it will be\r\n * mounted at the _route_ specified.\r\n *\r\n * @public\r\n */\r\n\r\napp.use = function use(fn) {\r\n  var offset = 0;\r\n  var path = '/';\r\n\r\n  // default path to '/'\r\n  // disambiguate app.use([fn])\r\n  if (typeof fn !== 'function') {\r\n    var arg = fn;\r\n\r\n    while (Array.isArray(arg) && arg.length !== 0) {\r\n      arg = arg[0];\r\n    }\r\n\r\n    // first arg is the path\r\n    if (typeof arg !== 'function') {\r\n      offset = 1;\r\n      path = fn;\r\n    }\r\n  }\r\n\r\n  var fns = flatten(slice.call(arguments, offset));\r\n\r\n  if (fns.length === 0) {\r\n    throw new TypeError('app.use() requires a middleware function')\r\n  }\r\n\r\n  // setup router\r\n  this.lazyrouter();\r\n  var router = this._router;\r\n\r\n  fns.forEach(function (fn) {\r\n    // non-express app\r\n    if (!fn || !fn.handle || !fn.set) {\r\n      return router.use(path, fn);\r\n    }\r\n\r\n    debug('.use app under %s', path);\r\n    fn.mountpath = path;\r\n    fn.parent = this;\r\n\r\n    // restore .app property on req and res\r\n    router.use(path, function mounted_app(req, res, next) {\r\n      var orig = req.app;\r\n      fn.handle(req, res, function (err) {\r\n        setPrototypeOf(req, orig.request)\r\n        setPrototypeOf(res, orig.response)\r\n        next(err);\r\n      });\r\n    });\r\n\r\n    // mounted an app\r\n    fn.emit('mount', this);\r\n  }, this);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Proxy to the app `Router#route()`\r\n * Returns a new `Route` instance for the _path_.\r\n *\r\n * Routes are isolated middleware stacks for specific paths.\r\n * See the Route api docs for details.\r\n *\r\n * @public\r\n */\r\n\r\napp.route = function route(path) {\r\n  this.lazyrouter();\r\n  return this._router.route(path);\r\n};\r\n\r\n/**\r\n * Register the given template engine callback `fn`\r\n * as `ext`.\r\n *\r\n * By default will `require()` the engine based on the\r\n * file extension. For example if you try to render\r\n * a \"foo.ejs\" file Express will invoke the following internally:\r\n *\r\n *     app.engine('ejs', require('ejs').__express);\r\n *\r\n * For engines that do not provide `.__express` out of the box,\r\n * or if you wish to \"map\" a different extension to the template engine\r\n * you may use this method. For example mapping the EJS template engine to\r\n * \".html\" files:\r\n *\r\n *     app.engine('html', require('ejs').renderFile);\r\n *\r\n * In this case EJS provides a `.renderFile()` method with\r\n * the same signature that Express expects: `(path, options, callback)`,\r\n * though note that it aliases this method as `ejs.__express` internally\r\n * so if you're using \".ejs\" extensions you dont need to do anything.\r\n *\r\n * Some template engines do not follow this convention, the\r\n * [Consolidate.js](https://github.com/tj/consolidate.js)\r\n * library was created to map all of node's popular template\r\n * engines to follow this convention, thus allowing them to\r\n * work seamlessly within Express.\r\n *\r\n * @param {String} ext\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\napp.engine = function engine(ext, fn) {\r\n  if (typeof fn !== 'function') {\r\n    throw new Error('callback function required');\r\n  }\r\n\r\n  // get file extension\r\n  var extension = ext[0] !== '.'\r\n    ? '.' + ext\r\n    : ext;\r\n\r\n  // store engine\r\n  this.engines[extension] = fn;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\r\n * can be an array of names.\r\n *\r\n * See the Router#param() docs for more details.\r\n *\r\n * @param {String|Array} name\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\napp.param = function param(name, fn) {\r\n  this.lazyrouter();\r\n\r\n  if (Array.isArray(name)) {\r\n    for (var i = 0; i < name.length; i++) {\r\n      this.param(name[i], fn);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  this._router.param(name, fn);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Assign `setting` to `val`, or return `setting`'s value.\r\n *\r\n *    app.set('foo', 'bar');\r\n *    app.set('foo');\r\n *    // => \"bar\"\r\n *\r\n * Mounted servers inherit their parent server's settings.\r\n *\r\n * @param {String} setting\r\n * @param {*} [val]\r\n * @return {Server} for chaining\r\n * @public\r\n */\r\n\r\napp.set = function set(setting, val) {\r\n  if (arguments.length === 1) {\r\n    // app.get(setting)\r\n    return this.settings[setting];\r\n  }\r\n\r\n  debug('set \"%s\" to %o', setting, val);\r\n\r\n  // set value\r\n  this.settings[setting] = val;\r\n\r\n  // trigger matched settings\r\n  switch (setting) {\r\n    case 'etag':\r\n      this.set('etag fn', compileETag(val));\r\n      break;\r\n    case 'query parser':\r\n      this.set('query parser fn', compileQueryParser(val));\r\n      break;\r\n    case 'trust proxy':\r\n      this.set('trust proxy fn', compileTrust(val));\r\n\r\n      // trust proxy inherit back-compat\r\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\r\n        configurable: true,\r\n        value: false\r\n      });\r\n\r\n      break;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return the app's absolute pathname\r\n * based on the parent(s) that have\r\n * mounted it.\r\n *\r\n * For example if the application was\r\n * mounted as \"/admin\", which itself\r\n * was mounted as \"/blog\" then the\r\n * return value would be \"/blog/admin\".\r\n *\r\n * @return {String}\r\n * @private\r\n */\r\n\r\napp.path = function path() {\r\n  return this.parent\r\n    ? this.parent.path() + this.mountpath\r\n    : '';\r\n};\r\n\r\n/**\r\n * Check if `setting` is enabled (truthy).\r\n *\r\n *    app.enabled('foo')\r\n *    // => false\r\n *\r\n *    app.enable('foo')\r\n *    app.enabled('foo')\r\n *    // => true\r\n *\r\n * @param {String} setting\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\napp.enabled = function enabled(setting) {\r\n  return Boolean(this.set(setting));\r\n};\r\n\r\n/**\r\n * Check if `setting` is disabled.\r\n *\r\n *    app.disabled('foo')\r\n *    // => true\r\n *\r\n *    app.enable('foo')\r\n *    app.disabled('foo')\r\n *    // => false\r\n *\r\n * @param {String} setting\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\napp.disabled = function disabled(setting) {\r\n  return !this.set(setting);\r\n};\r\n\r\n/**\r\n * Enable `setting`.\r\n *\r\n * @param {String} setting\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\napp.enable = function enable(setting) {\r\n  return this.set(setting, true);\r\n};\r\n\r\n/**\r\n * Disable `setting`.\r\n *\r\n * @param {String} setting\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\napp.disable = function disable(setting) {\r\n  return this.set(setting, false);\r\n};\r\n\r\n/**\r\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\r\n */\r\n\r\nmethods.forEach(function(method){\r\n  app[method] = function(path){\r\n    if (method === 'get' && arguments.length === 1) {\r\n      // app.get(setting)\r\n      return this.set(path);\r\n    }\r\n\r\n    this.lazyrouter();\r\n\r\n    var route = this._router.route(path);\r\n    route[method].apply(route, slice.call(arguments, 1));\r\n    return this;\r\n  };\r\n});\r\n\r\n/**\r\n * Special-cased \"all\" method, applying the given route `path`,\r\n * middleware, and callback to _every_ HTTP method.\r\n *\r\n * @param {String} path\r\n * @param {Function} ...\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\napp.all = function all(path) {\r\n  this.lazyrouter();\r\n\r\n  var route = this._router.route(path);\r\n  var args = slice.call(arguments, 1);\r\n\r\n  for (var i = 0; i < methods.length; i++) {\r\n    route[methods[i]].apply(route, args);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n// del -> delete alias\r\n\r\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\r\n\r\n/**\r\n * Render the given view `name` name with `options`\r\n * and a callback accepting an error and the\r\n * rendered template string.\r\n *\r\n * Example:\r\n *\r\n *    app.render('email', { name: 'Tobi' }, function(err, html){\r\n *      // ...\r\n *    })\r\n *\r\n * @param {String} name\r\n * @param {Object|Function} options or fn\r\n * @param {Function} callback\r\n * @public\r\n */\r\n\r\napp.render = function render(name, options, callback) {\r\n  var cache = this.cache;\r\n  var done = callback;\r\n  var engines = this.engines;\r\n  var opts = options;\r\n  var renderOptions = {};\r\n  var view;\r\n\r\n  // support callback function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // merge app.locals\r\n  merge(renderOptions, this.locals);\r\n\r\n  // merge options._locals\r\n  if (opts._locals) {\r\n    merge(renderOptions, opts._locals);\r\n  }\r\n\r\n  // merge options\r\n  merge(renderOptions, opts);\r\n\r\n  // set .cache unless explicitly provided\r\n  if (renderOptions.cache == null) {\r\n    renderOptions.cache = this.enabled('view cache');\r\n  }\r\n\r\n  // primed cache\r\n  if (renderOptions.cache) {\r\n    view = cache[name];\r\n  }\r\n\r\n  // view\r\n  if (!view) {\r\n    var View = this.get('view');\r\n\r\n    view = new View(name, {\r\n      defaultEngine: this.get('view engine'),\r\n      root: this.get('views'),\r\n      engines: engines\r\n    });\r\n\r\n    if (!view.path) {\r\n      var dirs = Array.isArray(view.root) && view.root.length > 1\r\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\r\n        : 'directory \"' + view.root + '\"'\r\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\r\n      err.view = view;\r\n      return done(err);\r\n    }\r\n\r\n    // prime the cache\r\n    if (renderOptions.cache) {\r\n      cache[name] = view;\r\n    }\r\n  }\r\n\r\n  // render\r\n  tryRender(view, renderOptions, done);\r\n};\r\n\r\n/**\r\n * Listen for connections.\r\n *\r\n * A node `http.Server` is returned, with this\r\n * application (which is a `Function`) as its\r\n * callback. If you wish to create both an HTTP\r\n * and HTTPS server you may do so with the \"http\"\r\n * and \"https\" modules as shown here:\r\n *\r\n *    var http = require('http')\r\n *      , https = require('https')\r\n *      , express = require('express')\r\n *      , app = express();\r\n *\r\n *    http.createServer(app).listen(80);\r\n *    https.createServer({ ... }, app).listen(443);\r\n *\r\n * @return {http.Server}\r\n * @public\r\n */\r\n\r\napp.listen = function listen() {\r\n  var server = http.createServer(this);\r\n  return server.listen.apply(server, arguments);\r\n};\r\n\r\n/**\r\n * Log error using console.error.\r\n *\r\n * @param {Error} err\r\n * @private\r\n */\r\n\r\nfunction logerror(err) {\r\n  /* istanbul ignore next */\r\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\r\n}\r\n\r\n/**\r\n * Try rendering a view.\r\n * @private\r\n */\r\n\r\nfunction tryRender(view, options, callback) {\r\n  try {\r\n    view.render(options, callback);\r\n  } catch (err) {\r\n    callback(err);\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\finalhandler\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\finalhandler\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\finalhandler\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\finalhandler\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\finalhandler\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\finalhandler\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\finalhandler\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * finalhandler\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar debug = require('debug')('finalhandler');\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar onFinished = require('on-finished');\n\nvar parseUrl = require('parseurl');\n\nvar statuses = require('statuses');\n\nvar unpipe = require('unpipe');\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g;\nvar NEWLINE_REGEXP = /\\n/g;\n/* istanbul ignore next */\n\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\nvar isFinished = onFinished.isFinished;\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} message\r\n * @private\r\n */\n\nfunction createHtmlDocument(message) {\n  var body = escapeHtml(message).replace(NEWLINE_REGEXP, '<br>').replace(DOUBLE_SPACE_REGEXP, ' &nbsp;');\n  return '<!DOCTYPE html>\\n' + '<html lang=\"en\">\\n' + '<head>\\n' + '<meta charset=\"utf-8\">\\n' + '<title>Error</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>' + body + '</pre>\\n' + '</body>\\n' + '</html>\\n';\n}\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = finalhandler;\n/**\r\n * Create a function to handle the final response.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {Object} [options]\r\n * @return {Function}\r\n * @public\r\n */\n\nfunction finalhandler(req, res, options) {\n  var opts = options || {}; // get environment\n\n  var env = opts.env || process.env.NODE_ENV || 'development'; // get error callback\n\n  var onerror = opts.onerror;\n  return function (err) {\n    var headers;\n    var msg;\n    var status; // ignore 404 on in-flight response\n\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent');\n      return;\n    } // unhandled error\n\n\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err);\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res);\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err);\n      } // get error message\n\n\n      msg = getErrorMessage(err, status, env);\n    } else {\n      // not found\n      status = 404;\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req));\n    }\n\n    debug('default %s', status); // schedule onerror callback\n\n    if (err && onerror) {\n      defer(onerror, err, req, res);\n    } // cannot actually respond\n\n\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status);\n      req.socket.destroy();\n      return;\n    } // send response\n\n\n    send(req, res, status, headers, msg);\n  };\n}\n/**\r\n * Get headers from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {object}\r\n * @private\r\n */\n\n\nfunction getErrorHeaders(err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined;\n  }\n\n  var headers = Object.create(null);\n  var keys = Object.keys(err.headers);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    headers[key] = err.headers[key];\n  }\n\n  return headers;\n}\n/**\r\n * Get message from Error object, fallback to status message.\r\n *\r\n * @param {Error} err\r\n * @param {number} status\r\n * @param {string} env\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction getErrorMessage(err, status, env) {\n  var msg;\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack; // fallback to err.toString() when possible\n\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString();\n    }\n  }\n\n  return msg || statuses[status];\n}\n/**\r\n * Get status code from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {number}\r\n * @private\r\n */\n\n\nfunction getErrorStatusCode(err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status;\n  } // check err.statusCode\n\n\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode;\n  }\n\n  return undefined;\n}\n/**\r\n * Get resource name for the request.\r\n *\r\n * This is typically just the original pathname of the request\r\n * but will fallback to \"resource\" is that cannot be determined.\r\n *\r\n * @param {IncomingMessage} req\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction getResourceName(req) {\n  try {\n    return parseUrl.original(req).pathname;\n  } catch (e) {\n    return 'resource';\n  }\n}\n/**\r\n * Get status code from response.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @return {number}\r\n * @private\r\n */\n\n\nfunction getResponseStatusCode(res) {\n  var status = res.statusCode; // default status code to 500 if outside valid range\n\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500;\n  }\n\n  return status;\n}\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\n\n\nfunction headersSent(res) {\n  return typeof res.headersSent !== 'boolean' ? Boolean(res._header) : res.headersSent;\n}\n/**\r\n * Send response.\r\n *\r\n * @param {IncomingMessage} req\r\n * @param {OutgoingMessage} res\r\n * @param {number} status\r\n * @param {object} headers\r\n * @param {string} message\r\n * @private\r\n */\n\n\nfunction send(req, res, status, headers, message) {\n  function write() {\n    // response body\n    var body = createHtmlDocument(message); // response status\n\n    res.statusCode = status;\n    res.statusMessage = statuses[status]; // response headers\n\n    setHeaders(res, headers); // security headers\n\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n    res.setHeader('X-Content-Type-Options', 'nosniff'); // standard headers\n\n    res.setHeader('Content-Type', 'text/html; charset=utf-8');\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'));\n\n    if (req.method === 'HEAD') {\n      res.end();\n      return;\n    }\n\n    res.end(body, 'utf8');\n  }\n\n  if (isFinished(req)) {\n    write();\n    return;\n  } // unpipe everything from the request\n\n\n  unpipe(req); // flush the request\n\n  onFinished(req, write);\n  req.resume();\n}\n/**\r\n * Set response headers from an object.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @param {object} headers\r\n * @private\r\n */\n\n\nfunction setHeaders(res, headers) {\n  if (!headers) {\n    return;\n  }\n\n  var keys = Object.keys(headers);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    res.setHeader(key, headers[key]);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRlYnVnIiwicmVxdWlyZSIsImVuY29kZVVybCIsImVzY2FwZUh0bWwiLCJvbkZpbmlzaGVkIiwicGFyc2VVcmwiLCJzdGF0dXNlcyIsInVucGlwZSIsIkRPVUJMRV9TUEFDRV9SRUdFWFAiLCJORVdMSU5FX1JFR0VYUCIsImRlZmVyIiwic2V0SW1tZWRpYXRlIiwiZm4iLCJwcm9jZXNzIiwibmV4dFRpY2siLCJiaW5kIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpc0ZpbmlzaGVkIiwiY3JlYXRlSHRtbERvY3VtZW50IiwibWVzc2FnZSIsImJvZHkiLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImZpbmFsaGFuZGxlciIsInJlcSIsInJlcyIsIm9wdGlvbnMiLCJvcHRzIiwiZW52IiwiTk9ERV9FTlYiLCJvbmVycm9yIiwiZXJyIiwiaGVhZGVycyIsIm1zZyIsInN0YXR1cyIsImhlYWRlcnNTZW50IiwiZ2V0RXJyb3JTdGF0dXNDb2RlIiwidW5kZWZpbmVkIiwiZ2V0UmVzcG9uc2VTdGF0dXNDb2RlIiwiZ2V0RXJyb3JIZWFkZXJzIiwiZ2V0RXJyb3JNZXNzYWdlIiwibWV0aG9kIiwiZ2V0UmVzb3VyY2VOYW1lIiwic29ja2V0IiwiZGVzdHJveSIsInNlbmQiLCJPYmplY3QiLCJjcmVhdGUiLCJrZXlzIiwiaSIsImxlbmd0aCIsImtleSIsInN0YWNrIiwidG9TdHJpbmciLCJzdGF0dXNDb2RlIiwib3JpZ2luYWwiLCJwYXRobmFtZSIsImUiLCJCb29sZWFuIiwiX2hlYWRlciIsIndyaXRlIiwic3RhdHVzTWVzc2FnZSIsInNldEhlYWRlcnMiLCJzZXRIZWFkZXIiLCJCdWZmZXIiLCJieXRlTGVuZ3RoIiwiZW5kIiwicmVzdW1lIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENB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QUFHLENBQUMyQyxNQUFKO0FBQ0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsU0FBU0wsVUFBVCxDQUFxQnJDLEdBQXJCLEVBQTBCTyxPQUExQixFQUFtQztBQUNqQyxNQUFJLENBQUNBLE9BQUwsRUFBYztBQUNaO0FBQ0Q7O0FBRUQsTUFBSWdCLElBQUksR0FBR0YsTUFBTSxDQUFDRSxJQUFQLENBQVloQixPQUFaLENBQVg7O0FBQ0EsT0FBSyxJQUFJaUIsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsSUFBSSxDQUFDRSxNQUF6QixFQUFpQ0QsQ0FBQyxFQUFsQyxFQUFzQztBQUNwQyxRQUFJRSxHQUFHLEdBQUdILElBQUksQ0FBQ0MsQ0FBRCxDQUFkO0FBQ0F4QixJQUFBQSxHQUFHLENBQUNzQyxTQUFKLENBQWNaLEdBQWQsRUFBbUJuQixPQUFPLENBQUNtQixHQUFELENBQTFCO0FBQ0Q7QUFDRiIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcZmluYWxoYW5kbGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZmluYWxoYW5kbGVyXHJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTcgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnXHJcblxyXG4vKipcclxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdmaW5hbGhhbmRsZXInKVxyXG52YXIgZW5jb2RlVXJsID0gcmVxdWlyZSgnZW5jb2RldXJsJylcclxudmFyIGVzY2FwZUh0bWwgPSByZXF1aXJlKCdlc2NhcGUtaHRtbCcpXHJcbnZhciBvbkZpbmlzaGVkID0gcmVxdWlyZSgnb24tZmluaXNoZWQnKVxyXG52YXIgcGFyc2VVcmwgPSByZXF1aXJlKCdwYXJzZXVybCcpXHJcbnZhciBzdGF0dXNlcyA9IHJlcXVpcmUoJ3N0YXR1c2VzJylcclxudmFyIHVucGlwZSA9IHJlcXVpcmUoJ3VucGlwZScpXHJcblxyXG4vKipcclxuICogTW9kdWxlIHZhcmlhYmxlcy5cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG52YXIgRE9VQkxFX1NQQUNFX1JFR0VYUCA9IC9cXHgyMHsyfS9nXHJcbnZhciBORVdMSU5FX1JFR0VYUCA9IC9cXG4vZ1xyXG5cclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxudmFyIGRlZmVyID0gdHlwZW9mIHNldEltbWVkaWF0ZSA9PT0gJ2Z1bmN0aW9uJ1xyXG4gID8gc2V0SW1tZWRpYXRlXHJcbiAgOiBmdW5jdGlvbiAoZm4pIHsgcHJvY2Vzcy5uZXh0VGljayhmbi5iaW5kLmFwcGx5KGZuLCBhcmd1bWVudHMpKSB9XHJcbnZhciBpc0ZpbmlzaGVkID0gb25GaW5pc2hlZC5pc0ZpbmlzaGVkXHJcblxyXG4vKipcclxuICogQ3JlYXRlIGEgbWluaW1hbCBIVE1MIGRvY3VtZW50LlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUh0bWxEb2N1bWVudCAobWVzc2FnZSkge1xyXG4gIHZhciBib2R5ID0gZXNjYXBlSHRtbChtZXNzYWdlKVxyXG4gICAgLnJlcGxhY2UoTkVXTElORV9SRUdFWFAsICc8YnI+JylcclxuICAgIC5yZXBsYWNlKERPVUJMRV9TUEFDRV9SRUdFWFAsICcgJm5ic3A7JylcclxuXHJcbiAgcmV0dXJuICc8IURPQ1RZUEUgaHRtbD5cXG4nICtcclxuICAgICc8aHRtbCBsYW5nPVwiZW5cIj5cXG4nICtcclxuICAgICc8aGVhZD5cXG4nICtcclxuICAgICc8bWV0YSBjaGFyc2V0PVwidXRmLThcIj5cXG4nICtcclxuICAgICc8dGl0bGU+RXJyb3I8L3RpdGxlPlxcbicgK1xyXG4gICAgJzwvaGVhZD5cXG4nICtcclxuICAgICc8Ym9keT5cXG4nICtcclxuICAgICc8cHJlPicgKyBib2R5ICsgJzwvcHJlPlxcbicgK1xyXG4gICAgJzwvYm9keT5cXG4nICtcclxuICAgICc8L2h0bWw+XFxuJ1xyXG59XHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZpbmFsaGFuZGxlclxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIGZ1bmN0aW9uIHRvIGhhbmRsZSB0aGUgZmluYWwgcmVzcG9uc2UuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVxdWVzdH0gcmVxXHJcbiAqIEBwYXJhbSB7UmVzcG9uc2V9IHJlc1xyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZmluYWxoYW5kbGVyIChyZXEsIHJlcywgb3B0aW9ucykge1xyXG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICAvLyBnZXQgZW52aXJvbm1lbnRcclxuICB2YXIgZW52ID0gb3B0cy5lbnYgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50J1xyXG5cclxuICAvLyBnZXQgZXJyb3IgY2FsbGJhY2tcclxuICB2YXIgb25lcnJvciA9IG9wdHMub25lcnJvclxyXG5cclxuICByZXR1cm4gZnVuY3Rpb24gKGVycikge1xyXG4gICAgdmFyIGhlYWRlcnNcclxuICAgIHZhciBtc2dcclxuICAgIHZhciBzdGF0dXNcclxuXHJcbiAgICAvLyBpZ25vcmUgNDA0IG9uIGluLWZsaWdodCByZXNwb25zZVxyXG4gICAgaWYgKCFlcnIgJiYgaGVhZGVyc1NlbnQocmVzKSkge1xyXG4gICAgICBkZWJ1ZygnY2Fubm90IDQwNCBhZnRlciBoZWFkZXJzIHNlbnQnKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICAvLyB1bmhhbmRsZWQgZXJyb3JcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgLy8gcmVzcGVjdCBzdGF0dXMgY29kZSBmcm9tIGVycm9yXHJcbiAgICAgIHN0YXR1cyA9IGdldEVycm9yU3RhdHVzQ29kZShlcnIpXHJcblxyXG4gICAgICBpZiAoc3RhdHVzID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAvLyBmYWxsYmFjayB0byBzdGF0dXMgY29kZSBvbiByZXNwb25zZVxyXG4gICAgICAgIHN0YXR1cyA9IGdldFJlc3BvbnNlU3RhdHVzQ29kZShyZXMpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gcmVzcGVjdCBoZWFkZXJzIGZyb20gZXJyb3JcclxuICAgICAgICBoZWFkZXJzID0gZ2V0RXJyb3JIZWFkZXJzKGVycilcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gZ2V0IGVycm9yIG1lc3NhZ2VcclxuICAgICAgbXNnID0gZ2V0RXJyb3JNZXNzYWdlKGVyciwgc3RhdHVzLCBlbnYpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBub3QgZm91bmRcclxuICAgICAgc3RhdHVzID0gNDA0XHJcbiAgICAgIG1zZyA9ICdDYW5ub3QgJyArIHJlcS5tZXRob2QgKyAnICcgKyBlbmNvZGVVcmwoZ2V0UmVzb3VyY2VOYW1lKHJlcSkpXHJcbiAgICB9XHJcblxyXG4gICAgZGVidWcoJ2RlZmF1bHQgJXMnLCBzdGF0dXMpXHJcblxyXG4gICAgLy8gc2NoZWR1bGUgb25lcnJvciBjYWxsYmFja1xyXG4gICAgaWYgKGVyciAmJiBvbmVycm9yKSB7XHJcbiAgICAgIGRlZmVyKG9uZXJyb3IsIGVyciwgcmVxLCByZXMpXHJcbiAgICB9XHJcblxyXG4gICAgLy8gY2Fubm90IGFjdHVhbGx5IHJlc3BvbmRcclxuICAgIGlmIChoZWFkZXJzU2VudChyZXMpKSB7XHJcbiAgICAgIGRlYnVnKCdjYW5ub3QgJWQgYWZ0ZXIgaGVhZGVycyBzZW50Jywgc3RhdHVzKVxyXG4gICAgICByZXEuc29ja2V0LmRlc3Ryb3koKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICAvLyBzZW5kIHJlc3BvbnNlXHJcbiAgICBzZW5kKHJlcSwgcmVzLCBzdGF0dXMsIGhlYWRlcnMsIG1zZylcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgaGVhZGVycyBmcm9tIEVycm9yIG9iamVjdC5cclxuICpcclxuICogQHBhcmFtIHtFcnJvcn0gZXJyXHJcbiAqIEByZXR1cm4ge29iamVjdH1cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBnZXRFcnJvckhlYWRlcnMgKGVycikge1xyXG4gIGlmICghZXJyLmhlYWRlcnMgfHwgdHlwZW9mIGVyci5oZWFkZXJzICE9PSAnb2JqZWN0Jykge1xyXG4gICAgcmV0dXJuIHVuZGVmaW5lZFxyXG4gIH1cclxuXHJcbiAgdmFyIGhlYWRlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXHJcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhlcnIuaGVhZGVycylcclxuXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIga2V5ID0ga2V5c1tpXVxyXG4gICAgaGVhZGVyc1trZXldID0gZXJyLmhlYWRlcnNba2V5XVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGhlYWRlcnNcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCBtZXNzYWdlIGZyb20gRXJyb3Igb2JqZWN0LCBmYWxsYmFjayB0byBzdGF0dXMgbWVzc2FnZS5cclxuICpcclxuICogQHBhcmFtIHtFcnJvcn0gZXJyXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXNcclxuICogQHBhcmFtIHtzdHJpbmd9IGVudlxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlIChlcnIsIHN0YXR1cywgZW52KSB7XHJcbiAgdmFyIG1zZ1xyXG5cclxuICBpZiAoZW52ICE9PSAncHJvZHVjdGlvbicpIHtcclxuICAgIC8vIHVzZSBlcnIuc3RhY2ssIHdoaWNoIHR5cGljYWxseSBpbmNsdWRlcyBlcnIubWVzc2FnZVxyXG4gICAgbXNnID0gZXJyLnN0YWNrXHJcblxyXG4gICAgLy8gZmFsbGJhY2sgdG8gZXJyLnRvU3RyaW5nKCkgd2hlbiBwb3NzaWJsZVxyXG4gICAgaWYgKCFtc2cgJiYgdHlwZW9mIGVyci50b1N0cmluZyA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICBtc2cgPSBlcnIudG9TdHJpbmcoKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1zZyB8fCBzdGF0dXNlc1tzdGF0dXNdXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgc3RhdHVzIGNvZGUgZnJvbSBFcnJvciBvYmplY3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7RXJyb3J9IGVyclxyXG4gKiBAcmV0dXJuIHtudW1iZXJ9XHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZ2V0RXJyb3JTdGF0dXNDb2RlIChlcnIpIHtcclxuICAvLyBjaGVjayBlcnIuc3RhdHVzXHJcbiAgaWYgKHR5cGVvZiBlcnIuc3RhdHVzID09PSAnbnVtYmVyJyAmJiBlcnIuc3RhdHVzID49IDQwMCAmJiBlcnIuc3RhdHVzIDwgNjAwKSB7XHJcbiAgICByZXR1cm4gZXJyLnN0YXR1c1xyXG4gIH1cclxuXHJcbiAgLy8gY2hlY2sgZXJyLnN0YXR1c0NvZGVcclxuICBpZiAodHlwZW9mIGVyci5zdGF0dXNDb2RlID09PSAnbnVtYmVyJyAmJiBlcnIuc3RhdHVzQ29kZSA+PSA0MDAgJiYgZXJyLnN0YXR1c0NvZGUgPCA2MDApIHtcclxuICAgIHJldHVybiBlcnIuc3RhdHVzQ29kZVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVuZGVmaW5lZFxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHJlc291cmNlIG5hbWUgZm9yIHRoZSByZXF1ZXN0LlxyXG4gKlxyXG4gKiBUaGlzIGlzIHR5cGljYWxseSBqdXN0IHRoZSBvcmlnaW5hbCBwYXRobmFtZSBvZiB0aGUgcmVxdWVzdFxyXG4gKiBidXQgd2lsbCBmYWxsYmFjayB0byBcInJlc291cmNlXCIgaXMgdGhhdCBjYW5ub3QgYmUgZGV0ZXJtaW5lZC5cclxuICpcclxuICogQHBhcmFtIHtJbmNvbWluZ01lc3NhZ2V9IHJlcVxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZ2V0UmVzb3VyY2VOYW1lIChyZXEpIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIHBhcnNlVXJsLm9yaWdpbmFsKHJlcSkucGF0aG5hbWVcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICByZXR1cm4gJ3Jlc291cmNlJ1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCBzdGF0dXMgY29kZSBmcm9tIHJlc3BvbnNlLlxyXG4gKlxyXG4gKiBAcGFyYW0ge091dGdvaW5nTWVzc2FnZX0gcmVzXHJcbiAqIEByZXR1cm4ge251bWJlcn1cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBnZXRSZXNwb25zZVN0YXR1c0NvZGUgKHJlcykge1xyXG4gIHZhciBzdGF0dXMgPSByZXMuc3RhdHVzQ29kZVxyXG5cclxuICAvLyBkZWZhdWx0IHN0YXR1cyBjb2RlIHRvIDUwMCBpZiBvdXRzaWRlIHZhbGlkIHJhbmdlXHJcbiAgaWYgKHR5cGVvZiBzdGF0dXMgIT09ICdudW1iZXInIHx8IHN0YXR1cyA8IDQwMCB8fCBzdGF0dXMgPiA1OTkpIHtcclxuICAgIHN0YXR1cyA9IDUwMFxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHN0YXR1c1xyXG59XHJcblxyXG4vKipcclxuICogRGV0ZXJtaW5lIGlmIHRoZSByZXNwb25zZSBoZWFkZXJzIGhhdmUgYmVlbiBzZW50LlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGhlYWRlcnNTZW50IChyZXMpIHtcclxuICByZXR1cm4gdHlwZW9mIHJlcy5oZWFkZXJzU2VudCAhPT0gJ2Jvb2xlYW4nXHJcbiAgICA/IEJvb2xlYW4ocmVzLl9oZWFkZXIpXHJcbiAgICA6IHJlcy5oZWFkZXJzU2VudFxyXG59XHJcblxyXG4vKipcclxuICogU2VuZCByZXNwb25zZS5cclxuICpcclxuICogQHBhcmFtIHtJbmNvbWluZ01lc3NhZ2V9IHJlcVxyXG4gKiBAcGFyYW0ge091dGdvaW5nTWVzc2FnZX0gcmVzXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXNcclxuICogQHBhcmFtIHtvYmplY3R9IGhlYWRlcnNcclxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBzZW5kIChyZXEsIHJlcywgc3RhdHVzLCBoZWFkZXJzLCBtZXNzYWdlKSB7XHJcbiAgZnVuY3Rpb24gd3JpdGUgKCkge1xyXG4gICAgLy8gcmVzcG9uc2UgYm9keVxyXG4gICAgdmFyIGJvZHkgPSBjcmVhdGVIdG1sRG9jdW1lbnQobWVzc2FnZSlcclxuXHJcbiAgICAvLyByZXNwb25zZSBzdGF0dXNcclxuICAgIHJlcy5zdGF0dXNDb2RlID0gc3RhdHVzXHJcbiAgICByZXMuc3RhdHVzTWVzc2FnZSA9IHN0YXR1c2VzW3N0YXR1c11cclxuXHJcbiAgICAvLyByZXNwb25zZSBoZWFkZXJzXHJcbiAgICBzZXRIZWFkZXJzKHJlcywgaGVhZGVycylcclxuXHJcbiAgICAvLyBzZWN1cml0eSBoZWFkZXJzXHJcbiAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVNlY3VyaXR5LVBvbGljeScsIFwiZGVmYXVsdC1zcmMgJ25vbmUnXCIpXHJcbiAgICByZXMuc2V0SGVhZGVyKCdYLUNvbnRlbnQtVHlwZS1PcHRpb25zJywgJ25vc25pZmYnKVxyXG5cclxuICAgIC8vIHN0YW5kYXJkIGhlYWRlcnNcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICd0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgnKVxyXG4gICAgcmVzLnNldEhlYWRlcignQ29udGVudC1MZW5ndGgnLCBCdWZmZXIuYnl0ZUxlbmd0aChib2R5LCAndXRmOCcpKVxyXG5cclxuICAgIGlmIChyZXEubWV0aG9kID09PSAnSEVBRCcpIHtcclxuICAgICAgcmVzLmVuZCgpXHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG5cclxuICAgIHJlcy5lbmQoYm9keSwgJ3V0ZjgnKVxyXG4gIH1cclxuXHJcbiAgaWYgKGlzRmluaXNoZWQocmVxKSkge1xyXG4gICAgd3JpdGUoKVxyXG4gICAgcmV0dXJuXHJcbiAgfVxyXG5cclxuICAvLyB1bnBpcGUgZXZlcnl0aGluZyBmcm9tIHRoZSByZXF1ZXN0XHJcbiAgdW5waXBlKHJlcSlcclxuXHJcbiAgLy8gZmx1c2ggdGhlIHJlcXVlc3RcclxuICBvbkZpbmlzaGVkKHJlcSwgd3JpdGUpXHJcbiAgcmVxLnJlc3VtZSgpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTZXQgcmVzcG9uc2UgaGVhZGVycyBmcm9tIGFuIG9iamVjdC5cclxuICpcclxuICogQHBhcmFtIHtPdXRnb2luZ01lc3NhZ2V9IHJlc1xyXG4gKiBAcGFyYW0ge29iamVjdH0gaGVhZGVyc1xyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHNldEhlYWRlcnMgKHJlcywgaGVhZGVycykge1xyXG4gIGlmICghaGVhZGVycykge1xyXG4gICAgcmV0dXJuXHJcbiAgfVxyXG5cclxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGhlYWRlcnMpXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIga2V5ID0ga2V5c1tpXVxyXG4gICAgcmVzLnNldEhlYWRlcihrZXksIGhlYWRlcnNba2V5XSlcclxuICB9XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "debug",
        "require",
        "encodeUrl",
        "escapeHtml",
        "onFinished",
        "parseUrl",
        "statuses",
        "unpipe",
        "DOUBLE_SPACE_REGEXP",
        "NEWLINE_REGEXP",
        "defer",
        "setImmediate",
        "fn",
        "process",
        "nextTick",
        "bind",
        "apply",
        "arguments",
        "isFinished",
        "createHtmlDocument",
        "message",
        "body",
        "replace",
        "module",
        "exports",
        "finalhandler",
        "req",
        "res",
        "options",
        "opts",
        "env",
        "NODE_ENV",
        "onerror",
        "err",
        "headers",
        "msg",
        "status",
        "headersSent",
        "getErrorStatusCode",
        "undefined",
        "getResponseStatusCode",
        "getErrorHeaders",
        "getErrorMessage",
        "method",
        "getResourceName",
        "socket",
        "destroy",
        "send",
        "Object",
        "create",
        "keys",
        "i",
        "length",
        "key",
        "stack",
        "toString",
        "statusCode",
        "original",
        "pathname",
        "e",
        "Boolean",
        "_header",
        "write",
        "statusMessage",
        "setHeaders",
        "setHeader",
        "Buffer",
        "byteLength",
        "end",
        "resume"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\finalhandler\\",
      "sourcesContent": [
        "/*!\r\n * finalhandler\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('finalhandler')\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar onFinished = require('on-finished')\r\nvar parseUrl = require('parseurl')\r\nvar statuses = require('statuses')\r\nvar unpipe = require('unpipe')\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\r\nvar NEWLINE_REGEXP = /\\n/g\r\n\r\n/* istanbul ignore next */\r\nvar defer = typeof setImmediate === 'function'\r\n  ? setImmediate\r\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\r\nvar isFinished = onFinished.isFinished\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} message\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (message) {\r\n  var body = escapeHtml(message)\r\n    .replace(NEWLINE_REGEXP, '<br>')\r\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\r\n\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>Error</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = finalhandler\r\n\r\n/**\r\n * Create a function to handle the final response.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {Object} [options]\r\n * @return {Function}\r\n * @public\r\n */\r\n\r\nfunction finalhandler (req, res, options) {\r\n  var opts = options || {}\r\n\r\n  // get environment\r\n  var env = opts.env || process.env.NODE_ENV || 'development'\r\n\r\n  // get error callback\r\n  var onerror = opts.onerror\r\n\r\n  return function (err) {\r\n    var headers\r\n    var msg\r\n    var status\r\n\r\n    // ignore 404 on in-flight response\r\n    if (!err && headersSent(res)) {\r\n      debug('cannot 404 after headers sent')\r\n      return\r\n    }\r\n\r\n    // unhandled error\r\n    if (err) {\r\n      // respect status code from error\r\n      status = getErrorStatusCode(err)\r\n\r\n      if (status === undefined) {\r\n        // fallback to status code on response\r\n        status = getResponseStatusCode(res)\r\n      } else {\r\n        // respect headers from error\r\n        headers = getErrorHeaders(err)\r\n      }\r\n\r\n      // get error message\r\n      msg = getErrorMessage(err, status, env)\r\n    } else {\r\n      // not found\r\n      status = 404\r\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\r\n    }\r\n\r\n    debug('default %s', status)\r\n\r\n    // schedule onerror callback\r\n    if (err && onerror) {\r\n      defer(onerror, err, req, res)\r\n    }\r\n\r\n    // cannot actually respond\r\n    if (headersSent(res)) {\r\n      debug('cannot %d after headers sent', status)\r\n      req.socket.destroy()\r\n      return\r\n    }\r\n\r\n    // send response\r\n    send(req, res, status, headers, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * Get headers from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {object}\r\n * @private\r\n */\r\n\r\nfunction getErrorHeaders (err) {\r\n  if (!err.headers || typeof err.headers !== 'object') {\r\n    return undefined\r\n  }\r\n\r\n  var headers = Object.create(null)\r\n  var keys = Object.keys(err.headers)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    headers[key] = err.headers[key]\r\n  }\r\n\r\n  return headers\r\n}\r\n\r\n/**\r\n * Get message from Error object, fallback to status message.\r\n *\r\n * @param {Error} err\r\n * @param {number} status\r\n * @param {string} env\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getErrorMessage (err, status, env) {\r\n  var msg\r\n\r\n  if (env !== 'production') {\r\n    // use err.stack, which typically includes err.message\r\n    msg = err.stack\r\n\r\n    // fallback to err.toString() when possible\r\n    if (!msg && typeof err.toString === 'function') {\r\n      msg = err.toString()\r\n    }\r\n  }\r\n\r\n  return msg || statuses[status]\r\n}\r\n\r\n/**\r\n * Get status code from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {number}\r\n * @private\r\n */\r\n\r\nfunction getErrorStatusCode (err) {\r\n  // check err.status\r\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\r\n    return err.status\r\n  }\r\n\r\n  // check err.statusCode\r\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\r\n    return err.statusCode\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\n/**\r\n * Get resource name for the request.\r\n *\r\n * This is typically just the original pathname of the request\r\n * but will fallback to \"resource\" is that cannot be determined.\r\n *\r\n * @param {IncomingMessage} req\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getResourceName (req) {\r\n  try {\r\n    return parseUrl.original(req).pathname\r\n  } catch (e) {\r\n    return 'resource'\r\n  }\r\n}\r\n\r\n/**\r\n * Get status code from response.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @return {number}\r\n * @private\r\n */\r\n\r\nfunction getResponseStatusCode (res) {\r\n  var status = res.statusCode\r\n\r\n  // default status code to 500 if outside valid range\r\n  if (typeof status !== 'number' || status < 400 || status > 599) {\r\n    status = 500\r\n  }\r\n\r\n  return status\r\n}\r\n\r\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction headersSent (res) {\r\n  return typeof res.headersSent !== 'boolean'\r\n    ? Boolean(res._header)\r\n    : res.headersSent\r\n}\r\n\r\n/**\r\n * Send response.\r\n *\r\n * @param {IncomingMessage} req\r\n * @param {OutgoingMessage} res\r\n * @param {number} status\r\n * @param {object} headers\r\n * @param {string} message\r\n * @private\r\n */\r\n\r\nfunction send (req, res, status, headers, message) {\r\n  function write () {\r\n    // response body\r\n    var body = createHtmlDocument(message)\r\n\r\n    // response status\r\n    res.statusCode = status\r\n    res.statusMessage = statuses[status]\r\n\r\n    // response headers\r\n    setHeaders(res, headers)\r\n\r\n    // security headers\r\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n\r\n    // standard headers\r\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\r\n\r\n    if (req.method === 'HEAD') {\r\n      res.end()\r\n      return\r\n    }\r\n\r\n    res.end(body, 'utf8')\r\n  }\r\n\r\n  if (isFinished(req)) {\r\n    write()\r\n    return\r\n  }\r\n\r\n  // unpipe everything from the request\r\n  unpipe(req)\r\n\r\n  // flush the request\r\n  onFinished(req, write)\r\n  req.resume()\r\n}\r\n\r\n/**\r\n * Set response headers from an object.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @param {object} headers\r\n * @private\r\n */\r\n\r\nfunction setHeaders (res, headers) {\r\n  if (!headers) {\r\n    return\r\n  }\r\n\r\n  var keys = Object.keys(headers)\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    res.setHeader(key, headers[key])\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211211
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\debug\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\debug\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Detect Electron renderer process, which is node, but we should\r\n * treat as a browser.\r\n */\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJ0eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBSSxPQUFPQSxPQUFQLEtBQW1CLFdBQW5CLElBQWtDQSxPQUFPLENBQUNDLElBQVIsS0FBaUIsVUFBdkQsRUFBbUU7QUFDakVDLEVBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsT0FBTyxDQUFDLGNBQUQsQ0FBeEI7QUFDRCxDQUZELE1BRU87QUFDTEYsRUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxPQUFPLENBQUMsV0FBRCxDQUF4QjtBQUNEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxkZWJ1Z1xcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRGV0ZWN0IEVsZWN0cm9uIHJlbmRlcmVyIHByb2Nlc3MsIHdoaWNoIGlzIG5vZGUsIGJ1dCB3ZSBzaG91bGRcclxuICogdHJlYXQgYXMgYSBicm93c2VyLlxyXG4gKi9cclxuXHJcbmlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy50eXBlID09PSAncmVuZGVyZXInKSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Jyb3dzZXIuanMnKTtcclxufSBlbHNlIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbm9kZS5qcycpO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "process",
        "type",
        "module",
        "exports",
        "require"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AAEA,IAAI,OAAOA,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,IAAR,KAAiB,UAAvD,EAAmE;AACjEC,EAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,cAAD,CAAxB;AACD,CAFD,MAEO;AACLF,EAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,WAAD,CAAxB;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
      "sourcesContent": [
        "/**\r\n * Detect Electron renderer process, which is node, but we should\r\n * treat as a browser.\r\n */\r\n\r\nif (typeof process !== 'undefined' && process.type === 'renderer') {\r\n  module.exports = require('./browser.js');\r\n} else {\r\n  module.exports = require('./node.js');\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211071
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\debug\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\debug\\\\src\\\\node.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\node.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\node.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\node.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
        "sourceFileName": "node.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Module dependencies.\r\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\n\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\r\n * Colors.\r\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // coerce string value into JS value\n\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;else if (/^(no|off|false|disabled)$/i.test(val)) val = false;else if (val === 'null') val = null;else val = Number(val);\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\r\n * The file descriptor to write the `debug()` calls to.\r\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\r\n *\r\n *   $ DEBUG_FD=3 node script.js 3>debug.log\r\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function () {}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();\n}\n\nvar stream = 1 === fd ? process.stdout : 2 === fd ? process.stderr : createWritableStdioStream(fd);\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);\n}\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\n\n\nexports.formatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).split('\\n').map(function (str) {\n    return str.trim();\n  }).join(' ');\n};\n/**\r\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\r\n */\n\n\nexports.formatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString() + ' ' + name + ' ' + args[0];\n  }\n}\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\r\n */\n\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\n\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\r\n * Copied from `node/src/node.js`.\r\n *\r\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\r\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\r\n */\n\n\nfunction createWritableStdioStream(fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap'); // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty'; // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n\n      stream = new fs.SyncWriteStream(fd, {\n        autoClose: false\n      });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      }); // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe'; // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  } // For supporting legacy API we put the FD here.\n\n\n  stream.fd = fd;\n  stream._isStdio = true;\n  return stream;\n}\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n/**\r\n * Enable namespaces listed in `process.env.DEBUG` initially.\r\n */\n\n\nexports.enable(load());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "node.js"
      ],
      "names": [
        "tty",
        "require",
        "util",
        "exports",
        "module",
        "init",
        "log",
        "formatArgs",
        "save",
        "load",
        "useColors",
        "colors",
        "inspectOpts",
        "Object",
        "keys",
        "process",
        "env",
        "filter",
        "key",
        "test",
        "reduce",
        "obj",
        "prop",
        "substring",
        "toLowerCase",
        "replace",
        "_",
        "k",
        "toUpperCase",
        "val",
        "Number",
        "fd",
        "parseInt",
        "DEBUG_FD",
        "deprecate",
        "stream",
        "stdout",
        "stderr",
        "createWritableStdioStream",
        "Boolean",
        "isatty",
        "formatters",
        "o",
        "v",
        "inspect",
        "split",
        "map",
        "str",
        "trim",
        "join",
        "O",
        "args",
        "name",
        "namespace",
        "c",
        "color",
        "prefix",
        "push",
        "humanize",
        "diff",
        "Date",
        "toUTCString",
        "write",
        "format",
        "apply",
        "arguments",
        "namespaces",
        "DEBUG",
        "tty_wrap",
        "binding",
        "guessHandleType",
        "WriteStream",
        "_type",
        "_handle",
        "unref",
        "fs",
        "SyncWriteStream",
        "autoClose",
        "net",
        "Socket",
        "readable",
        "writable",
        "read",
        "Error",
        "_isStdio",
        "debug",
        "i",
        "length",
        "enable"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
      "sourcesContent": [
        "/**\r\n * Module dependencies.\r\n */\r\n\r\nvar tty = require('tty');\r\nvar util = require('util');\r\n\r\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = require('./debug');\r\nexports.init = init;\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [6, 2, 3, 4, 5, 1];\r\n\r\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\r\n\r\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\r\n  return /^debug_/i.test(key);\r\n}).reduce(function (obj, key) {\r\n  // camel-case\r\n  var prop = key\r\n    .substring(6)\r\n    .toLowerCase()\r\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\r\n\r\n  // coerce string value into JS value\r\n  var val = process.env[key];\r\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\r\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\r\n  else if (val === 'null') val = null;\r\n  else val = Number(val);\r\n\r\n  obj[prop] = val;\r\n  return obj;\r\n}, {});\r\n\r\n/**\r\n * The file descriptor to write the `debug()` calls to.\r\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\r\n *\r\n *   $ DEBUG_FD=3 node script.js 3>debug.log\r\n */\r\n\r\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\r\n\r\nif (1 !== fd && 2 !== fd) {\r\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\r\n}\r\n\r\nvar stream = 1 === fd ? process.stdout :\r\n             2 === fd ? process.stderr :\r\n             createWritableStdioStream(fd);\r\n\r\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\r\n\r\nfunction useColors() {\r\n  return 'colors' in exports.inspectOpts\r\n    ? Boolean(exports.inspectOpts.colors)\r\n    : tty.isatty(fd);\r\n}\r\n\r\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\r\n\r\nexports.formatters.o = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts)\r\n    .split('\\n').map(function(str) {\r\n      return str.trim()\r\n    }).join(' ');\r\n};\r\n\r\n/**\r\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\r\n */\r\n\r\nexports.formatters.O = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts);\r\n};\r\n\r\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var name = this.namespace;\r\n  var useColors = this.useColors;\r\n\r\n  if (useColors) {\r\n    var c = this.color;\r\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\r\n\r\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\r\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\r\n  } else {\r\n    args[0] = new Date().toUTCString()\r\n      + ' ' + name + ' ' + args[0];\r\n  }\r\n}\r\n\r\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\r\n */\r\n\r\nfunction log() {\r\n  return stream.write(util.format.apply(util, arguments) + '\\n');\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  if (null == namespaces) {\r\n    // If you set a process.env field to null or undefined, it gets cast to the\r\n    // string 'null' or 'undefined'. Just delete instead.\r\n    delete process.env.DEBUG;\r\n  } else {\r\n    process.env.DEBUG = namespaces;\r\n  }\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  return process.env.DEBUG;\r\n}\r\n\r\n/**\r\n * Copied from `node/src/node.js`.\r\n *\r\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\r\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\r\n */\r\n\r\nfunction createWritableStdioStream (fd) {\r\n  var stream;\r\n  var tty_wrap = process.binding('tty_wrap');\r\n\r\n  // Note stream._type is used for test-module-load-list.js\r\n\r\n  switch (tty_wrap.guessHandleType(fd)) {\r\n    case 'TTY':\r\n      stream = new tty.WriteStream(fd);\r\n      stream._type = 'tty';\r\n\r\n      // Hack to have stream not keep the event loop alive.\r\n      // See https://github.com/joyent/node/issues/1726\r\n      if (stream._handle && stream._handle.unref) {\r\n        stream._handle.unref();\r\n      }\r\n      break;\r\n\r\n    case 'FILE':\r\n      var fs = require('fs');\r\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\r\n      stream._type = 'fs';\r\n      break;\r\n\r\n    case 'PIPE':\r\n    case 'TCP':\r\n      var net = require('net');\r\n      stream = new net.Socket({\r\n        fd: fd,\r\n        readable: false,\r\n        writable: true\r\n      });\r\n\r\n      // FIXME Should probably have an option in net.Socket to create a\r\n      // stream from an existing fd which is writable only. But for now\r\n      // we'll just add this hack and set the `readable` member to false.\r\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\r\n      stream.readable = false;\r\n      stream.read = null;\r\n      stream._type = 'pipe';\r\n\r\n      // FIXME Hack to have stream not keep the event loop alive.\r\n      // See https://github.com/joyent/node/issues/1726\r\n      if (stream._handle && stream._handle.unref) {\r\n        stream._handle.unref();\r\n      }\r\n      break;\r\n\r\n    default:\r\n      // Probably an error on in uv_guess_handle()\r\n      throw new Error('Implement me. Unknown stream file type!');\r\n  }\r\n\r\n  // For supporting legacy API we put the FD here.\r\n  stream.fd = fd;\r\n\r\n  stream._isStdio = true;\r\n\r\n  return stream;\r\n}\r\n\r\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\r\n\r\nfunction init (debug) {\r\n  debug.inspectOpts = {};\r\n\r\n  var keys = Object.keys(exports.inspectOpts);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n  }\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `process.env.DEBUG` initially.\r\n */\r\n\r\nexports.enable(load());\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211071
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\debug\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\debug\\\\src\\\\debug.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\debug.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\debug.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\debug.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
        "sourceFileName": "debug.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\n\nexports.names = [];\nexports.skips = [];\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\n\nexports.formatters = {};\n/**\r\n * Previous log timestamp.\r\n */\n\nvar prevTime;\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\n\n\nfunction createDebug(namespace) {\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace); // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nfunction enabled(name) {\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "debug.js"
      ],
      "names": [
        "exports",
        "module",
        "createDebug",
        "debug",
        "coerce",
        "disable",
        "enable",
        "enabled",
        "humanize",
        "require",
        "names",
        "skips",
        "formatters",
        "prevTime",
        "selectColor",
        "namespace",
        "hash",
        "i",
        "charCodeAt",
        "colors",
        "Math",
        "abs",
        "length",
        "self",
        "curr",
        "Date",
        "ms",
        "diff",
        "prev",
        "args",
        "Array",
        "arguments",
        "unshift",
        "index",
        "replace",
        "match",
        "format",
        "formatter",
        "val",
        "call",
        "splice",
        "formatArgs",
        "logFn",
        "log",
        "console",
        "bind",
        "apply",
        "useColors",
        "color",
        "init",
        "namespaces",
        "save",
        "split",
        "len",
        "push",
        "RegExp",
        "substr",
        "name",
        "test",
        "Error",
        "stack",
        "message"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\debug\\src\\",
      "sourcesContent": [
        "\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = require('ms');\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Previous log timestamp.\r\n */\r\n\r\nvar prevTime;\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  return debug;\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211071
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\ms\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\ms\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ms\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ms\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ms\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ms\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ms\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Helpers.\r\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\r\n * Pluralization helper.\r\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "s",
        "m",
        "h",
        "d",
        "y",
        "module",
        "exports",
        "val",
        "options",
        "type",
        "length",
        "parse",
        "isNaN",
        "long",
        "fmtLong",
        "fmtShort",
        "Error",
        "JSON",
        "stringify",
        "str",
        "String",
        "match",
        "exec",
        "n",
        "parseFloat",
        "toLowerCase",
        "undefined",
        "ms",
        "Math",
        "round",
        "plural",
        "name",
        "floor",
        "ceil"
      ],
      "mappings": "AAAA;AACA;AACA;AAEA,IAAIA,CAAC,GAAG,IAAR;AACA,IAAIC,CAAC,GAAGD,CAAC,GAAG,EAAZ;AACA,IAAIE,CAAC,GAAGD,CAAC,GAAG,EAAZ;AACA,IAAIE,CAAC,GAAGD,CAAC,GAAG,EAAZ;AACA,IAAIE,CAAC,GAAGD,CAAC,GAAG,MAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACtCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,IAAI,GAAG,OAAOF,GAAlB;;AACA,MAAIE,IAAI,KAAK,QAAT,IAAqBF,GAAG,CAACG,MAAJ,GAAa,CAAtC,EAAyC;AACvC,WAAOC,KAAK,CAACJ,GAAD,CAAZ;AACD,GAFD,MAEO,IAAIE,IAAI,KAAK,QAAT,IAAqBG,KAAK,CAACL,GAAD,CAAL,KAAe,KAAxC,EAA+C;AACpD,WAAOC,OAAO,CAACK,IAAR,GAAeC,OAAO,CAACP,GAAD,CAAtB,GAA8BQ,QAAQ,CAACR,GAAD,CAA7C;AACD;;AACD,QAAM,IAAIS,KAAJ,CACJ,0DACEC,IAAI,CAACC,SAAL,CAAeX,GAAf,CAFE,CAAN;AAID,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASI,KAAT,CAAeQ,GAAf,EAAoB;AAClBA,EAAAA,GAAG,GAAGC,MAAM,CAACD,GAAD,CAAZ;;AACA,MAAIA,GAAG,CAACT,MAAJ,GAAa,GAAjB,EAAsB;AACpB;AACD;;AACD,MAAIW,KAAK,GAAG,wHAAwHC,IAAxH,CACVH,GADU,CAAZ;;AAGA,MAAI,CAACE,KAAL,EAAY;AACV;AACD;;AACD,MAAIE,CAAC,GAAGC,UAAU,CAACH,KAAK,CAAC,CAAD,CAAN,CAAlB;AACA,MAAIZ,IAAI,GAAG,CAACY,KAAK,CAAC,CAAD,CAAL,IAAY,IAAb,EAAmBI,WAAnB,EAAX;;AACA,UAAQhB,IAAR;AACE,SAAK,OAAL;AACA,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,IAAL;AACA,SAAK,GAAL;AACE,aAAOc,CAAC,GAAGnB,CAAX;;AACF,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,GAAL;AACE,aAAOmB,CAAC,GAAGpB,CAAX;;AACF,SAAK,OAAL;AACA,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,IAAL;AACA,SAAK,GAAL;AACE,aAAOoB,CAAC,GAAGrB,CAAX;;AACF,SAAK,SAAL;AACA,SAAK,QAAL;AACA,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,GAAL;AACE,aAAOqB,CAAC,GAAGtB,CAAX;;AACF,SAAK,SAAL;AACA,SAAK,QAAL;AACA,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,GAAL;AACE,aAAOsB,CAAC,GAAGvB,CAAX;;AACF,SAAK,cAAL;AACA,SAAK,aAAL;AACA,SAAK,OAAL;AACA,SAAK,MAAL;AACA,SAAK,IAAL;AACE,aAAOuB,CAAP;;AACF;AACE,aAAOG,SAAP;AApCJ;AAsCD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASX,QAAT,CAAkBY,EAAlB,EAAsB;AACpB,MAAIA,EAAE,IAAIxB,CAAV,EAAa;AACX,WAAOyB,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAGxB,CAAhB,IAAqB,GAA5B;AACD;;AACD,MAAIwB,EAAE,IAAIzB,CAAV,EAAa;AACX,WAAO0B,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAGzB,CAAhB,IAAqB,GAA5B;AACD;;AACD,MAAIyB,EAAE,IAAI1B,CAAV,EAAa;AACX,WAAO2B,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG1B,CAAhB,IAAqB,GAA5B;AACD;;AACD,MAAI0B,EAAE,IAAI3B,CAAV,EAAa;AACX,WAAO4B,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG3B,CAAhB,IAAqB,GAA5B;AACD;;AACD,SAAO2B,EAAE,GAAG,IAAZ;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASb,OAAT,CAAiBa,EAAjB,EAAqB;AACnB,SAAOG,MAAM,CAACH,EAAD,EAAKxB,CAAL,EAAQ,KAAR,CAAN,IACL2B,MAAM,CAACH,EAAD,EAAKzB,CAAL,EAAQ,MAAR,CADD,IAEL4B,MAAM,CAACH,EAAD,EAAK1B,CAAL,EAAQ,QAAR,CAFD,IAGL6B,MAAM,CAACH,EAAD,EAAK3B,CAAL,EAAQ,QAAR,CAHD,IAIL2B,EAAE,GAAG,KAJP;AAKD;AAED;AACA;AACA;;;AAEA,SAASG,MAAT,CAAgBH,EAAhB,EAAoBJ,CAApB,EAAuBQ,IAAvB,EAA6B;AAC3B,MAAIJ,EAAE,GAAGJ,CAAT,EAAY;AACV;AACD;;AACD,MAAII,EAAE,GAAGJ,CAAC,GAAG,GAAb,EAAkB;AAChB,WAAOK,IAAI,CAACI,KAAL,CAAWL,EAAE,GAAGJ,CAAhB,IAAqB,GAArB,GAA2BQ,IAAlC;AACD;;AACD,SAAOH,IAAI,CAACK,IAAL,CAAUN,EAAE,GAAGJ,CAAf,IAAoB,GAApB,GAA0BQ,IAA1B,GAAiC,GAAxC;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ms\\",
      "sourcesContent": [
        "/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return;\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name;\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's';\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211586
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\encodeurl\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\encodeurl\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\encodeurl\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\encodeurl\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\encodeurl\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\encodeurl\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\encodeurl\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * encodeurl\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = encodeUrl;\n/**\r\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\r\n * and including invalid escape sequences.\r\n * @private\r\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g;\n/**\r\n * RegExp to match unmatched surrogate pair.\r\n * @private\r\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g;\n/**\r\n * String to replace unmatched surrogate pair with.\r\n * @private\r\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2';\n/**\r\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\r\n *\r\n * This function will take an already-encoded URL and encode all the non-URL\r\n * code points. This function will not encode the \"%\" character unless it is\r\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\r\n * be encoded as `%25foo`).\r\n *\r\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\r\n * hard as it can to properly encode the given URL, including replacing any raw,\r\n * unpaired surrogate pairs with the Unicode replacement character prior to\r\n * encoding.\r\n *\r\n * @param {string} url\r\n * @return {string}\r\n * @public\r\n */\n\nfunction encodeUrl(url) {\n  return String(url).replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE).replace(ENCODE_CHARS_REGEXP, encodeURI);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJlbmNvZGVVcmwiLCJFTkNPREVfQ0hBUlNfUkVHRVhQIiwiVU5NQVRDSEVEX1NVUlJPR0FURV9QQUlSX1JFR0VYUCIsIlVOTUFUQ0hFRF9TVVJST0dBVEVfUEFJUl9SRVBMQUNFIiwidXJsIiwiU3RyaW5nIiwicmVwbGFjZSIsImVuY29kZVVSSSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsU0FBakI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUlDLG1CQUFtQixHQUFHLDBHQUExQjtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUlDLCtCQUErQixHQUFHLDBFQUF0QztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUlDLGdDQUFnQyxHQUFHLFlBQXZDO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTSCxTQUFULENBQW9CSSxHQUFwQixFQUF5QjtBQUN2QixTQUFPQyxNQUFNLENBQUNELEdBQUQsQ0FBTixDQUNKRSxPQURJLENBQ0lKLCtCQURKLEVBQ3FDQyxnQ0FEckMsRUFFSkcsT0FGSSxDQUVJTCxtQkFGSixFQUV5Qk0sU0FGekIsQ0FBUDtBQUdEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxlbmNvZGV1cmxcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBlbmNvZGV1cmxcclxuICogQ29weXJpZ2h0KGMpIDIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnXHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGVuY29kZVVybFxyXG5cclxuLyoqXHJcbiAqIFJlZ0V4cCB0byBtYXRjaCBub24tVVJMIGNvZGUgcG9pbnRzLCAqYWZ0ZXIqIGVuY29kaW5nIChpLmUuIG5vdCBpbmNsdWRpbmcgXCIlXCIpXHJcbiAqIGFuZCBpbmNsdWRpbmcgaW52YWxpZCBlc2NhcGUgc2VxdWVuY2VzLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbnZhciBFTkNPREVfQ0hBUlNfUkVHRVhQID0gLyg/OlteXFx4MjFcXHgyNVxceDI2LVxceDNCXFx4M0RcXHgzRi1cXHg1QlxceDVEXFx4NUZcXHg2MS1cXHg3QVxceDdFXXwlKD86W14wLTlBLUZhLWZdfFswLTlBLUZhLWZdW14wLTlBLUZhLWZdfCQpKSsvZ1xyXG5cclxuLyoqXHJcbiAqIFJlZ0V4cCB0byBtYXRjaCB1bm1hdGNoZWQgc3Vycm9nYXRlIHBhaXIuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIFVOTUFUQ0hFRF9TVVJST0dBVEVfUEFJUl9SRUdFWFAgPSAvKF58W15cXHVEODAwLVxcdURCRkZdKVtcXHVEQzAwLVxcdURGRkZdfFtcXHVEODAwLVxcdURCRkZdKFteXFx1REMwMC1cXHVERkZGXXwkKS9nXHJcblxyXG4vKipcclxuICogU3RyaW5nIHRvIHJlcGxhY2UgdW5tYXRjaGVkIHN1cnJvZ2F0ZSBwYWlyIHdpdGguXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIFVOTUFUQ0hFRF9TVVJST0dBVEVfUEFJUl9SRVBMQUNFID0gJyQxXFx1RkZGRCQyJ1xyXG5cclxuLyoqXHJcbiAqIEVuY29kZSBhIFVSTCB0byBhIHBlcmNlbnQtZW5jb2RlZCBmb3JtLCBleGNsdWRpbmcgYWxyZWFkeS1lbmNvZGVkIHNlcXVlbmNlcy5cclxuICpcclxuICogVGhpcyBmdW5jdGlvbiB3aWxsIHRha2UgYW4gYWxyZWFkeS1lbmNvZGVkIFVSTCBhbmQgZW5jb2RlIGFsbCB0aGUgbm9uLVVSTFxyXG4gKiBjb2RlIHBvaW50cy4gVGhpcyBmdW5jdGlvbiB3aWxsIG5vdCBlbmNvZGUgdGhlIFwiJVwiIGNoYXJhY3RlciB1bmxlc3MgaXQgaXNcclxuICogbm90IHBhcnQgb2YgYSB2YWxpZCBzZXF1ZW5jZSAoYCUyMGAgd2lsbCBiZSBsZWZ0IGFzLWlzLCBidXQgYCVmb29gIHdpbGxcclxuICogYmUgZW5jb2RlZCBhcyBgJTI1Zm9vYCkuXHJcbiAqXHJcbiAqIFRoaXMgZW5jb2RlIGlzIG1lYW50IHRvIGJlIFwic2FmZVwiIGFuZCBkb2VzIG5vdCB0aHJvdyBlcnJvcnMuIEl0IHdpbGwgdHJ5IGFzXHJcbiAqIGhhcmQgYXMgaXQgY2FuIHRvIHByb3Blcmx5IGVuY29kZSB0aGUgZ2l2ZW4gVVJMLCBpbmNsdWRpbmcgcmVwbGFjaW5nIGFueSByYXcsXHJcbiAqIHVucGFpcmVkIHN1cnJvZ2F0ZSBwYWlycyB3aXRoIHRoZSBVbmljb2RlIHJlcGxhY2VtZW50IGNoYXJhY3RlciBwcmlvciB0b1xyXG4gKiBlbmNvZGluZy5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBlbmNvZGVVcmwgKHVybCkge1xyXG4gIHJldHVybiBTdHJpbmcodXJsKVxyXG4gICAgLnJlcGxhY2UoVU5NQVRDSEVEX1NVUlJPR0FURV9QQUlSX1JFR0VYUCwgVU5NQVRDSEVEX1NVUlJPR0FURV9QQUlSX1JFUExBQ0UpXHJcbiAgICAucmVwbGFjZShFTkNPREVfQ0hBUlNfUkVHRVhQLCBlbmNvZGVVUkkpXHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "encodeUrl",
        "ENCODE_CHARS_REGEXP",
        "UNMATCHED_SURROGATE_PAIR_REGEXP",
        "UNMATCHED_SURROGATE_PAIR_REPLACE",
        "url",
        "String",
        "replace",
        "encodeURI"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,0GAA1B;AAEA;AACA;AACA;AACA;;AAEA,IAAIC,+BAA+B,GAAG,0EAAtC;AAEA;AACA;AACA;AACA;;AAEA,IAAIC,gCAAgC,GAAG,YAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASH,SAAT,CAAoBI,GAApB,EAAyB;AACvB,SAAOC,MAAM,CAACD,GAAD,CAAN,CACJE,OADI,CACIJ,+BADJ,EACqCC,gCADrC,EAEJG,OAFI,CAEIL,mBAFJ,EAEyBM,SAFzB,CAAP;AAGD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\encodeurl\\",
      "sourcesContent": [
        "/*!\r\n * encodeurl\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = encodeUrl\r\n\r\n/**\r\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\r\n * and including invalid escape sequences.\r\n * @private\r\n */\r\n\r\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\r\n\r\n/**\r\n * RegExp to match unmatched surrogate pair.\r\n * @private\r\n */\r\n\r\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\r\n\r\n/**\r\n * String to replace unmatched surrogate pair with.\r\n * @private\r\n */\r\n\r\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\r\n\r\n/**\r\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\r\n *\r\n * This function will take an already-encoded URL and encode all the non-URL\r\n * code points. This function will not encode the \"%\" character unless it is\r\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\r\n * be encoded as `%25foo`).\r\n *\r\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\r\n * hard as it can to properly encode the given URL, including replacing any raw,\r\n * unpaired surrogate pairs with the Unicode replacement character prior to\r\n * encoding.\r\n *\r\n * @param {string} url\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction encodeUrl (url) {\r\n  return String(url)\r\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\r\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211165
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\escape-html\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\escape-html\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\escape-html\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\escape-html\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\escape-html\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\escape-html\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\escape-html\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * escape-html\r\n * Copyright(c) 2012-2013 TJ Holowaychuk\r\n * Copyright(c) 2015 Andreas Lubbe\r\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = escapeHtml;\n/**\r\n * Escape special characters in the given string of html.\r\n *\r\n * @param  {string} string The string to escape for inserting into HTML\r\n * @return {string}\r\n * @public\r\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n\n      case 39:\n        // '\n        escape = '&#39;';\n        break;\n\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1hdGNoSHRtbFJlZ0V4cCIsIm1vZHVsZSIsImV4cG9ydHMiLCJlc2NhcGVIdG1sIiwic3RyaW5nIiwic3RyIiwibWF0Y2giLCJleGVjIiwiZXNjYXBlIiwiaHRtbCIsImluZGV4IiwibGFzdEluZGV4IiwibGVuZ3RoIiwiY2hhckNvZGVBdCIsInN1YnN0cmluZyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUlBLGVBQWUsR0FBRyxTQUF0QjtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLFVBQWpCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsTUFBSUMsR0FBRyxHQUFHLEtBQUtELE1BQWY7QUFDQSxNQUFJRSxLQUFLLEdBQUdOLGVBQWUsQ0FBQ08sSUFBaEIsQ0FBcUJGLEdBQXJCLENBQVo7O0FBRUEsTUFBSSxDQUFDQyxLQUFMLEVBQVk7QUFDVixXQUFPRCxHQUFQO0FBQ0Q7O0FBRUQsTUFBSUcsTUFBSjtBQUNBLE1BQUlDLElBQUksR0FBRyxFQUFYO0FBQ0EsTUFBSUMsS0FBSyxHQUFHLENBQVo7QUFDQSxNQUFJQyxTQUFTLEdBQUcsQ0FBaEI7O0FBRUEsT0FBS0QsS0FBSyxHQUFHSixLQUFLLENBQUNJLEtBQW5CLEVBQTBCQSxLQUFLLEdBQUdMLEdBQUcsQ0FBQ08sTUFBdEMsRUFBOENGLEtBQUssRUFBbkQsRUFBdUQ7QUFDckQsWUFBUUwsR0FBRyxDQUFDUSxVQUFKLENBQWVILEtBQWYsQ0FBUjtBQUNFLFdBQUssRUFBTDtBQUFTO0FBQ1BGLFFBQUFBLE1BQU0sR0FBRyxRQUFUO0FBQ0E7O0FBQ0YsV0FBSyxFQUFMO0FBQVM7QUFDUEEsUUFBQUEsTUFBTSxHQUFHLE9BQVQ7QUFDQTs7QUFDRixXQUFLLEVBQUw7QUFBUztBQUNQQSxRQUFBQSxNQUFNLEdBQUcsT0FBVDtBQUNBOztBQUNGLFdBQUssRUFBTDtBQUFTO0FBQ1BBLFFBQUFBLE1BQU0sR0FBRyxNQUFUO0FBQ0E7O0FBQ0YsV0FBSyxFQUFMO0FBQVM7QUFDUEEsUUFBQUEsTUFBTSxHQUFHLE1BQVQ7QUFDQTs7QUFDRjtBQUNFO0FBakJKOztBQW9CQSxRQUFJRyxTQUFTLEtBQUtELEtBQWxCLEVBQXlCO0FBQ3ZCRCxNQUFBQSxJQUFJLElBQUlKLEdBQUcsQ0FBQ1MsU0FBSixDQUFjSCxTQUFkLEVBQXlCRCxLQUF6QixDQUFSO0FBQ0Q7O0FBRURDLElBQUFBLFNBQVMsR0FBR0QsS0FBSyxHQUFHLENBQXBCO0FBQ0FELElBQUFBLElBQUksSUFBSUQsTUFBUjtBQUNEOztBQUVELFNBQU9HLFNBQVMsS0FBS0QsS0FBZCxHQUNIRCxJQUFJLEdBQUdKLEdBQUcsQ0FBQ1MsU0FBSixDQUFjSCxTQUFkLEVBQXlCRCxLQUF6QixDQURKLEdBRUhELElBRko7QUFHRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcZXNjYXBlLWh0bWxcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBlc2NhcGUtaHRtbFxyXG4gKiBDb3B5cmlnaHQoYykgMjAxMi0yMDEzIFRKIEhvbG93YXljaHVrXHJcbiAqIENvcHlyaWdodChjKSAyMDE1IEFuZHJlYXMgTHViYmVcclxuICogQ29weXJpZ2h0KGMpIDIwMTUgVGlhbmNoZW5nIFwiVGltb3RoeVwiIEd1XHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbnZhciBtYXRjaEh0bWxSZWdFeHAgPSAvW1wiJyY8Pl0vO1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBlc2NhcGVIdG1sO1xyXG5cclxuLyoqXHJcbiAqIEVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgaW4gdGhlIGdpdmVuIHN0cmluZyBvZiBodG1sLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0cmluZyBUaGUgc3RyaW5nIHRvIGVzY2FwZSBmb3IgaW5zZXJ0aW5nIGludG8gSFRNTFxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBlc2NhcGVIdG1sKHN0cmluZykge1xyXG4gIHZhciBzdHIgPSAnJyArIHN0cmluZztcclxuICB2YXIgbWF0Y2ggPSBtYXRjaEh0bWxSZWdFeHAuZXhlYyhzdHIpO1xyXG5cclxuICBpZiAoIW1hdGNoKSB7XHJcbiAgICByZXR1cm4gc3RyO1xyXG4gIH1cclxuXHJcbiAgdmFyIGVzY2FwZTtcclxuICB2YXIgaHRtbCA9ICcnO1xyXG4gIHZhciBpbmRleCA9IDA7XHJcbiAgdmFyIGxhc3RJbmRleCA9IDA7XHJcblxyXG4gIGZvciAoaW5kZXggPSBtYXRjaC5pbmRleDsgaW5kZXggPCBzdHIubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICBzd2l0Y2ggKHN0ci5jaGFyQ29kZUF0KGluZGV4KSkge1xyXG4gICAgICBjYXNlIDM0OiAvLyBcIlxyXG4gICAgICAgIGVzY2FwZSA9ICcmcXVvdDsnO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDM4OiAvLyAmXHJcbiAgICAgICAgZXNjYXBlID0gJyZhbXA7JztcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAzOTogLy8gJ1xyXG4gICAgICAgIGVzY2FwZSA9ICcmIzM5Oyc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgNjA6IC8vIDxcclxuICAgICAgICBlc2NhcGUgPSAnJmx0Oyc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgNjI6IC8vID5cclxuICAgICAgICBlc2NhcGUgPSAnJmd0Oyc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgY29udGludWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGxhc3RJbmRleCAhPT0gaW5kZXgpIHtcclxuICAgICAgaHRtbCArPSBzdHIuc3Vic3RyaW5nKGxhc3RJbmRleCwgaW5kZXgpO1xyXG4gICAgfVxyXG5cclxuICAgIGxhc3RJbmRleCA9IGluZGV4ICsgMTtcclxuICAgIGh0bWwgKz0gZXNjYXBlO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGxhc3RJbmRleCAhPT0gaW5kZXhcclxuICAgID8gaHRtbCArIHN0ci5zdWJzdHJpbmcobGFzdEluZGV4LCBpbmRleClcclxuICAgIDogaHRtbDtcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "matchHtmlRegExp",
        "module",
        "exports",
        "escapeHtml",
        "string",
        "str",
        "match",
        "exec",
        "escape",
        "html",
        "index",
        "lastIndex",
        "length",
        "charCodeAt",
        "substring"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,eAAe,GAAG,SAAtB;AAEA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,GAAG,GAAG,KAAKD,MAAf;AACA,MAAIE,KAAK,GAAGN,eAAe,CAACO,IAAhB,CAAqBF,GAArB,CAAZ;;AAEA,MAAI,CAACC,KAAL,EAAY;AACV,WAAOD,GAAP;AACD;;AAED,MAAIG,MAAJ;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;;AAEA,OAAKD,KAAK,GAAGJ,KAAK,CAACI,KAAnB,EAA0BA,KAAK,GAAGL,GAAG,CAACO,MAAtC,EAA8CF,KAAK,EAAnD,EAAuD;AACrD,YAAQL,GAAG,CAACQ,UAAJ,CAAeH,KAAf,CAAR;AACE,WAAK,EAAL;AAAS;AACPF,QAAAA,MAAM,GAAG,QAAT;AACA;;AACF,WAAK,EAAL;AAAS;AACPA,QAAAA,MAAM,GAAG,OAAT;AACA;;AACF,WAAK,EAAL;AAAS;AACPA,QAAAA,MAAM,GAAG,OAAT;AACA;;AACF,WAAK,EAAL;AAAS;AACPA,QAAAA,MAAM,GAAG,MAAT;AACA;;AACF,WAAK,EAAL;AAAS;AACPA,QAAAA,MAAM,GAAG,MAAT;AACA;;AACF;AACE;AAjBJ;;AAoBA,QAAIG,SAAS,KAAKD,KAAlB,EAAyB;AACvBD,MAAAA,IAAI,IAAIJ,GAAG,CAACS,SAAJ,CAAcH,SAAd,EAAyBD,KAAzB,CAAR;AACD;;AAEDC,IAAAA,SAAS,GAAGD,KAAK,GAAG,CAApB;AACAD,IAAAA,IAAI,IAAID,MAAR;AACD;;AAED,SAAOG,SAAS,KAAKD,KAAd,GACHD,IAAI,GAAGJ,GAAG,CAACS,SAAJ,CAAcH,SAAd,EAAyBD,KAAzB,CADJ,GAEHD,IAFJ;AAGD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\escape-html\\",
      "sourcesContent": [
        "/*!\r\n * escape-html\r\n * Copyright(c) 2012-2013 TJ Holowaychuk\r\n * Copyright(c) 2015 Andreas Lubbe\r\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar matchHtmlRegExp = /[\"'&<>]/;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = escapeHtml;\r\n\r\n/**\r\n * Escape special characters in the given string of html.\r\n *\r\n * @param  {string} string The string to escape for inserting into HTML\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction escapeHtml(string) {\r\n  var str = '' + string;\r\n  var match = matchHtmlRegExp.exec(str);\r\n\r\n  if (!match) {\r\n    return str;\r\n  }\r\n\r\n  var escape;\r\n  var html = '';\r\n  var index = 0;\r\n  var lastIndex = 0;\r\n\r\n  for (index = match.index; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34: // \"\r\n        escape = '&quot;';\r\n        break;\r\n      case 38: // &\r\n        escape = '&amp;';\r\n        break;\r\n      case 39: // '\r\n        escape = '&#39;';\r\n        break;\r\n      case 60: // <\r\n        escape = '&lt;';\r\n        break;\r\n      case 62: // >\r\n        escape = '&gt;';\r\n        break;\r\n      default:\r\n        continue;\r\n    }\r\n\r\n    if (lastIndex !== index) {\r\n      html += str.substring(lastIndex, index);\r\n    }\r\n\r\n    lastIndex = index + 1;\r\n    html += escape;\r\n  }\r\n\r\n  return lastIndex !== index\r\n    ? html + str.substring(lastIndex, index)\r\n    : html;\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211165
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\on-finished\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\on-finished\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\on-finished\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\on-finished\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\on-finished\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\on-finished\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\on-finished\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * on-finished\r\n * Copyright(c) 2013 Jonathan Ong\r\n * Copyright(c) 2014 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = onFinished;\nmodule.exports.isFinished = isFinished;\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar first = require('ee-first');\n/**\r\n * Variables.\r\n * @private\r\n */\n\n/* istanbul ignore next */\n\n\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\n/**\r\n * Invoke callback when the response has finished, useful for\r\n * cleaning up resources afterwards.\r\n *\r\n * @param {object} msg\r\n * @param {function} listener\r\n * @return {object}\r\n * @public\r\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg);\n    return msg;\n  } // attach the listener to the message\n\n\n  attachListener(msg, listener);\n  return msg;\n}\n/**\r\n * Determine if message is already finished.\r\n *\r\n * @param {object} msg\r\n * @return {boolean}\r\n * @public\r\n */\n\n\nfunction isFinished(msg) {\n  var socket = msg.socket;\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || socket && !socket.writable);\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || msg.complete && !msg.readable);\n  } // don't know\n\n\n  return undefined;\n}\n/**\r\n * Attach a finished listener to the message.\r\n *\r\n * @param {object} msg\r\n * @param {function} callback\r\n * @private\r\n */\n\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg;\n  var eeSocket;\n  var finished = false;\n\n  function onFinish(error) {\n    eeMsg.cancel();\n    eeSocket.cancel();\n    finished = true;\n    callback(error);\n  } // finished on first message event\n\n\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish);\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket);\n    if (finished) return;\n    if (eeMsg !== eeSocket) return; // finished on first socket event\n\n    eeSocket = first([[socket, 'error', 'close']], onFinish);\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket);\n    return;\n  } // wait for socket to be assigned\n\n\n  msg.on('socket', onSocket);\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket);\n  }\n}\n/**\r\n * Attach the listener to the message.\r\n *\r\n * @param {object} msg\r\n * @return {function}\r\n * @private\r\n */\n\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished; // create a private single listener with queue\n\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg);\n    attachFinishedListener(msg, attached);\n  }\n\n  attached.queue.push(listener);\n}\n/**\r\n * Create listener on message.\r\n *\r\n * @param {object} msg\r\n * @return {function}\r\n * @private\r\n */\n\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null;\n    if (!listener.queue) return;\n    var queue = listener.queue;\n    listener.queue = null;\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg);\n    }\n  }\n\n  listener.queue = [];\n  return listener;\n}\n/**\r\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\r\n *\r\n * @param {ServerResponse} res\r\n * @param {function} callback\r\n * @private\r\n */\n\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket;\n  if (typeof assignSocket !== 'function') return; // res.on('socket', callback) is broken in 0.8\n\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket);\n    callback(socket);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "onFinished",
        "isFinished",
        "first",
        "require",
        "defer",
        "setImmediate",
        "fn",
        "process",
        "nextTick",
        "bind",
        "apply",
        "arguments",
        "msg",
        "listener",
        "attachListener",
        "socket",
        "finished",
        "Boolean",
        "writable",
        "complete",
        "upgrade",
        "readable",
        "undefined",
        "attachFinishedListener",
        "callback",
        "eeMsg",
        "eeSocket",
        "onFinish",
        "error",
        "cancel",
        "onSocket",
        "removeListener",
        "on",
        "patchAssignSocket",
        "attached",
        "__onFinished",
        "queue",
        "createListener",
        "push",
        "err",
        "i",
        "length",
        "res",
        "assignSocket",
        "_assignSocket",
        "call"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\on-finished\\",
      "sourcesContent": [
        "/*!\r\n * on-finished\r\n * Copyright(c) 2013 Jonathan Ong\r\n * Copyright(c) 2014 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = onFinished\r\nmodule.exports.isFinished = isFinished\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar first = require('ee-first')\r\n\r\n/**\r\n * Variables.\r\n * @private\r\n */\r\n\r\n/* istanbul ignore next */\r\nvar defer = typeof setImmediate === 'function'\r\n  ? setImmediate\r\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\r\n\r\n/**\r\n * Invoke callback when the response has finished, useful for\r\n * cleaning up resources afterwards.\r\n *\r\n * @param {object} msg\r\n * @param {function} listener\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction onFinished(msg, listener) {\r\n  if (isFinished(msg) !== false) {\r\n    defer(listener, null, msg)\r\n    return msg\r\n  }\r\n\r\n  // attach the listener to the message\r\n  attachListener(msg, listener)\r\n\r\n  return msg\r\n}\r\n\r\n/**\r\n * Determine if message is already finished.\r\n *\r\n * @param {object} msg\r\n * @return {boolean}\r\n * @public\r\n */\r\n\r\nfunction isFinished(msg) {\r\n  var socket = msg.socket\r\n\r\n  if (typeof msg.finished === 'boolean') {\r\n    // OutgoingMessage\r\n    return Boolean(msg.finished || (socket && !socket.writable))\r\n  }\r\n\r\n  if (typeof msg.complete === 'boolean') {\r\n    // IncomingMessage\r\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\r\n  }\r\n\r\n  // don't know\r\n  return undefined\r\n}\r\n\r\n/**\r\n * Attach a finished listener to the message.\r\n *\r\n * @param {object} msg\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nfunction attachFinishedListener(msg, callback) {\r\n  var eeMsg\r\n  var eeSocket\r\n  var finished = false\r\n\r\n  function onFinish(error) {\r\n    eeMsg.cancel()\r\n    eeSocket.cancel()\r\n\r\n    finished = true\r\n    callback(error)\r\n  }\r\n\r\n  // finished on first message event\r\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\r\n\r\n  function onSocket(socket) {\r\n    // remove listener\r\n    msg.removeListener('socket', onSocket)\r\n\r\n    if (finished) return\r\n    if (eeMsg !== eeSocket) return\r\n\r\n    // finished on first socket event\r\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\r\n  }\r\n\r\n  if (msg.socket) {\r\n    // socket already assigned\r\n    onSocket(msg.socket)\r\n    return\r\n  }\r\n\r\n  // wait for socket to be assigned\r\n  msg.on('socket', onSocket)\r\n\r\n  if (msg.socket === undefined) {\r\n    // node.js 0.8 patch\r\n    patchAssignSocket(msg, onSocket)\r\n  }\r\n}\r\n\r\n/**\r\n * Attach the listener to the message.\r\n *\r\n * @param {object} msg\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction attachListener(msg, listener) {\r\n  var attached = msg.__onFinished\r\n\r\n  // create a private single listener with queue\r\n  if (!attached || !attached.queue) {\r\n    attached = msg.__onFinished = createListener(msg)\r\n    attachFinishedListener(msg, attached)\r\n  }\r\n\r\n  attached.queue.push(listener)\r\n}\r\n\r\n/**\r\n * Create listener on message.\r\n *\r\n * @param {object} msg\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction createListener(msg) {\r\n  function listener(err) {\r\n    if (msg.__onFinished === listener) msg.__onFinished = null\r\n    if (!listener.queue) return\r\n\r\n    var queue = listener.queue\r\n    listener.queue = null\r\n\r\n    for (var i = 0; i < queue.length; i++) {\r\n      queue[i](err, msg)\r\n    }\r\n  }\r\n\r\n  listener.queue = []\r\n\r\n  return listener\r\n}\r\n\r\n/**\r\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\r\n *\r\n * @param {ServerResponse} res\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nfunction patchAssignSocket(res, callback) {\r\n  var assignSocket = res.assignSocket\r\n\r\n  if (typeof assignSocket !== 'function') return\r\n\r\n  // res.on('socket', callback) is broken in 0.8\r\n  res.assignSocket = function _assignSocket(socket) {\r\n    assignSocket.call(this, socket)\r\n    callback(socket)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211617
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\ee-first\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\ee-first\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ee-first\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ee-first\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ee-first\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ee-first\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ee-first\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * ee-first\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = first;\n/**\r\n * Get the first event in a set of event emitters and event pairs.\r\n *\r\n * @param {array} stuff\r\n * @param {function} done\r\n * @public\r\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff)) throw new TypeError('arg must be an array of [ee, events...] arrays');\n  var cleanups = [];\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i];\n    if (!Array.isArray(arr) || arr.length < 2) throw new TypeError('each array member must be [ee, events...]');\n    var ee = arr[0];\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j];\n      var fn = listener(event, callback); // listen to the event\n\n      ee.on(event, fn); // push this listener to the list of cleanups\n\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn\n      });\n    }\n  }\n\n  function callback() {\n    cleanup();\n    done.apply(null, arguments);\n  }\n\n  function cleanup() {\n    var x;\n\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i];\n      x.ee.removeListener(x.event, x.fn);\n    }\n  }\n\n  function thunk(fn) {\n    done = fn;\n  }\n\n  thunk.cancel = cleanup;\n  return thunk;\n}\n/**\r\n * Create the event listener.\r\n * @private\r\n */\n\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length);\n    var ee = this;\n    var err = event === 'error' ? arg1 : null; // copy args to prevent arguments escaping scope\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    done(err, ee, event, args);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmaXJzdCIsInN0dWZmIiwiZG9uZSIsIkFycmF5IiwiaXNBcnJheSIsIlR5cGVFcnJvciIsImNsZWFudXBzIiwiaSIsImxlbmd0aCIsImFyciIsImVlIiwiaiIsImV2ZW50IiwiZm4iLCJsaXN0ZW5lciIsImNhbGxiYWNrIiwib24iLCJwdXNoIiwiY2xlYW51cCIsImFwcGx5IiwiYXJndW1lbnRzIiwieCIsInJlbW92ZUxpc3RlbmVyIiwidGh1bmsiLCJjYW5jZWwiLCJvbmV2ZW50IiwiYXJnMSIsImFyZ3MiLCJlcnIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLEtBQWpCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsS0FBVCxDQUFlQyxLQUFmLEVBQXNCQyxJQUF0QixFQUE0QjtBQUMxQixNQUFJLENBQUNDLEtBQUssQ0FBQ0MsT0FBTixDQUFjSCxLQUFkLENBQUwsRUFDRSxNQUFNLElBQUlJLFNBQUosQ0FBYyxnREFBZCxDQUFOO0FBRUYsTUFBSUMsUUFBUSxHQUFHLEVBQWY7O0FBRUEsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHTixLQUFLLENBQUNPLE1BQTFCLEVBQWtDRCxDQUFDLEVBQW5DLEVBQXVDO0FBQ3JDLFFBQUlFLEdBQUcsR0FBR1IsS0FBSyxDQUFDTSxDQUFELENBQWY7QUFFQSxRQUFJLENBQUNKLEtBQUssQ0FBQ0MsT0FBTixDQUFjSyxHQUFkLENBQUQsSUFBdUJBLEdBQUcsQ0FBQ0QsTUFBSixHQUFhLENBQXhDLEVBQ0UsTUFBTSxJQUFJSCxTQUFKLENBQWMsMkNBQWQsQ0FBTjtBQUVGLFFBQUlLLEVBQUUsR0FBR0QsR0FBRyxDQUFDLENBQUQsQ0FBWjs7QUFFQSxTQUFLLElBQUlFLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0QsTUFBeEIsRUFBZ0NHLENBQUMsRUFBakMsRUFBcUM7QUFDbkMsVUFBSUMsS0FBSyxHQUFHSCxHQUFHLENBQUNFLENBQUQsQ0FBZjtBQUNBLFVBQUlFLEVBQUUsR0FBR0MsUUFBUSxDQUFDRixLQUFELEVBQVFHLFFBQVIsQ0FBakIsQ0FGbUMsQ0FJbkM7O0FBQ0FMLE1BQUFBLEVBQUUsQ0FBQ00sRUFBSCxDQUFNSixLQUFOLEVBQWFDLEVBQWIsRUFMbUMsQ0FNbkM7O0FBQ0FQLE1BQUFBLFFBQVEsQ0FBQ1csSUFBVCxDQUFjO0FBQ1pQLFFBQUFBLEVBQUUsRUFBRUEsRUFEUTtBQUVaRSxRQUFBQSxLQUFLLEVBQUVBLEtBRks7QUFHWkMsUUFBQUEsRUFBRSxFQUFFQTtBQUhRLE9BQWQ7QUFLRDtBQUNGOztBQUVELFdBQVNFLFFBQVQsR0FBb0I7QUFDbEJHLElBQUFBLE9BQU87QUFDUGhCLElBQUFBLElBQUksQ0FBQ2lCLEtBQUwsQ0FBVyxJQUFYLEVBQWlCQyxTQUFqQjtBQUNEOztBQUVELFdBQVNGLE9BQVQsR0FBbUI7QUFDakIsUUFBSUcsQ0FBSjs7QUFDQSxTQUFLLElBQUlkLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELFFBQVEsQ0FBQ0UsTUFBN0IsRUFBcUNELENBQUMsRUFBdEMsRUFBMEM7QUFDeENjLE1BQUFBLENBQUMsR0FBR2YsUUFBUSxDQUFDQyxDQUFELENBQVo7QUFDQWMsTUFBQUEsQ0FBQyxDQUFDWCxFQUFGLENBQUtZLGNBQUwsQ0FBb0JELENBQUMsQ0FBQ1QsS0FBdEIsRUFBNkJTLENBQUMsQ0FBQ1IsRUFBL0I7QUFDRDtBQUNGOztBQUVELFdBQVNVLEtBQVQsQ0FBZVYsRUFBZixFQUFtQjtBQUNqQlgsSUFBQUEsSUFBSSxHQUFHVyxFQUFQO0FBQ0Q7O0FBRURVLEVBQUFBLEtBQUssQ0FBQ0MsTUFBTixHQUFlTixPQUFmO0FBRUEsU0FBT0ssS0FBUDtBQUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNULFFBQVQsQ0FBa0JGLEtBQWxCLEVBQXlCVixJQUF6QixFQUErQjtBQUM3QixTQUFPLFNBQVN1QixPQUFULENBQWlCQyxJQUFqQixFQUF1QjtBQUM1QixRQUFJQyxJQUFJLEdBQUcsSUFBSXhCLEtBQUosQ0FBVWlCLFNBQVMsQ0FBQ1osTUFBcEIsQ0FBWDtBQUNBLFFBQUlFLEVBQUUsR0FBRyxJQUFUO0FBQ0EsUUFBSWtCLEdBQUcsR0FBR2hCLEtBQUssS0FBSyxPQUFWLEdBQ05jLElBRE0sR0FFTixJQUZKLENBSDRCLENBTzVCOztBQUNBLFNBQUssSUFBSW5CLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdvQixJQUFJLENBQUNuQixNQUF6QixFQUFpQ0QsQ0FBQyxFQUFsQyxFQUFzQztBQUNwQ29CLE1BQUFBLElBQUksQ0FBQ3BCLENBQUQsQ0FBSixHQUFVYSxTQUFTLENBQUNiLENBQUQsQ0FBbkI7QUFDRDs7QUFFREwsSUFBQUEsSUFBSSxDQUFDMEIsR0FBRCxFQUFNbEIsRUFBTixFQUFVRSxLQUFWLEVBQWlCZSxJQUFqQixDQUFKO0FBQ0QsR0FiRDtBQWNEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxlZS1maXJzdFxcIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGVlLWZpcnN0XHJcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgZXhwb3J0cy5cclxuICogQHB1YmxpY1xyXG4gKi9cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZmlyc3RcclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIGZpcnN0IGV2ZW50IGluIGEgc2V0IG9mIGV2ZW50IGVtaXR0ZXJzIGFuZCBldmVudCBwYWlycy5cclxuICpcclxuICogQHBhcmFtIHthcnJheX0gc3R1ZmZcclxuICogQHBhcmFtIHtmdW5jdGlvbn0gZG9uZVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZmlyc3Qoc3R1ZmYsIGRvbmUpIHtcclxuICBpZiAoIUFycmF5LmlzQXJyYXkoc3R1ZmYpKVxyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJnIG11c3QgYmUgYW4gYXJyYXkgb2YgW2VlLCBldmVudHMuLi5dIGFycmF5cycpXHJcblxyXG4gIHZhciBjbGVhbnVwcyA9IFtdXHJcblxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R1ZmYubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBhcnIgPSBzdHVmZltpXVxyXG5cclxuICAgIGlmICghQXJyYXkuaXNBcnJheShhcnIpIHx8IGFyci5sZW5ndGggPCAyKVxyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdlYWNoIGFycmF5IG1lbWJlciBtdXN0IGJlIFtlZSwgZXZlbnRzLi4uXScpXHJcblxyXG4gICAgdmFyIGVlID0gYXJyWzBdXHJcblxyXG4gICAgZm9yICh2YXIgaiA9IDE7IGogPCBhcnIubGVuZ3RoOyBqKyspIHtcclxuICAgICAgdmFyIGV2ZW50ID0gYXJyW2pdXHJcbiAgICAgIHZhciBmbiA9IGxpc3RlbmVyKGV2ZW50LCBjYWxsYmFjaylcclxuXHJcbiAgICAgIC8vIGxpc3RlbiB0byB0aGUgZXZlbnRcclxuICAgICAgZWUub24oZXZlbnQsIGZuKVxyXG4gICAgICAvLyBwdXNoIHRoaXMgbGlzdGVuZXIgdG8gdGhlIGxpc3Qgb2YgY2xlYW51cHNcclxuICAgICAgY2xlYW51cHMucHVzaCh7XHJcbiAgICAgICAgZWU6IGVlLFxyXG4gICAgICAgIGV2ZW50OiBldmVudCxcclxuICAgICAgICBmbjogZm4sXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjYWxsYmFjaygpIHtcclxuICAgIGNsZWFudXAoKVxyXG4gICAgZG9uZS5hcHBseShudWxsLCBhcmd1bWVudHMpXHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjbGVhbnVwKCkge1xyXG4gICAgdmFyIHhcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xlYW51cHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgeCA9IGNsZWFudXBzW2ldXHJcbiAgICAgIHguZWUucmVtb3ZlTGlzdGVuZXIoeC5ldmVudCwgeC5mbilcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHRodW5rKGZuKSB7XHJcbiAgICBkb25lID0gZm5cclxuICB9XHJcblxyXG4gIHRodW5rLmNhbmNlbCA9IGNsZWFudXBcclxuXHJcbiAgcmV0dXJuIHRodW5rXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgdGhlIGV2ZW50IGxpc3RlbmVyLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGxpc3RlbmVyKGV2ZW50LCBkb25lKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIG9uZXZlbnQoYXJnMSkge1xyXG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aClcclxuICAgIHZhciBlZSA9IHRoaXNcclxuICAgIHZhciBlcnIgPSBldmVudCA9PT0gJ2Vycm9yJ1xyXG4gICAgICA/IGFyZzFcclxuICAgICAgOiBudWxsXHJcblxyXG4gICAgLy8gY29weSBhcmdzIHRvIHByZXZlbnQgYXJndW1lbnRzIGVzY2FwaW5nIHNjb3BlXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpXVxyXG4gICAgfVxyXG5cclxuICAgIGRvbmUoZXJyLCBlZSwgZXZlbnQsIGFyZ3MpXHJcbiAgfVxyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "first",
        "stuff",
        "done",
        "Array",
        "isArray",
        "TypeError",
        "cleanups",
        "i",
        "length",
        "arr",
        "ee",
        "j",
        "event",
        "fn",
        "listener",
        "callback",
        "on",
        "push",
        "cleanup",
        "apply",
        "arguments",
        "x",
        "removeListener",
        "thunk",
        "cancel",
        "onevent",
        "arg1",
        "args",
        "err"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AAC1B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAL,EACE,MAAM,IAAII,SAAJ,CAAc,gDAAd,CAAN;AAEF,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,GAAG,GAAGR,KAAK,CAACM,CAAD,CAAf;AAEA,QAAI,CAACJ,KAAK,CAACC,OAAN,CAAcK,GAAd,CAAD,IAAuBA,GAAG,CAACD,MAAJ,GAAa,CAAxC,EACE,MAAM,IAAIH,SAAJ,CAAc,2CAAd,CAAN;AAEF,QAAIK,EAAE,GAAGD,GAAG,CAAC,CAAD,CAAZ;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACD,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;AACnC,UAAIC,KAAK,GAAGH,GAAG,CAACE,CAAD,CAAf;AACA,UAAIE,EAAE,GAAGC,QAAQ,CAACF,KAAD,EAAQG,QAAR,CAAjB,CAFmC,CAInC;;AACAL,MAAAA,EAAE,CAACM,EAAH,CAAMJ,KAAN,EAAaC,EAAb,EALmC,CAMnC;;AACAP,MAAAA,QAAQ,CAACW,IAAT,CAAc;AACZP,QAAAA,EAAE,EAAEA,EADQ;AAEZE,QAAAA,KAAK,EAAEA,KAFK;AAGZC,QAAAA,EAAE,EAAEA;AAHQ,OAAd;AAKD;AACF;;AAED,WAASE,QAAT,GAAoB;AAClBG,IAAAA,OAAO;AACPhB,IAAAA,IAAI,CAACiB,KAAL,CAAW,IAAX,EAAiBC,SAAjB;AACD;;AAED,WAASF,OAAT,GAAmB;AACjB,QAAIG,CAAJ;;AACA,SAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCc,MAAAA,CAAC,GAAGf,QAAQ,CAACC,CAAD,CAAZ;AACAc,MAAAA,CAAC,CAACX,EAAF,CAAKY,cAAL,CAAoBD,CAAC,CAACT,KAAtB,EAA6BS,CAAC,CAACR,EAA/B;AACD;AACF;;AAED,WAASU,KAAT,CAAeV,EAAf,EAAmB;AACjBX,IAAAA,IAAI,GAAGW,EAAP;AACD;;AAEDU,EAAAA,KAAK,CAACC,MAAN,GAAeN,OAAf;AAEA,SAAOK,KAAP;AACD;AAED;AACA;AACA;AACA;;;AAEA,SAAST,QAAT,CAAkBF,KAAlB,EAAyBV,IAAzB,EAA+B;AAC7B,SAAO,SAASuB,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,QAAIC,IAAI,GAAG,IAAIxB,KAAJ,CAAUiB,SAAS,CAACZ,MAApB,CAAX;AACA,QAAIE,EAAE,GAAG,IAAT;AACA,QAAIkB,GAAG,GAAGhB,KAAK,KAAK,OAAV,GACNc,IADM,GAEN,IAFJ,CAH4B,CAO5B;;AACA,SAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,IAAI,CAACnB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCoB,MAAAA,IAAI,CAACpB,CAAD,CAAJ,GAAUa,SAAS,CAACb,CAAD,CAAnB;AACD;;AAEDL,IAAAA,IAAI,CAAC0B,GAAD,EAAMlB,EAAN,EAAUE,KAAV,EAAiBe,IAAjB,CAAJ;AACD,GAbD;AAcD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ee-first\\",
      "sourcesContent": [
        "/*!\r\n * ee-first\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = first\r\n\r\n/**\r\n * Get the first event in a set of event emitters and event pairs.\r\n *\r\n * @param {array} stuff\r\n * @param {function} done\r\n * @public\r\n */\r\n\r\nfunction first(stuff, done) {\r\n  if (!Array.isArray(stuff))\r\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\r\n\r\n  var cleanups = []\r\n\r\n  for (var i = 0; i < stuff.length; i++) {\r\n    var arr = stuff[i]\r\n\r\n    if (!Array.isArray(arr) || arr.length < 2)\r\n      throw new TypeError('each array member must be [ee, events...]')\r\n\r\n    var ee = arr[0]\r\n\r\n    for (var j = 1; j < arr.length; j++) {\r\n      var event = arr[j]\r\n      var fn = listener(event, callback)\r\n\r\n      // listen to the event\r\n      ee.on(event, fn)\r\n      // push this listener to the list of cleanups\r\n      cleanups.push({\r\n        ee: ee,\r\n        event: event,\r\n        fn: fn,\r\n      })\r\n    }\r\n  }\r\n\r\n  function callback() {\r\n    cleanup()\r\n    done.apply(null, arguments)\r\n  }\r\n\r\n  function cleanup() {\r\n    var x\r\n    for (var i = 0; i < cleanups.length; i++) {\r\n      x = cleanups[i]\r\n      x.ee.removeListener(x.event, x.fn)\r\n    }\r\n  }\r\n\r\n  function thunk(fn) {\r\n    done = fn\r\n  }\r\n\r\n  thunk.cancel = cleanup\r\n\r\n  return thunk\r\n}\r\n\r\n/**\r\n * Create the event listener.\r\n * @private\r\n */\r\n\r\nfunction listener(event, done) {\r\n  return function onevent(arg1) {\r\n    var args = new Array(arguments.length)\r\n    var ee = this\r\n    var err = event === 'error'\r\n      ? arg1\r\n      : null\r\n\r\n    // copy args to prevent arguments escaping scope\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n\r\n    done(err, ee, event, args)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211118
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\parseurl\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\parseurl\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\parseurl\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\parseurl\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\parseurl\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\parseurl\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\parseurl\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * parseurl\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar url = require('url');\n\nvar parse = url.parse;\nvar Url = url.Url;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = parseurl;\nmodule.exports.original = originalurl;\n/**\r\n * Parse the `req` url with memoization.\r\n *\r\n * @param {ServerRequest} req\r\n * @return {Object}\r\n * @public\r\n */\n\nfunction parseurl(req) {\n  var url = req.url;\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined;\n  }\n\n  var parsed = req._parsedUrl;\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed;\n  } // Parse the URL\n\n\n  parsed = fastparse(url);\n  parsed._raw = url;\n  return req._parsedUrl = parsed;\n}\n\n;\n/**\r\n * Parse the `req` original url with fallback and memoization.\r\n *\r\n * @param {ServerRequest} req\r\n * @return {Object}\r\n * @public\r\n */\n\nfunction originalurl(req) {\n  var url = req.originalUrl;\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req);\n  }\n\n  var parsed = req._parsedOriginalUrl;\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed;\n  } // Parse the URL\n\n\n  parsed = fastparse(url);\n  parsed._raw = url;\n  return req._parsedOriginalUrl = parsed;\n}\n\n;\n/**\r\n * Parse the `str` url with fast-path short-cut.\r\n *\r\n * @param {string} str\r\n * @return {Object}\r\n * @private\r\n */\n\nfunction fastparse(str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f\n  /* / */\n  ) {\n    return parse(str);\n  }\n\n  var pathname = str;\n  var query = null;\n  var search = null; // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f:\n        /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i);\n          query = str.substring(i + 1);\n          search = str.substring(i);\n        }\n\n        break;\n\n      case 0x09:\n      /* \\t */\n\n      case 0x0a:\n      /* \\n */\n\n      case 0x0c:\n      /* \\f */\n\n      case 0x0d:\n      /* \\r */\n\n      case 0x20:\n      /*    */\n\n      case 0x23:\n      /* #  */\n\n      case 0xa0:\n      case 0xfeff:\n        return parse(str);\n    }\n  }\n\n  var url = Url !== undefined ? new Url() : {};\n  url.path = str;\n  url.href = str;\n  url.pathname = pathname;\n\n  if (search !== null) {\n    url.query = query;\n    url.search = search;\n  }\n\n  return url;\n}\n/**\r\n * Determine if parsed is still fresh for url.\r\n *\r\n * @param {string} url\r\n * @param {object} parsedUrl\r\n * @return {boolean}\r\n * @private\r\n */\n\n\nfunction fresh(url, parsedUrl) {\n  return typeof parsedUrl === 'object' && parsedUrl !== null && (Url === undefined || parsedUrl instanceof Url) && parsedUrl._raw === url;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "url",
        "require",
        "parse",
        "Url",
        "module",
        "exports",
        "parseurl",
        "original",
        "originalurl",
        "req",
        "undefined",
        "parsed",
        "_parsedUrl",
        "fresh",
        "fastparse",
        "_raw",
        "originalUrl",
        "_parsedOriginalUrl",
        "str",
        "charCodeAt",
        "pathname",
        "query",
        "search",
        "i",
        "length",
        "substring",
        "path",
        "href",
        "parsedUrl"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\parseurl\\",
      "sourcesContent": [
        "/*!\r\n * parseurl\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar url = require('url')\r\nvar parse = url.parse\r\nvar Url = url.Url\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = parseurl\r\nmodule.exports.original = originalurl\r\n\r\n/**\r\n * Parse the `req` url with memoization.\r\n *\r\n * @param {ServerRequest} req\r\n * @return {Object}\r\n * @public\r\n */\r\n\r\nfunction parseurl (req) {\r\n  var url = req.url\r\n\r\n  if (url === undefined) {\r\n    // URL is undefined\r\n    return undefined\r\n  }\r\n\r\n  var parsed = req._parsedUrl\r\n\r\n  if (fresh(url, parsed)) {\r\n    // Return cached URL parse\r\n    return parsed\r\n  }\r\n\r\n  // Parse the URL\r\n  parsed = fastparse(url)\r\n  parsed._raw = url\r\n\r\n  return (req._parsedUrl = parsed)\r\n};\r\n\r\n/**\r\n * Parse the `req` original url with fallback and memoization.\r\n *\r\n * @param {ServerRequest} req\r\n * @return {Object}\r\n * @public\r\n */\r\n\r\nfunction originalurl (req) {\r\n  var url = req.originalUrl\r\n\r\n  if (typeof url !== 'string') {\r\n    // Fallback\r\n    return parseurl(req)\r\n  }\r\n\r\n  var parsed = req._parsedOriginalUrl\r\n\r\n  if (fresh(url, parsed)) {\r\n    // Return cached URL parse\r\n    return parsed\r\n  }\r\n\r\n  // Parse the URL\r\n  parsed = fastparse(url)\r\n  parsed._raw = url\r\n\r\n  return (req._parsedOriginalUrl = parsed)\r\n};\r\n\r\n/**\r\n * Parse the `str` url with fast-path short-cut.\r\n *\r\n * @param {string} str\r\n * @return {Object}\r\n * @private\r\n */\r\n\r\nfunction fastparse (str) {\r\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\r\n    return parse(str)\r\n  }\r\n\r\n  var pathname = str\r\n  var query = null\r\n  var search = null\r\n\r\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\r\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\r\n  // And unrolls it into a for loop\r\n  for (var i = 1; i < str.length; i++) {\r\n    switch (str.charCodeAt(i)) {\r\n      case 0x3f: /* ?  */\r\n        if (search === null) {\r\n          pathname = str.substring(0, i)\r\n          query = str.substring(i + 1)\r\n          search = str.substring(i)\r\n        }\r\n        break\r\n      case 0x09: /* \\t */\r\n      case 0x0a: /* \\n */\r\n      case 0x0c: /* \\f */\r\n      case 0x0d: /* \\r */\r\n      case 0x20: /*    */\r\n      case 0x23: /* #  */\r\n      case 0xa0:\r\n      case 0xfeff:\r\n        return parse(str)\r\n    }\r\n  }\r\n\r\n  var url = Url !== undefined\r\n    ? new Url()\r\n    : {}\r\n\r\n  url.path = str\r\n  url.href = str\r\n  url.pathname = pathname\r\n\r\n  if (search !== null) {\r\n    url.query = query\r\n    url.search = search\r\n  }\r\n\r\n  return url\r\n}\r\n\r\n/**\r\n * Determine if parsed is still fresh for url.\r\n *\r\n * @param {string} url\r\n * @param {object} parsedUrl\r\n * @return {boolean}\r\n * @private\r\n */\r\n\r\nfunction fresh (url, parsedUrl) {\r\n  return typeof parsedUrl === 'object' &&\r\n    parsedUrl !== null &&\r\n    (Url === undefined || parsedUrl instanceof Url) &&\r\n    parsedUrl._raw === url\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211633
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\statuses\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\statuses\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\statuses\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\statuses\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\statuses\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\statuses\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\statuses\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * statuses\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar codes = require('./codes.json');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = status; // status code to message map\n\nstatus.STATUS_CODES = codes; // array of status codes\n\nstatus.codes = populateStatusesMap(status, codes); // status codes for redirects\n\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}; // status codes for empty bodies\n\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}; // status codes for when you should retry the request\n\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n};\n/**\r\n * Populate the statuses map for given codes.\r\n * @private\r\n */\n\nfunction populateStatusesMap(statuses, codes) {\n  var arr = [];\n  Object.keys(codes).forEach(function forEachCode(code) {\n    var message = codes[code];\n    var status = Number(code); // Populate properties\n\n    statuses[status] = message;\n    statuses[message] = status;\n    statuses[message.toLowerCase()] = status; // Add to array\n\n    arr.push(status);\n  });\n  return arr;\n}\n/**\r\n * Get the status code.\r\n *\r\n * Given a number, this will throw if it is not a known status\r\n * code, otherwise the code will be returned. Given a string,\r\n * the string will be parsed for a number and return the code\r\n * if valid, otherwise will lookup the code assuming this is\r\n * the status message.\r\n *\r\n * @param {string|number} code\r\n * @returns {number}\r\n * @public\r\n */\n\n\nfunction status(code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code);\n    return code;\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string');\n  } // '403'\n\n\n  var n = parseInt(code, 10);\n\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n);\n    return n;\n  }\n\n  n = status[code.toLowerCase()];\n  if (!n) throw new Error('invalid status message: \"' + code + '\"');\n  return n;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvZGVzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdGF0dXMiLCJTVEFUVVNfQ09ERVMiLCJwb3B1bGF0ZVN0YXR1c2VzTWFwIiwicmVkaXJlY3QiLCJlbXB0eSIsInJldHJ5Iiwic3RhdHVzZXMiLCJhcnIiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZvckVhY2hDb2RlIiwiY29kZSIsIm1lc3NhZ2UiLCJOdW1iZXIiLCJ0b0xvd2VyQ2FzZSIsInB1c2giLCJFcnJvciIsIlR5cGVFcnJvciIsIm4iLCJwYXJzZUludCIsImlzTmFOIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsTUFBakIsQyxDQUVBOztBQUNBQSxNQUFNLENBQUNDLFlBQVAsR0FBc0JMLEtBQXRCLEMsQ0FFQTs7QUFDQUksTUFBTSxDQUFDSixLQUFQLEdBQWVNLG1CQUFtQixDQUFDRixNQUFELEVBQVNKLEtBQVQsQ0FBbEMsQyxDQUVBOztBQUNBSSxNQUFNLENBQUNHLFFBQVAsR0FBa0I7QUFDaEIsT0FBSyxJQURXO0FBRWhCLE9BQUssSUFGVztBQUdoQixPQUFLLElBSFc7QUFJaEIsT0FBSyxJQUpXO0FBS2hCLE9BQUssSUFMVztBQU1oQixPQUFLLElBTlc7QUFPaEIsT0FBSztBQVBXLENBQWxCLEMsQ0FVQTs7QUFDQUgsTUFBTSxDQUFDSSxLQUFQLEdBQWU7QUFDYixPQUFLLElBRFE7QUFFYixPQUFLLElBRlE7QUFHYixPQUFLO0FBSFEsQ0FBZixDLENBTUE7O0FBQ0FKLE1BQU0sQ0FBQ0ssS0FBUCxHQUFlO0FBQ2IsT0FBSyxJQURRO0FBRWIsT0FBSyxJQUZRO0FBR2IsT0FBSztBQUhRLENBQWY7QUFNQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTSCxtQkFBVCxDQUE4QkksUUFBOUIsRUFBd0NWLEtBQXhDLEVBQStDO0FBQzdDLE1BQUlXLEdBQUcsR0FBRyxFQUFWO0FBRUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZYixLQUFaLEVBQW1CYyxPQUFuQixDQUEyQixTQUFTQyxXQUFULENBQXNCQyxJQUF0QixFQUE0QjtBQUNyRCxRQUFJQyxPQUFPLEdBQUdqQixLQUFLLENBQUNnQixJQUFELENBQW5CO0FBQ0EsUUFBSVosTUFBTSxHQUFHYyxNQUFNLENBQUNGLElBQUQsQ0FBbkIsQ0FGcUQsQ0FJckQ7O0FBQ0FOLElBQUFBLFFBQVEsQ0FBQ04sTUFBRCxDQUFSLEdBQW1CYSxPQUFuQjtBQUNBUCxJQUFBQSxRQUFRLENBQUNPLE9BQUQsQ0FBUixHQUFvQmIsTUFBcEI7QUFDQU0sSUFBQUEsUUFBUSxDQUFDTyxPQUFPLENBQUNFLFdBQVIsRUFBRCxDQUFSLEdBQWtDZixNQUFsQyxDQVBxRCxDQVNyRDs7QUFDQU8sSUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVNoQixNQUFUO0FBQ0QsR0FYRDtBQWFBLFNBQU9PLEdBQVA7QUFDRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxTQUFTUCxNQUFULENBQWlCWSxJQUFqQixFQUF1QjtBQUNyQixNQUFJLE9BQU9BLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7QUFDNUIsUUFBSSxDQUFDWixNQUFNLENBQUNZLElBQUQsQ0FBWCxFQUFtQixNQUFNLElBQUlLLEtBQUosQ0FBVSwwQkFBMEJMLElBQXBDLENBQU47QUFDbkIsV0FBT0EsSUFBUDtBQUNEOztBQUVELE1BQUksT0FBT0EsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtBQUM1QixVQUFNLElBQUlNLFNBQUosQ0FBYyxpQ0FBZCxDQUFOO0FBQ0QsR0FSb0IsQ0FVckI7OztBQUNBLE1BQUlDLENBQUMsR0FBR0MsUUFBUSxDQUFDUixJQUFELEVBQU8sRUFBUCxDQUFoQjs7QUFDQSxNQUFJLENBQUNTLEtBQUssQ0FBQ0YsQ0FBRCxDQUFWLEVBQWU7QUFDYixRQUFJLENBQUNuQixNQUFNLENBQUNtQixDQUFELENBQVgsRUFBZ0IsTUFBTSxJQUFJRixLQUFKLENBQVUsMEJBQTBCRSxDQUFwQyxDQUFOO0FBQ2hCLFdBQU9BLENBQVA7QUFDRDs7QUFFREEsRUFBQUEsQ0FBQyxHQUFHbkIsTUFBTSxDQUFDWSxJQUFJLENBQUNHLFdBQUwsRUFBRCxDQUFWO0FBQ0EsTUFBSSxDQUFDSSxDQUFMLEVBQVEsTUFBTSxJQUFJRixLQUFKLENBQVUsOEJBQThCTCxJQUE5QixHQUFxQyxHQUEvQyxDQUFOO0FBQ1IsU0FBT08sQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxzdGF0dXNlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIHN0YXR1c2VzXHJcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xyXG4gKiBDb3B5cmlnaHQoYykgMjAxNiBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbnZhciBjb2RlcyA9IHJlcXVpcmUoJy4vY29kZXMuanNvbicpXHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHN0YXR1c1xyXG5cclxuLy8gc3RhdHVzIGNvZGUgdG8gbWVzc2FnZSBtYXBcclxuc3RhdHVzLlNUQVRVU19DT0RFUyA9IGNvZGVzXHJcblxyXG4vLyBhcnJheSBvZiBzdGF0dXMgY29kZXNcclxuc3RhdHVzLmNvZGVzID0gcG9wdWxhdGVTdGF0dXNlc01hcChzdGF0dXMsIGNvZGVzKVxyXG5cclxuLy8gc3RhdHVzIGNvZGVzIGZvciByZWRpcmVjdHNcclxuc3RhdHVzLnJlZGlyZWN0ID0ge1xyXG4gIDMwMDogdHJ1ZSxcclxuICAzMDE6IHRydWUsXHJcbiAgMzAyOiB0cnVlLFxyXG4gIDMwMzogdHJ1ZSxcclxuICAzMDU6IHRydWUsXHJcbiAgMzA3OiB0cnVlLFxyXG4gIDMwODogdHJ1ZVxyXG59XHJcblxyXG4vLyBzdGF0dXMgY29kZXMgZm9yIGVtcHR5IGJvZGllc1xyXG5zdGF0dXMuZW1wdHkgPSB7XHJcbiAgMjA0OiB0cnVlLFxyXG4gIDIwNTogdHJ1ZSxcclxuICAzMDQ6IHRydWVcclxufVxyXG5cclxuLy8gc3RhdHVzIGNvZGVzIGZvciB3aGVuIHlvdSBzaG91bGQgcmV0cnkgdGhlIHJlcXVlc3Rcclxuc3RhdHVzLnJldHJ5ID0ge1xyXG4gIDUwMjogdHJ1ZSxcclxuICA1MDM6IHRydWUsXHJcbiAgNTA0OiB0cnVlXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQb3B1bGF0ZSB0aGUgc3RhdHVzZXMgbWFwIGZvciBnaXZlbiBjb2Rlcy5cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBwb3B1bGF0ZVN0YXR1c2VzTWFwIChzdGF0dXNlcywgY29kZXMpIHtcclxuICB2YXIgYXJyID0gW11cclxuXHJcbiAgT2JqZWN0LmtleXMoY29kZXMpLmZvckVhY2goZnVuY3Rpb24gZm9yRWFjaENvZGUgKGNvZGUpIHtcclxuICAgIHZhciBtZXNzYWdlID0gY29kZXNbY29kZV1cclxuICAgIHZhciBzdGF0dXMgPSBOdW1iZXIoY29kZSlcclxuXHJcbiAgICAvLyBQb3B1bGF0ZSBwcm9wZXJ0aWVzXHJcbiAgICBzdGF0dXNlc1tzdGF0dXNdID0gbWVzc2FnZVxyXG4gICAgc3RhdHVzZXNbbWVzc2FnZV0gPSBzdGF0dXNcclxuICAgIHN0YXR1c2VzW21lc3NhZ2UudG9Mb3dlckNhc2UoKV0gPSBzdGF0dXNcclxuXHJcbiAgICAvLyBBZGQgdG8gYXJyYXlcclxuICAgIGFyci5wdXNoKHN0YXR1cylcclxuICB9KVxyXG5cclxuICByZXR1cm4gYXJyXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIHN0YXR1cyBjb2RlLlxyXG4gKlxyXG4gKiBHaXZlbiBhIG51bWJlciwgdGhpcyB3aWxsIHRocm93IGlmIGl0IGlzIG5vdCBhIGtub3duIHN0YXR1c1xyXG4gKiBjb2RlLCBvdGhlcndpc2UgdGhlIGNvZGUgd2lsbCBiZSByZXR1cm5lZC4gR2l2ZW4gYSBzdHJpbmcsXHJcbiAqIHRoZSBzdHJpbmcgd2lsbCBiZSBwYXJzZWQgZm9yIGEgbnVtYmVyIGFuZCByZXR1cm4gdGhlIGNvZGVcclxuICogaWYgdmFsaWQsIG90aGVyd2lzZSB3aWxsIGxvb2t1cCB0aGUgY29kZSBhc3N1bWluZyB0aGlzIGlzXHJcbiAqIHRoZSBzdGF0dXMgbWVzc2FnZS5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfSBjb2RlXHJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBzdGF0dXMgKGNvZGUpIHtcclxuICBpZiAodHlwZW9mIGNvZGUgPT09ICdudW1iZXInKSB7XHJcbiAgICBpZiAoIXN0YXR1c1tjb2RlXSkgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHN0YXR1cyBjb2RlOiAnICsgY29kZSlcclxuICAgIHJldHVybiBjb2RlXHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIGNvZGUgIT09ICdzdHJpbmcnKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjb2RlIG11c3QgYmUgYSBudW1iZXIgb3Igc3RyaW5nJylcclxuICB9XHJcblxyXG4gIC8vICc0MDMnXHJcbiAgdmFyIG4gPSBwYXJzZUludChjb2RlLCAxMClcclxuICBpZiAoIWlzTmFOKG4pKSB7XHJcbiAgICBpZiAoIXN0YXR1c1tuXSkgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHN0YXR1cyBjb2RlOiAnICsgbilcclxuICAgIHJldHVybiBuXHJcbiAgfVxyXG5cclxuICBuID0gc3RhdHVzW2NvZGUudG9Mb3dlckNhc2UoKV1cclxuICBpZiAoIW4pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgbWVzc2FnZTogXCInICsgY29kZSArICdcIicpXHJcbiAgcmV0dXJuIG5cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "codes",
        "require",
        "module",
        "exports",
        "status",
        "STATUS_CODES",
        "populateStatusesMap",
        "redirect",
        "empty",
        "retry",
        "statuses",
        "arr",
        "Object",
        "keys",
        "forEach",
        "forEachCode",
        "code",
        "message",
        "Number",
        "toLowerCase",
        "push",
        "Error",
        "TypeError",
        "n",
        "parseInt",
        "isNaN"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;AAEA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,MAAjB,C,CAEA;;AACAA,MAAM,CAACC,YAAP,GAAsBL,KAAtB,C,CAEA;;AACAI,MAAM,CAACJ,KAAP,GAAeM,mBAAmB,CAACF,MAAD,EAASJ,KAAT,CAAlC,C,CAEA;;AACAI,MAAM,CAACG,QAAP,GAAkB;AAChB,OAAK,IADW;AAEhB,OAAK,IAFW;AAGhB,OAAK,IAHW;AAIhB,OAAK,IAJW;AAKhB,OAAK,IALW;AAMhB,OAAK,IANW;AAOhB,OAAK;AAPW,CAAlB,C,CAUA;;AACAH,MAAM,CAACI,KAAP,GAAe;AACb,OAAK,IADQ;AAEb,OAAK,IAFQ;AAGb,OAAK;AAHQ,CAAf,C,CAMA;;AACAJ,MAAM,CAACK,KAAP,GAAe;AACb,OAAK,IADQ;AAEb,OAAK,IAFQ;AAGb,OAAK;AAHQ,CAAf;AAMA;AACA;AACA;AACA;;AAEA,SAASH,mBAAT,CAA8BI,QAA9B,EAAwCV,KAAxC,EAA+C;AAC7C,MAAIW,GAAG,GAAG,EAAV;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBc,OAAnB,CAA2B,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AACrD,QAAIC,OAAO,GAAGjB,KAAK,CAACgB,IAAD,CAAnB;AACA,QAAIZ,MAAM,GAAGc,MAAM,CAACF,IAAD,CAAnB,CAFqD,CAIrD;;AACAN,IAAAA,QAAQ,CAACN,MAAD,CAAR,GAAmBa,OAAnB;AACAP,IAAAA,QAAQ,CAACO,OAAD,CAAR,GAAoBb,MAApB;AACAM,IAAAA,QAAQ,CAACO,OAAO,CAACE,WAAR,EAAD,CAAR,GAAkCf,MAAlC,CAPqD,CASrD;;AACAO,IAAAA,GAAG,CAACS,IAAJ,CAAShB,MAAT;AACD,GAXD;AAaA,SAAOO,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASP,MAAT,CAAiBY,IAAjB,EAAuB;AACrB,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAI,CAACZ,MAAM,CAACY,IAAD,CAAX,EAAmB,MAAM,IAAIK,KAAJ,CAAU,0BAA0BL,IAApC,CAAN;AACnB,WAAOA,IAAP;AACD;;AAED,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIM,SAAJ,CAAc,iCAAd,CAAN;AACD,GARoB,CAUrB;;;AACA,MAAIC,CAAC,GAAGC,QAAQ,CAACR,IAAD,EAAO,EAAP,CAAhB;;AACA,MAAI,CAACS,KAAK,CAACF,CAAD,CAAV,EAAe;AACb,QAAI,CAACnB,MAAM,CAACmB,CAAD,CAAX,EAAgB,MAAM,IAAIF,KAAJ,CAAU,0BAA0BE,CAApC,CAAN;AAChB,WAAOA,CAAP;AACD;;AAEDA,EAAAA,CAAC,GAAGnB,MAAM,CAACY,IAAI,CAACG,WAAL,EAAD,CAAV;AACA,MAAI,CAACI,CAAL,EAAQ,MAAM,IAAIF,KAAJ,CAAU,8BAA8BL,IAA9B,GAAqC,GAA/C,CAAN;AACR,SAAOO,CAAP;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\statuses\\",
      "sourcesContent": [
        "/*!\r\n * statuses\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar codes = require('./codes.json')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = status\r\n\r\n// status code to message map\r\nstatus.STATUS_CODES = codes\r\n\r\n// array of status codes\r\nstatus.codes = populateStatusesMap(status, codes)\r\n\r\n// status codes for redirects\r\nstatus.redirect = {\r\n  300: true,\r\n  301: true,\r\n  302: true,\r\n  303: true,\r\n  305: true,\r\n  307: true,\r\n  308: true\r\n}\r\n\r\n// status codes for empty bodies\r\nstatus.empty = {\r\n  204: true,\r\n  205: true,\r\n  304: true\r\n}\r\n\r\n// status codes for when you should retry the request\r\nstatus.retry = {\r\n  502: true,\r\n  503: true,\r\n  504: true\r\n}\r\n\r\n/**\r\n * Populate the statuses map for given codes.\r\n * @private\r\n */\r\n\r\nfunction populateStatusesMap (statuses, codes) {\r\n  var arr = []\r\n\r\n  Object.keys(codes).forEach(function forEachCode (code) {\r\n    var message = codes[code]\r\n    var status = Number(code)\r\n\r\n    // Populate properties\r\n    statuses[status] = message\r\n    statuses[message] = status\r\n    statuses[message.toLowerCase()] = status\r\n\r\n    // Add to array\r\n    arr.push(status)\r\n  })\r\n\r\n  return arr\r\n}\r\n\r\n/**\r\n * Get the status code.\r\n *\r\n * Given a number, this will throw if it is not a known status\r\n * code, otherwise the code will be returned. Given a string,\r\n * the string will be parsed for a number and return the code\r\n * if valid, otherwise will lookup the code assuming this is\r\n * the status message.\r\n *\r\n * @param {string|number} code\r\n * @returns {number}\r\n * @public\r\n */\r\n\r\nfunction status (code) {\r\n  if (typeof code === 'number') {\r\n    if (!status[code]) throw new Error('invalid status code: ' + code)\r\n    return code\r\n  }\r\n\r\n  if (typeof code !== 'string') {\r\n    throw new TypeError('code must be a number or string')\r\n  }\r\n\r\n  // '403'\r\n  var n = parseInt(code, 10)\r\n  if (!isNaN(n)) {\r\n    if (!status[n]) throw new Error('invalid status code: ' + n)\r\n    return n\r\n  }\r\n\r\n  n = status[code.toLowerCase()]\r\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\r\n  return n\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211976
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\unpipe\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\unpipe\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\unpipe\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\unpipe\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\unpipe\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\unpipe\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\unpipe\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * unpipe\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = unpipe;\n/**\r\n * Determine if there are Node.js pipe-like data listeners.\r\n * @private\r\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data');\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Unpipe a stream from all destinations.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\n\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required');\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe();\n    return;\n  } // Node.js 0.8 hack\n\n\n  if (!hasPipeDataListeners(stream)) {\n    return;\n  }\n\n  var listener;\n  var listeners = stream.listeners('close');\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i];\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue;\n    } // invoke the listener\n\n\n    listener.call(stream);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1bnBpcGUiLCJoYXNQaXBlRGF0YUxpc3RlbmVycyIsInN0cmVhbSIsImxpc3RlbmVycyIsImkiLCJsZW5ndGgiLCJuYW1lIiwiVHlwZUVycm9yIiwibGlzdGVuZXIiLCJjYWxsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxNQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNDLG9CQUFULENBQThCQyxNQUE5QixFQUFzQztBQUNwQyxNQUFJQyxTQUFTLEdBQUdELE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQixNQUFqQixDQUFoQjs7QUFFQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELFNBQVMsQ0FBQ0UsTUFBOUIsRUFBc0NELENBQUMsRUFBdkMsRUFBMkM7QUFDekMsUUFBSUQsU0FBUyxDQUFDQyxDQUFELENBQVQsQ0FBYUUsSUFBYixLQUFzQixRQUExQixFQUFvQztBQUNsQyxhQUFPLElBQVA7QUFDRDtBQUNGOztBQUVELFNBQU8sS0FBUDtBQUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxTQUFTTixNQUFULENBQWdCRSxNQUFoQixFQUF3QjtBQUN0QixNQUFJLENBQUNBLE1BQUwsRUFBYTtBQUNYLFVBQU0sSUFBSUssU0FBSixDQUFjLDZCQUFkLENBQU47QUFDRDs7QUFFRCxNQUFJLE9BQU9MLE1BQU0sQ0FBQ0YsTUFBZCxLQUF5QixVQUE3QixFQUF5QztBQUN2QztBQUNBRSxJQUFBQSxNQUFNLENBQUNGLE1BQVA7QUFDQTtBQUNELEdBVHFCLENBV3RCOzs7QUFDQSxNQUFJLENBQUNDLG9CQUFvQixDQUFDQyxNQUFELENBQXpCLEVBQW1DO0FBQ2pDO0FBQ0Q7O0FBRUQsTUFBSU0sUUFBSjtBQUNBLE1BQUlMLFNBQVMsR0FBR0QsTUFBTSxDQUFDQyxTQUFQLENBQWlCLE9BQWpCLENBQWhCOztBQUVBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsU0FBUyxDQUFDRSxNQUE5QixFQUFzQ0QsQ0FBQyxFQUF2QyxFQUEyQztBQUN6Q0ksSUFBQUEsUUFBUSxHQUFHTCxTQUFTLENBQUNDLENBQUQsQ0FBcEI7O0FBRUEsUUFBSUksUUFBUSxDQUFDRixJQUFULEtBQWtCLFNBQWxCLElBQStCRSxRQUFRLENBQUNGLElBQVQsS0FBa0IsU0FBckQsRUFBZ0U7QUFDOUQ7QUFDRCxLQUx3QyxDQU96Qzs7O0FBQ0FFLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjUCxNQUFkO0FBQ0Q7QUFDRiIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcdW5waXBlXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogdW5waXBlXHJcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB1bnBpcGVcclxuXHJcbi8qKlxyXG4gKiBEZXRlcm1pbmUgaWYgdGhlcmUgYXJlIE5vZGUuanMgcGlwZS1saWtlIGRhdGEgbGlzdGVuZXJzLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGhhc1BpcGVEYXRhTGlzdGVuZXJzKHN0cmVhbSkge1xyXG4gIHZhciBsaXN0ZW5lcnMgPSBzdHJlYW0ubGlzdGVuZXJzKCdkYXRhJylcclxuXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcclxuICAgIGlmIChsaXN0ZW5lcnNbaV0ubmFtZSA9PT0gJ29uZGF0YScpIHtcclxuICAgICAgcmV0dXJuIHRydWVcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBmYWxzZVxyXG59XHJcblxyXG4vKipcclxuICogVW5waXBlIGEgc3RyZWFtIGZyb20gYWxsIGRlc3RpbmF0aW9ucy5cclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IHN0cmVhbVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gdW5waXBlKHN0cmVhbSkge1xyXG4gIGlmICghc3RyZWFtKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzdHJlYW0gaXMgcmVxdWlyZWQnKVxyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBzdHJlYW0udW5waXBlID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAvLyBuZXctc3R5bGVcclxuICAgIHN0cmVhbS51bnBpcGUoKVxyXG4gICAgcmV0dXJuXHJcbiAgfVxyXG5cclxuICAvLyBOb2RlLmpzIDAuOCBoYWNrXHJcbiAgaWYgKCFoYXNQaXBlRGF0YUxpc3RlbmVycyhzdHJlYW0pKSB7XHJcbiAgICByZXR1cm5cclxuICB9XHJcblxyXG4gIHZhciBsaXN0ZW5lclxyXG4gIHZhciBsaXN0ZW5lcnMgPSBzdHJlYW0ubGlzdGVuZXJzKCdjbG9zZScpXHJcblxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXVxyXG5cclxuICAgIGlmIChsaXN0ZW5lci5uYW1lICE9PSAnY2xlYW51cCcgJiYgbGlzdGVuZXIubmFtZSAhPT0gJ29uY2xvc2UnKSB7XHJcbiAgICAgIGNvbnRpbnVlXHJcbiAgICB9XHJcblxyXG4gICAgLy8gaW52b2tlIHRoZSBsaXN0ZW5lclxyXG4gICAgbGlzdGVuZXIuY2FsbChzdHJlYW0pXHJcbiAgfVxyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "unpipe",
        "hasPipeDataListeners",
        "stream",
        "listeners",
        "i",
        "length",
        "name",
        "TypeError",
        "listener",
        "call"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA;AACA;AACA;AACA;;AAEA,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACpC,MAAIC,SAAS,GAAGD,MAAM,CAACC,SAAP,CAAiB,MAAjB,CAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,QAAID,SAAS,CAACC,CAAD,CAAT,CAAaE,IAAb,KAAsB,QAA1B,EAAoC;AAClC,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASN,MAAT,CAAgBE,MAAhB,EAAwB;AACtB,MAAI,CAACA,MAAL,EAAa;AACX,UAAM,IAAIK,SAAJ,CAAc,6BAAd,CAAN;AACD;;AAED,MAAI,OAAOL,MAAM,CAACF,MAAd,KAAyB,UAA7B,EAAyC;AACvC;AACAE,IAAAA,MAAM,CAACF,MAAP;AACA;AACD,GATqB,CAWtB;;;AACA,MAAI,CAACC,oBAAoB,CAACC,MAAD,CAAzB,EAAmC;AACjC;AACD;;AAED,MAAIM,QAAJ;AACA,MAAIL,SAAS,GAAGD,MAAM,CAACC,SAAP,CAAiB,OAAjB,CAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCI,IAAAA,QAAQ,GAAGL,SAAS,CAACC,CAAD,CAApB;;AAEA,QAAII,QAAQ,CAACF,IAAT,KAAkB,SAAlB,IAA+BE,QAAQ,CAACF,IAAT,KAAkB,SAArD,EAAgE;AAC9D;AACD,KALwC,CAOzC;;;AACAE,IAAAA,QAAQ,CAACC,IAAT,CAAcP,MAAd;AACD;AACF",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\unpipe\\",
      "sourcesContent": [
        "/*!\r\n * unpipe\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = unpipe\r\n\r\n/**\r\n * Determine if there are Node.js pipe-like data listeners.\r\n * @private\r\n */\r\n\r\nfunction hasPipeDataListeners(stream) {\r\n  var listeners = stream.listeners('data')\r\n\r\n  for (var i = 0; i < listeners.length; i++) {\r\n    if (listeners[i].name === 'ondata') {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Unpipe a stream from all destinations.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\r\n\r\nfunction unpipe(stream) {\r\n  if (!stream) {\r\n    throw new TypeError('argument stream is required')\r\n  }\r\n\r\n  if (typeof stream.unpipe === 'function') {\r\n    // new-style\r\n    stream.unpipe()\r\n    return\r\n  }\r\n\r\n  // Node.js 0.8 hack\r\n  if (!hasPipeDataListeners(stream)) {\r\n    return\r\n  }\r\n\r\n  var listener\r\n  var listeners = stream.listeners('close')\r\n\r\n  for (var i = 0; i < listeners.length; i++) {\r\n    listener = listeners[i]\r\n\r\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\r\n      continue\r\n    }\r\n\r\n    // invoke the listener\r\n    listener.call(stream)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211991
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar Route = require('./route');\n\nvar Layer = require('./layer');\n\nvar methods = require('methods');\n\nvar mixin = require('utils-merge');\n\nvar debug = require('debug')('express:router');\n\nvar deprecate = require('depd')('express');\n\nvar flatten = require('array-flatten');\n\nvar parseUrl = require('parseurl');\n\nvar setPrototypeOf = require('setprototypeof');\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n/**\r\n * Initialize a new `Router` with the given `options`.\r\n *\r\n * @param {Object} [options]\r\n * @return {Router} which is an callable function\r\n * @public\r\n */\n\nvar proto = module.exports = function (options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  } // mixin Router class functions\n\n\n  setPrototypeOf(router, proto);\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n  return router;\n};\n/**\r\n * Map the given param placeholder `name`(s) to the given callback.\r\n *\r\n * Parameter mapping is used to provide pre-conditions to routes\r\n * which use normalized placeholders. For example a _:user_id_ parameter\r\n * could automatically load a user's information from the database without\r\n * any additional code,\r\n *\r\n * The callback uses the same signature as middleware, the only difference\r\n * being that the value of the placeholder is passed, in this case the _id_\r\n * of the user. Once the `next()` function is invoked, just like middleware\r\n * it will continue on to execute the route, or subsequent parameter functions.\r\n *\r\n * Just like in middleware, you must either respond to the request or call next\r\n * to avoid stalling the request.\r\n *\r\n *  app.param('user_id', function(req, res, next, id){\r\n *    User.find(id, function(err, user){\r\n *      if (err) {\r\n *        return next(err);\r\n *      } else if (!user) {\r\n *        return next(new Error('failed to load user'));\r\n *      }\r\n *      req.user = user;\r\n *      next();\r\n *    });\r\n *  });\r\n *\r\n * @param {String} name\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\n\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n\n    this._params.push(name);\n\n    return;\n  } // apply param functions\n\n\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.substr(1)) + ', fn) instead');\n    name = name.substr(1);\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  } // ensure we end up with a\n  // middleware function\n\n\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n/**\r\n * Dispatch a req, res into the router.\r\n * @private\r\n */\n\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n  debug('dispatching %s %s', req.method, req.url);\n  var idx = 0;\n  var protohost = getProtohost(req.url) || '';\n  var removed = '';\n  var slashAdded = false;\n  var paramcalled = {}; // store options for OPTIONS request\n  // only used if OPTIONS request\n\n  var options = []; // middleware and routes\n\n  var stack = self.stack; // manage inter-router variables\n\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params'); // setup next layer\n\n  req.next = next; // for options requests, respond with a default if nothing else responds\n\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function (old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  } // setup basic req values\n\n\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n  next();\n\n  function next(err) {\n    var layerError = err === 'route' ? null : err; // remove added slash\n\n    if (slashAdded) {\n      req.url = req.url.substr(1);\n      slashAdded = false;\n    } // restore altered req.url\n\n\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.substr(protohost.length);\n      removed = '';\n    } // signal to exit router\n\n\n    if (layerError === 'router') {\n      setImmediate(done, null);\n      return;\n    } // no more matching layers\n\n\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    } // get pathname of request\n\n\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    } // find next matching layer\n\n\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n\n      var has_method = route._handles_method(method); // build up automatic options response\n\n\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      } // don't even bother matching route\n\n\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n        continue;\n      }\n    } // no match\n\n\n    if (match !== true) {\n      return done(layerError);\n    } // store route for dispatch on change\n\n\n    if (route) {\n      req.route = route;\n    } // Capture one-time layer values\n\n\n    req.params = self.mergeParams ? mergeParams(layer.params, parentParams) : layer.params;\n    var layerPath = layer.path; // this should be done for the layer\n\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        return next(layerError || err);\n      }\n\n      if (route) {\n        return layer.handle_request(req, res, next);\n      }\n\n      trim_prefix(layer, layerError, layerPath, path);\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length];\n      if (c && c !== '/' && c !== '.') return next(layerError); // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.substr(protohost.length + removed.length); // Ensure leading slash\n\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      } // Setup base URL (no trailing slash)\n\n\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/' ? removed.substring(0, removed.length - 1) : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n/**\r\n * Process any parameters for the layer.\r\n * @private\r\n */\n\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params; // captured parameters from the layer, keys and values\n\n  var keys = layer.keys; // fast track\n\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled; // process params in order\n  // param callbacks can be async\n\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    } // param previously called with same value or error occurred\n\n\n    if (paramCalled && (paramCalled.match === paramVal || paramCalled.error && paramCalled.error !== 'route')) {\n      // restore value\n      req.params[name] = paramCalled.value; // next param\n\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n    paramCallback();\n  } // single param callbacks\n\n\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++]; // store updated value\n\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n/**\r\n * Use the given middleware function, with optional path, defaulting to \"/\".\r\n *\r\n * Use (like `.all`) will run for any http METHOD, but it will not add\r\n * handlers for those methods so OPTIONS requests will not consider `.use`\r\n * functions even if they could respond.\r\n *\r\n * The other difference is that _route_ path is stripped and not visible\r\n * to the handler function. The main effect of this feature is that mounted\r\n * handlers can operate without any code changes regardless of the \"prefix\"\r\n * pathname.\r\n *\r\n * @public\r\n */\n\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/'; // default path to '/'\n  // disambiguate router.use([fn])\n\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    } // first arg is the path\n\n\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function');\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn));\n    } // add the middleware\n\n\n    debug('use %o %s', path, fn.name || '<anonymous>');\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n    layer.route = undefined;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n/**\r\n * Create a new Route for the given path.\r\n *\r\n * Each route contains a separate middleware stack and VERB handlers.\r\n *\r\n * See the Route api documentation for details on adding handlers\r\n * and middleware to routes.\r\n *\r\n * @param {String} path\r\n * @return {Route}\r\n * @public\r\n */\n\n\nproto.route = function route(path) {\n  var route = new Route(path);\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n  layer.route = route;\n  this.stack.push(layer);\n  return route;\n}; // create Router#VERB functions\n\n\nmethods.concat('all').forEach(function (method) {\n  proto[method] = function (path) {\n    var route = this.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n}); // append methods to a list of methods\n\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n} // get pathname of request\n\n\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n} // Get get protocol + host for a URL\n\n\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined;\n  }\n\n  var searchIndex = url.indexOf('?');\n  var pathLength = searchIndex !== -1 ? searchIndex : url.length;\n  var fqdnIndex = url.substr(0, pathLength).indexOf('://');\n  return fqdnIndex !== -1 ? url.substr(0, url.indexOf('/', 3 + fqdnIndex)) : undefined;\n} // get type for error message\n\n\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  } // inspect [[Class]] for objects\n\n\n  return toString.call(obj).replace(objectRegExp, '$1');\n}\n/**\r\n * Match path to a layer.\r\n *\r\n * @param {Layer} layer\r\n * @param {string} path\r\n * @private\r\n */\n\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n} // merge params with parent params\n\n\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  } // make copy of parent for base\n\n\n  var obj = mixin({}, parent); // simple non-numeric merging\n\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0; // determine numeric gaps\n\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  } // offset numeric indices in params before merge\n\n\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i]; // create holes for the merge when necessary\n\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n} // restore obj props after function\n\n\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n} // send an OPTIONS response\n\n\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n} // wrap a function\n\n\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n    args[0] = old;\n\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Route",
        "require",
        "Layer",
        "methods",
        "mixin",
        "debug",
        "deprecate",
        "flatten",
        "parseUrl",
        "setPrototypeOf",
        "objectRegExp",
        "slice",
        "Array",
        "prototype",
        "toString",
        "Object",
        "proto",
        "module",
        "exports",
        "options",
        "opts",
        "router",
        "req",
        "res",
        "next",
        "handle",
        "params",
        "_params",
        "caseSensitive",
        "mergeParams",
        "strict",
        "stack",
        "param",
        "name",
        "fn",
        "push",
        "len",
        "length",
        "ret",
        "JSON",
        "stringify",
        "substr",
        "i",
        "Error",
        "out",
        "self",
        "method",
        "url",
        "idx",
        "protohost",
        "getProtohost",
        "removed",
        "slashAdded",
        "paramcalled",
        "parentParams",
        "parentUrl",
        "baseUrl",
        "done",
        "restore",
        "wrap",
        "old",
        "err",
        "sendOptionsResponse",
        "originalUrl",
        "layerError",
        "setImmediate",
        "path",
        "getPathname",
        "layer",
        "match",
        "route",
        "matchLayer",
        "has_method",
        "_handles_method",
        "appendMethods",
        "_options",
        "layerPath",
        "process_params",
        "handle_request",
        "trim_prefix",
        "c",
        "substring",
        "handle_error",
        "called",
        "keys",
        "paramIndex",
        "key",
        "paramVal",
        "paramCallbacks",
        "paramCalled",
        "undefined",
        "error",
        "value",
        "paramCallback",
        "e",
        "use",
        "offset",
        "arg",
        "isArray",
        "callbacks",
        "call",
        "arguments",
        "TypeError",
        "gettype",
        "sensitive",
        "end",
        "dispatch",
        "bind",
        "concat",
        "forEach",
        "apply",
        "list",
        "addition",
        "indexOf",
        "pathname",
        "searchIndex",
        "pathLength",
        "fqdnIndex",
        "obj",
        "type",
        "replace",
        "parent",
        "o",
        "props",
        "vals",
        "body",
        "join",
        "set",
        "send",
        "proxy",
        "args"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Route = require('./route');\r\nvar Layer = require('./layer');\r\nvar methods = require('methods');\r\nvar mixin = require('utils-merge');\r\nvar debug = require('debug')('express:router');\r\nvar deprecate = require('depd')('express');\r\nvar flatten = require('array-flatten');\r\nvar parseUrl = require('parseurl');\r\nvar setPrototypeOf = require('setprototypeof')\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Initialize a new `Router` with the given `options`.\r\n *\r\n * @param {Object} [options]\r\n * @return {Router} which is an callable function\r\n * @public\r\n */\r\n\r\nvar proto = module.exports = function(options) {\r\n  var opts = options || {};\r\n\r\n  function router(req, res, next) {\r\n    router.handle(req, res, next);\r\n  }\r\n\r\n  // mixin Router class functions\r\n  setPrototypeOf(router, proto)\r\n\r\n  router.params = {};\r\n  router._params = [];\r\n  router.caseSensitive = opts.caseSensitive;\r\n  router.mergeParams = opts.mergeParams;\r\n  router.strict = opts.strict;\r\n  router.stack = [];\r\n\r\n  return router;\r\n};\r\n\r\n/**\r\n * Map the given param placeholder `name`(s) to the given callback.\r\n *\r\n * Parameter mapping is used to provide pre-conditions to routes\r\n * which use normalized placeholders. For example a _:user_id_ parameter\r\n * could automatically load a user's information from the database without\r\n * any additional code,\r\n *\r\n * The callback uses the same signature as middleware, the only difference\r\n * being that the value of the placeholder is passed, in this case the _id_\r\n * of the user. Once the `next()` function is invoked, just like middleware\r\n * it will continue on to execute the route, or subsequent parameter functions.\r\n *\r\n * Just like in middleware, you must either respond to the request or call next\r\n * to avoid stalling the request.\r\n *\r\n *  app.param('user_id', function(req, res, next, id){\r\n *    User.find(id, function(err, user){\r\n *      if (err) {\r\n *        return next(err);\r\n *      } else if (!user) {\r\n *        return next(new Error('failed to load user'));\r\n *      }\r\n *      req.user = user;\r\n *      next();\r\n *    });\r\n *  });\r\n *\r\n * @param {String} name\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\nproto.param = function param(name, fn) {\r\n  // param logic\r\n  if (typeof name === 'function') {\r\n    deprecate('router.param(fn): Refactor to use path params');\r\n    this._params.push(name);\r\n    return;\r\n  }\r\n\r\n  // apply param functions\r\n  var params = this._params;\r\n  var len = params.length;\r\n  var ret;\r\n\r\n  if (name[0] === ':') {\r\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.substr(1)) + ', fn) instead');\r\n    name = name.substr(1);\r\n  }\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (ret = params[i](name, fn)) {\r\n      fn = ret;\r\n    }\r\n  }\r\n\r\n  // ensure we end up with a\r\n  // middleware function\r\n  if ('function' !== typeof fn) {\r\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\r\n  }\r\n\r\n  (this.params[name] = this.params[name] || []).push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Dispatch a req, res into the router.\r\n * @private\r\n */\r\n\r\nproto.handle = function handle(req, res, out) {\r\n  var self = this;\r\n\r\n  debug('dispatching %s %s', req.method, req.url);\r\n\r\n  var idx = 0;\r\n  var protohost = getProtohost(req.url) || ''\r\n  var removed = '';\r\n  var slashAdded = false;\r\n  var paramcalled = {};\r\n\r\n  // store options for OPTIONS request\r\n  // only used if OPTIONS request\r\n  var options = [];\r\n\r\n  // middleware and routes\r\n  var stack = self.stack;\r\n\r\n  // manage inter-router variables\r\n  var parentParams = req.params;\r\n  var parentUrl = req.baseUrl || '';\r\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\r\n\r\n  // setup next layer\r\n  req.next = next;\r\n\r\n  // for options requests, respond with a default if nothing else responds\r\n  if (req.method === 'OPTIONS') {\r\n    done = wrap(done, function(old, err) {\r\n      if (err || options.length === 0) return old(err);\r\n      sendOptionsResponse(res, options, old);\r\n    });\r\n  }\r\n\r\n  // setup basic req values\r\n  req.baseUrl = parentUrl;\r\n  req.originalUrl = req.originalUrl || req.url;\r\n\r\n  next();\r\n\r\n  function next(err) {\r\n    var layerError = err === 'route'\r\n      ? null\r\n      : err;\r\n\r\n    // remove added slash\r\n    if (slashAdded) {\r\n      req.url = req.url.substr(1);\r\n      slashAdded = false;\r\n    }\r\n\r\n    // restore altered req.url\r\n    if (removed.length !== 0) {\r\n      req.baseUrl = parentUrl;\r\n      req.url = protohost + removed + req.url.substr(protohost.length);\r\n      removed = '';\r\n    }\r\n\r\n    // signal to exit router\r\n    if (layerError === 'router') {\r\n      setImmediate(done, null)\r\n      return\r\n    }\r\n\r\n    // no more matching layers\r\n    if (idx >= stack.length) {\r\n      setImmediate(done, layerError);\r\n      return;\r\n    }\r\n\r\n    // get pathname of request\r\n    var path = getPathname(req);\r\n\r\n    if (path == null) {\r\n      return done(layerError);\r\n    }\r\n\r\n    // find next matching layer\r\n    var layer;\r\n    var match;\r\n    var route;\r\n\r\n    while (match !== true && idx < stack.length) {\r\n      layer = stack[idx++];\r\n      match = matchLayer(layer, path);\r\n      route = layer.route;\r\n\r\n      if (typeof match !== 'boolean') {\r\n        // hold on to layerError\r\n        layerError = layerError || match;\r\n      }\r\n\r\n      if (match !== true) {\r\n        continue;\r\n      }\r\n\r\n      if (!route) {\r\n        // process non-route handlers normally\r\n        continue;\r\n      }\r\n\r\n      if (layerError) {\r\n        // routes do not match with a pending error\r\n        match = false;\r\n        continue;\r\n      }\r\n\r\n      var method = req.method;\r\n      var has_method = route._handles_method(method);\r\n\r\n      // build up automatic options response\r\n      if (!has_method && method === 'OPTIONS') {\r\n        appendMethods(options, route._options());\r\n      }\r\n\r\n      // don't even bother matching route\r\n      if (!has_method && method !== 'HEAD') {\r\n        match = false;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // no match\r\n    if (match !== true) {\r\n      return done(layerError);\r\n    }\r\n\r\n    // store route for dispatch on change\r\n    if (route) {\r\n      req.route = route;\r\n    }\r\n\r\n    // Capture one-time layer values\r\n    req.params = self.mergeParams\r\n      ? mergeParams(layer.params, parentParams)\r\n      : layer.params;\r\n    var layerPath = layer.path;\r\n\r\n    // this should be done for the layer\r\n    self.process_params(layer, paramcalled, req, res, function (err) {\r\n      if (err) {\r\n        return next(layerError || err);\r\n      }\r\n\r\n      if (route) {\r\n        return layer.handle_request(req, res, next);\r\n      }\r\n\r\n      trim_prefix(layer, layerError, layerPath, path);\r\n    });\r\n  }\r\n\r\n  function trim_prefix(layer, layerError, layerPath, path) {\r\n    if (layerPath.length !== 0) {\r\n      // Validate path breaks on a path separator\r\n      var c = path[layerPath.length]\r\n      if (c && c !== '/' && c !== '.') return next(layerError)\r\n\r\n      // Trim off the part of the url that matches the route\r\n      // middleware (.use stuff) needs to have the path stripped\r\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\r\n      removed = layerPath;\r\n      req.url = protohost + req.url.substr(protohost.length + removed.length);\r\n\r\n      // Ensure leading slash\r\n      if (!protohost && req.url[0] !== '/') {\r\n        req.url = '/' + req.url;\r\n        slashAdded = true;\r\n      }\r\n\r\n      // Setup base URL (no trailing slash)\r\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\r\n        ? removed.substring(0, removed.length - 1)\r\n        : removed);\r\n    }\r\n\r\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\r\n\r\n    if (layerError) {\r\n      layer.handle_error(layerError, req, res, next);\r\n    } else {\r\n      layer.handle_request(req, res, next);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Process any parameters for the layer.\r\n * @private\r\n */\r\n\r\nproto.process_params = function process_params(layer, called, req, res, done) {\r\n  var params = this.params;\r\n\r\n  // captured parameters from the layer, keys and values\r\n  var keys = layer.keys;\r\n\r\n  // fast track\r\n  if (!keys || keys.length === 0) {\r\n    return done();\r\n  }\r\n\r\n  var i = 0;\r\n  var name;\r\n  var paramIndex = 0;\r\n  var key;\r\n  var paramVal;\r\n  var paramCallbacks;\r\n  var paramCalled;\r\n\r\n  // process params in order\r\n  // param callbacks can be async\r\n  function param(err) {\r\n    if (err) {\r\n      return done(err);\r\n    }\r\n\r\n    if (i >= keys.length ) {\r\n      return done();\r\n    }\r\n\r\n    paramIndex = 0;\r\n    key = keys[i++];\r\n    name = key.name;\r\n    paramVal = req.params[name];\r\n    paramCallbacks = params[name];\r\n    paramCalled = called[name];\r\n\r\n    if (paramVal === undefined || !paramCallbacks) {\r\n      return param();\r\n    }\r\n\r\n    // param previously called with same value or error occurred\r\n    if (paramCalled && (paramCalled.match === paramVal\r\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\r\n      // restore value\r\n      req.params[name] = paramCalled.value;\r\n\r\n      // next param\r\n      return param(paramCalled.error);\r\n    }\r\n\r\n    called[name] = paramCalled = {\r\n      error: null,\r\n      match: paramVal,\r\n      value: paramVal\r\n    };\r\n\r\n    paramCallback();\r\n  }\r\n\r\n  // single param callbacks\r\n  function paramCallback(err) {\r\n    var fn = paramCallbacks[paramIndex++];\r\n\r\n    // store updated value\r\n    paramCalled.value = req.params[key.name];\r\n\r\n    if (err) {\r\n      // store error\r\n      paramCalled.error = err;\r\n      param(err);\r\n      return;\r\n    }\r\n\r\n    if (!fn) return param();\r\n\r\n    try {\r\n      fn(req, res, paramCallback, paramVal, key.name);\r\n    } catch (e) {\r\n      paramCallback(e);\r\n    }\r\n  }\r\n\r\n  param();\r\n};\r\n\r\n/**\r\n * Use the given middleware function, with optional path, defaulting to \"/\".\r\n *\r\n * Use (like `.all`) will run for any http METHOD, but it will not add\r\n * handlers for those methods so OPTIONS requests will not consider `.use`\r\n * functions even if they could respond.\r\n *\r\n * The other difference is that _route_ path is stripped and not visible\r\n * to the handler function. The main effect of this feature is that mounted\r\n * handlers can operate without any code changes regardless of the \"prefix\"\r\n * pathname.\r\n *\r\n * @public\r\n */\r\n\r\nproto.use = function use(fn) {\r\n  var offset = 0;\r\n  var path = '/';\r\n\r\n  // default path to '/'\r\n  // disambiguate router.use([fn])\r\n  if (typeof fn !== 'function') {\r\n    var arg = fn;\r\n\r\n    while (Array.isArray(arg) && arg.length !== 0) {\r\n      arg = arg[0];\r\n    }\r\n\r\n    // first arg is the path\r\n    if (typeof arg !== 'function') {\r\n      offset = 1;\r\n      path = fn;\r\n    }\r\n  }\r\n\r\n  var callbacks = flatten(slice.call(arguments, offset));\r\n\r\n  if (callbacks.length === 0) {\r\n    throw new TypeError('Router.use() requires a middleware function')\r\n  }\r\n\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    var fn = callbacks[i];\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\r\n    }\r\n\r\n    // add the middleware\r\n    debug('use %o %s', path, fn.name || '<anonymous>')\r\n\r\n    var layer = new Layer(path, {\r\n      sensitive: this.caseSensitive,\r\n      strict: false,\r\n      end: false\r\n    }, fn);\r\n\r\n    layer.route = undefined;\r\n\r\n    this.stack.push(layer);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Create a new Route for the given path.\r\n *\r\n * Each route contains a separate middleware stack and VERB handlers.\r\n *\r\n * See the Route api documentation for details on adding handlers\r\n * and middleware to routes.\r\n *\r\n * @param {String} path\r\n * @return {Route}\r\n * @public\r\n */\r\n\r\nproto.route = function route(path) {\r\n  var route = new Route(path);\r\n\r\n  var layer = new Layer(path, {\r\n    sensitive: this.caseSensitive,\r\n    strict: this.strict,\r\n    end: true\r\n  }, route.dispatch.bind(route));\r\n\r\n  layer.route = route;\r\n\r\n  this.stack.push(layer);\r\n  return route;\r\n};\r\n\r\n// create Router#VERB functions\r\nmethods.concat('all').forEach(function(method){\r\n  proto[method] = function(path){\r\n    var route = this.route(path)\r\n    route[method].apply(route, slice.call(arguments, 1));\r\n    return this;\r\n  };\r\n});\r\n\r\n// append methods to a list of methods\r\nfunction appendMethods(list, addition) {\r\n  for (var i = 0; i < addition.length; i++) {\r\n    var method = addition[i];\r\n    if (list.indexOf(method) === -1) {\r\n      list.push(method);\r\n    }\r\n  }\r\n}\r\n\r\n// get pathname of request\r\nfunction getPathname(req) {\r\n  try {\r\n    return parseUrl(req).pathname;\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// Get get protocol + host for a URL\r\nfunction getProtohost(url) {\r\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\r\n    return undefined\r\n  }\r\n\r\n  var searchIndex = url.indexOf('?')\r\n  var pathLength = searchIndex !== -1\r\n    ? searchIndex\r\n    : url.length\r\n  var fqdnIndex = url.substr(0, pathLength).indexOf('://')\r\n\r\n  return fqdnIndex !== -1\r\n    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\r\n    : undefined\r\n}\r\n\r\n// get type for error message\r\nfunction gettype(obj) {\r\n  var type = typeof obj;\r\n\r\n  if (type !== 'object') {\r\n    return type;\r\n  }\r\n\r\n  // inspect [[Class]] for objects\r\n  return toString.call(obj)\r\n    .replace(objectRegExp, '$1');\r\n}\r\n\r\n/**\r\n * Match path to a layer.\r\n *\r\n * @param {Layer} layer\r\n * @param {string} path\r\n * @private\r\n */\r\n\r\nfunction matchLayer(layer, path) {\r\n  try {\r\n    return layer.match(path);\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n\r\n// merge params with parent params\r\nfunction mergeParams(params, parent) {\r\n  if (typeof parent !== 'object' || !parent) {\r\n    return params;\r\n  }\r\n\r\n  // make copy of parent for base\r\n  var obj = mixin({}, parent);\r\n\r\n  // simple non-numeric merging\r\n  if (!(0 in params) || !(0 in parent)) {\r\n    return mixin(obj, params);\r\n  }\r\n\r\n  var i = 0;\r\n  var o = 0;\r\n\r\n  // determine numeric gaps\r\n  while (i in params) {\r\n    i++;\r\n  }\r\n\r\n  while (o in parent) {\r\n    o++;\r\n  }\r\n\r\n  // offset numeric indices in params before merge\r\n  for (i--; i >= 0; i--) {\r\n    params[i + o] = params[i];\r\n\r\n    // create holes for the merge when necessary\r\n    if (i < o) {\r\n      delete params[i];\r\n    }\r\n  }\r\n\r\n  return mixin(obj, params);\r\n}\r\n\r\n// restore obj props after function\r\nfunction restore(fn, obj) {\r\n  var props = new Array(arguments.length - 2);\r\n  var vals = new Array(arguments.length - 2);\r\n\r\n  for (var i = 0; i < props.length; i++) {\r\n    props[i] = arguments[i + 2];\r\n    vals[i] = obj[props[i]];\r\n  }\r\n\r\n  return function () {\r\n    // restore vals\r\n    for (var i = 0; i < props.length; i++) {\r\n      obj[props[i]] = vals[i];\r\n    }\r\n\r\n    return fn.apply(this, arguments);\r\n  };\r\n}\r\n\r\n// send an OPTIONS response\r\nfunction sendOptionsResponse(res, options, next) {\r\n  try {\r\n    var body = options.join(',');\r\n    res.set('Allow', body);\r\n    res.send(body);\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n}\r\n\r\n// wrap a function\r\nfunction wrap(old, fn) {\r\n  return function proxy() {\r\n    var args = new Array(arguments.length + 1);\r\n\r\n    args[0] = old;\r\n    for (var i = 0, len = arguments.length; i < len; i++) {\r\n      args[i + 1] = arguments[i];\r\n    }\r\n\r\n    fn.apply(this, args);\r\n  };\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
        "sourceFileName": "route.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar debug = require('debug')('express:router:route');\n\nvar flatten = require('array-flatten');\n\nvar Layer = require('./layer');\n\nvar methods = require('methods');\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = Route;\n/**\r\n * Initialize `Route` with the given `path`,\r\n *\r\n * @param {String} path\r\n * @public\r\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n  debug('new %o', path); // route handlers for various http methods\n\n  this.methods = {};\n}\n/**\r\n * Determine if the route handles a given method.\r\n * @private\r\n */\n\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n/**\r\n * @return {Array} supported HTTP methods\r\n * @private\r\n */\n\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods); // append automatic head\n\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n/**\r\n * dispatch req, res into this route\r\n * @private\r\n */\n\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    } // signal to exit router\n\n\n    if (err && err === 'router') {\n      return done(err);\n    }\n\n    var layer = stack[idx++];\n\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n/**\r\n * Add a handler for all HTTP verbs to this route.\r\n *\r\n * Behaves just like middleware and can respond or call `next`\r\n * to continue processing.\r\n *\r\n * You can use multiple `.all` call to add multiple handlers.\r\n *\r\n *   function check_something(req, res, next){\r\n *     next();\r\n *   };\r\n *\r\n *   function validate_user(req, res, next){\r\n *     next();\r\n *   };\r\n *\r\n *   route\r\n *   .all(validate_user)\r\n *   .all(check_something)\r\n *   .get(function(req, res, next){\r\n *     res.send('hello world');\r\n *   });\r\n *\r\n * @param {function} handler\r\n * @return {Route} for chaining\r\n * @api public\r\n */\n\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type;\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function (method) {\n  Route.prototype[method] = function () {\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type;\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path);\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "route.js"
      ],
      "names": [
        "debug",
        "require",
        "flatten",
        "Layer",
        "methods",
        "slice",
        "Array",
        "prototype",
        "toString",
        "Object",
        "module",
        "exports",
        "Route",
        "path",
        "stack",
        "_handles_method",
        "method",
        "_all",
        "name",
        "toLowerCase",
        "Boolean",
        "_options",
        "keys",
        "get",
        "head",
        "push",
        "i",
        "length",
        "toUpperCase",
        "dispatch",
        "req",
        "res",
        "done",
        "idx",
        "route",
        "next",
        "err",
        "layer",
        "handle_error",
        "handle_request",
        "all",
        "handles",
        "call",
        "arguments",
        "handle",
        "type",
        "msg",
        "TypeError",
        "undefined",
        "forEach",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('express:router:route');\r\nvar flatten = require('array-flatten');\r\nvar Layer = require('./layer');\r\nvar methods = require('methods');\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = Route;\r\n\r\n/**\r\n * Initialize `Route` with the given `path`,\r\n *\r\n * @param {String} path\r\n * @public\r\n */\r\n\r\nfunction Route(path) {\r\n  this.path = path;\r\n  this.stack = [];\r\n\r\n  debug('new %o', path)\r\n\r\n  // route handlers for various http methods\r\n  this.methods = {};\r\n}\r\n\r\n/**\r\n * Determine if the route handles a given method.\r\n * @private\r\n */\r\n\r\nRoute.prototype._handles_method = function _handles_method(method) {\r\n  if (this.methods._all) {\r\n    return true;\r\n  }\r\n\r\n  var name = method.toLowerCase();\r\n\r\n  if (name === 'head' && !this.methods['head']) {\r\n    name = 'get';\r\n  }\r\n\r\n  return Boolean(this.methods[name]);\r\n};\r\n\r\n/**\r\n * @return {Array} supported HTTP methods\r\n * @private\r\n */\r\n\r\nRoute.prototype._options = function _options() {\r\n  var methods = Object.keys(this.methods);\r\n\r\n  // append automatic head\r\n  if (this.methods.get && !this.methods.head) {\r\n    methods.push('head');\r\n  }\r\n\r\n  for (var i = 0; i < methods.length; i++) {\r\n    // make upper case\r\n    methods[i] = methods[i].toUpperCase();\r\n  }\r\n\r\n  return methods;\r\n};\r\n\r\n/**\r\n * dispatch req, res into this route\r\n * @private\r\n */\r\n\r\nRoute.prototype.dispatch = function dispatch(req, res, done) {\r\n  var idx = 0;\r\n  var stack = this.stack;\r\n  if (stack.length === 0) {\r\n    return done();\r\n  }\r\n\r\n  var method = req.method.toLowerCase();\r\n  if (method === 'head' && !this.methods['head']) {\r\n    method = 'get';\r\n  }\r\n\r\n  req.route = this;\r\n\r\n  next();\r\n\r\n  function next(err) {\r\n    // signal to exit route\r\n    if (err && err === 'route') {\r\n      return done();\r\n    }\r\n\r\n    // signal to exit router\r\n    if (err && err === 'router') {\r\n      return done(err)\r\n    }\r\n\r\n    var layer = stack[idx++];\r\n    if (!layer) {\r\n      return done(err);\r\n    }\r\n\r\n    if (layer.method && layer.method !== method) {\r\n      return next(err);\r\n    }\r\n\r\n    if (err) {\r\n      layer.handle_error(err, req, res, next);\r\n    } else {\r\n      layer.handle_request(req, res, next);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add a handler for all HTTP verbs to this route.\r\n *\r\n * Behaves just like middleware and can respond or call `next`\r\n * to continue processing.\r\n *\r\n * You can use multiple `.all` call to add multiple handlers.\r\n *\r\n *   function check_something(req, res, next){\r\n *     next();\r\n *   };\r\n *\r\n *   function validate_user(req, res, next){\r\n *     next();\r\n *   };\r\n *\r\n *   route\r\n *   .all(validate_user)\r\n *   .all(check_something)\r\n *   .get(function(req, res, next){\r\n *     res.send('hello world');\r\n *   });\r\n *\r\n * @param {function} handler\r\n * @return {Route} for chaining\r\n * @api public\r\n */\r\n\r\nRoute.prototype.all = function all() {\r\n  var handles = flatten(slice.call(arguments));\r\n\r\n  for (var i = 0; i < handles.length; i++) {\r\n    var handle = handles[i];\r\n\r\n    if (typeof handle !== 'function') {\r\n      var type = toString.call(handle);\r\n      var msg = 'Route.all() requires a callback function but got a ' + type\r\n      throw new TypeError(msg);\r\n    }\r\n\r\n    var layer = Layer('/', {}, handle);\r\n    layer.method = undefined;\r\n\r\n    this.methods._all = true;\r\n    this.stack.push(layer);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nmethods.forEach(function(method){\r\n  Route.prototype[method] = function(){\r\n    var handles = flatten(slice.call(arguments));\r\n\r\n    for (var i = 0; i < handles.length; i++) {\r\n      var handle = handles[i];\r\n\r\n      if (typeof handle !== 'function') {\r\n        var type = toString.call(handle);\r\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\r\n        throw new Error(msg);\r\n      }\r\n\r\n      debug('%s %o', method, this.path)\r\n\r\n      var layer = Layer('/', {}, handle);\r\n      layer.method = method;\r\n\r\n      this.methods[method] = true;\r\n      this.stack.push(layer);\r\n    }\r\n\r\n    return this;\r\n  };\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\array-flatten\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\array-flatten\\\\array-flatten.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\array-flatten\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\array-flatten\\array-flatten.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\array-flatten\\array-flatten.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\array-flatten\\array-flatten.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\array-flatten\\",
        "sourceFileName": "array-flatten.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\r\n * Expose `arrayFlatten`.\r\n */\n\nmodule.exports = arrayFlatten;\n/**\r\n * Recursive flatten function with depth.\r\n *\r\n * @param  {Array}  array\r\n * @param  {Array}  result\r\n * @param  {Number} depth\r\n * @return {Array}\r\n */\n\nfunction flattenWithDepth(array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1);\n    } else {\n      result.push(value);\n    }\n  }\n\n  return result;\n}\n/**\r\n * Recursive flatten function. Omitting depth is slightly faster.\r\n *\r\n * @param  {Array} array\r\n * @param  {Array} result\r\n * @return {Array}\r\n */\n\n\nfunction flattenForever(array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n\n  return result;\n}\n/**\r\n * Flatten an array, with the ability to define a depth.\r\n *\r\n * @param  {Array}  array\r\n * @param  {Number} depth\r\n * @return {Array}\r\n */\n\n\nfunction arrayFlatten(array, depth) {\n  if (depth == null) {\n    return flattenForever(array, []);\n  }\n\n  return flattenWithDepth(array, [], depth);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFycmF5LWZsYXR0ZW4uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFycmF5RmxhdHRlbiIsImZsYXR0ZW5XaXRoRGVwdGgiLCJhcnJheSIsInJlc3VsdCIsImRlcHRoIiwiaSIsImxlbmd0aCIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5IiwicHVzaCIsImZsYXR0ZW5Gb3JldmVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxZQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsU0FBU0MsZ0JBQVQsQ0FBMkJDLEtBQTNCLEVBQWtDQyxNQUFsQyxFQUEwQ0MsS0FBMUMsRUFBaUQ7QUFDL0MsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSCxLQUFLLENBQUNJLE1BQTFCLEVBQWtDRCxDQUFDLEVBQW5DLEVBQXVDO0FBQ3JDLFFBQUlFLEtBQUssR0FBR0wsS0FBSyxDQUFDRyxDQUFELENBQWpCOztBQUVBLFFBQUlELEtBQUssR0FBRyxDQUFSLElBQWFJLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixLQUFkLENBQWpCLEVBQXVDO0FBQ3JDTixNQUFBQSxnQkFBZ0IsQ0FBQ00sS0FBRCxFQUFRSixNQUFSLEVBQWdCQyxLQUFLLEdBQUcsQ0FBeEIsQ0FBaEI7QUFDRCxLQUZELE1BRU87QUFDTEQsTUFBQUEsTUFBTSxDQUFDTyxJQUFQLENBQVlILEtBQVo7QUFDRDtBQUNGOztBQUVELFNBQU9KLE1BQVA7QUFDRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxTQUFTUSxjQUFULENBQXlCVCxLQUF6QixFQUFnQ0MsTUFBaEMsRUFBd0M7QUFDdEMsT0FBSyxJQUFJRSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSCxLQUFLLENBQUNJLE1BQTFCLEVBQWtDRCxDQUFDLEVBQW5DLEVBQXVDO0FBQ3JDLFFBQUlFLEtBQUssR0FBR0wsS0FBSyxDQUFDRyxDQUFELENBQWpCOztBQUVBLFFBQUlHLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixLQUFkLENBQUosRUFBMEI7QUFDeEJJLE1BQUFBLGNBQWMsQ0FBQ0osS0FBRCxFQUFRSixNQUFSLENBQWQ7QUFDRCxLQUZELE1BRU87QUFDTEEsTUFBQUEsTUFBTSxDQUFDTyxJQUFQLENBQVlILEtBQVo7QUFDRDtBQUNGOztBQUVELFNBQU9KLE1BQVA7QUFDRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxTQUFTSCxZQUFULENBQXVCRSxLQUF2QixFQUE4QkUsS0FBOUIsRUFBcUM7QUFDbkMsTUFBSUEsS0FBSyxJQUFJLElBQWIsRUFBbUI7QUFDakIsV0FBT08sY0FBYyxDQUFDVCxLQUFELEVBQVEsRUFBUixDQUFyQjtBQUNEOztBQUVELFNBQU9ELGdCQUFnQixDQUFDQyxLQUFELEVBQVEsRUFBUixFQUFZRSxLQUFaLENBQXZCO0FBQ0QiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFxub2RlX21vZHVsZXNcXGFycmF5LWZsYXR0ZW5cXCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIEV4cG9zZSBgYXJyYXlGbGF0dGVuYC5cclxuICovXHJcbm1vZHVsZS5leHBvcnRzID0gYXJyYXlGbGF0dGVuXHJcblxyXG4vKipcclxuICogUmVjdXJzaXZlIGZsYXR0ZW4gZnVuY3Rpb24gd2l0aCBkZXB0aC5cclxuICpcclxuICogQHBhcmFtICB7QXJyYXl9ICBhcnJheVxyXG4gKiBAcGFyYW0gIHtBcnJheX0gIHJlc3VsdFxyXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGRlcHRoXHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxuZnVuY3Rpb24gZmxhdHRlbldpdGhEZXB0aCAoYXJyYXksIHJlc3VsdCwgZGVwdGgpIHtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpXVxyXG5cclxuICAgIGlmIChkZXB0aCA+IDAgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcclxuICAgICAgZmxhdHRlbldpdGhEZXB0aCh2YWx1ZSwgcmVzdWx0LCBkZXB0aCAtIDEpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXN1bHQucHVzaCh2YWx1ZSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiByZXN1bHRcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlY3Vyc2l2ZSBmbGF0dGVuIGZ1bmN0aW9uLiBPbWl0dGluZyBkZXB0aCBpcyBzbGlnaHRseSBmYXN0ZXIuXHJcbiAqXHJcbiAqIEBwYXJhbSAge0FycmF5fSBhcnJheVxyXG4gKiBAcGFyYW0gIHtBcnJheX0gcmVzdWx0XHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxuZnVuY3Rpb24gZmxhdHRlbkZvcmV2ZXIgKGFycmF5LCByZXN1bHQpIHtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpXVxyXG5cclxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xyXG4gICAgICBmbGF0dGVuRm9yZXZlcih2YWx1ZSwgcmVzdWx0KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzdWx0LnB1c2godmFsdWUpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBGbGF0dGVuIGFuIGFycmF5LCB3aXRoIHRoZSBhYmlsaXR5IHRvIGRlZmluZSBhIGRlcHRoLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtBcnJheX0gIGFycmF5XHJcbiAqIEBwYXJhbSAge051bWJlcn0gZGVwdGhcclxuICogQHJldHVybiB7QXJyYXl9XHJcbiAqL1xyXG5mdW5jdGlvbiBhcnJheUZsYXR0ZW4gKGFycmF5LCBkZXB0aCkge1xyXG4gIGlmIChkZXB0aCA9PSBudWxsKSB7XHJcbiAgICByZXR1cm4gZmxhdHRlbkZvcmV2ZXIoYXJyYXksIFtdKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZsYXR0ZW5XaXRoRGVwdGgoYXJyYXksIFtdLCBkZXB0aClcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "array-flatten.js"
      ],
      "names": [
        "module",
        "exports",
        "arrayFlatten",
        "flattenWithDepth",
        "array",
        "result",
        "depth",
        "i",
        "length",
        "value",
        "Array",
        "isArray",
        "push",
        "flattenForever"
      ],
      "mappings": "AAAA;AAEA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA2BC,KAA3B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiD;AAC/C,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,KAAK,GAAGL,KAAK,CAACG,CAAD,CAAjB;;AAEA,QAAID,KAAK,GAAG,CAAR,IAAaI,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAjB,EAAuC;AACrCN,MAAAA,gBAAgB,CAACM,KAAD,EAAQJ,MAAR,EAAgBC,KAAK,GAAG,CAAxB,CAAhB;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACO,IAAP,CAAYH,KAAZ;AACD;AACF;;AAED,SAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,cAAT,CAAyBT,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,KAAK,GAAGL,KAAK,CAACG,CAAD,CAAjB;;AAEA,QAAIG,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxBI,MAAAA,cAAc,CAACJ,KAAD,EAAQJ,MAAR,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,CAACO,IAAP,CAAYH,KAAZ;AACD;AACF;;AAED,SAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,YAAT,CAAuBE,KAAvB,EAA8BE,KAA9B,EAAqC;AACnC,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAOO,cAAc,CAACT,KAAD,EAAQ,EAAR,CAArB;AACD;;AAED,SAAOD,gBAAgB,CAACC,KAAD,EAAQ,EAAR,EAAYE,KAAZ,CAAvB;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\array-flatten\\",
      "sourcesContent": [
        "'use strict'\r\n\r\n/**\r\n * Expose `arrayFlatten`.\r\n */\r\nmodule.exports = arrayFlatten\r\n\r\n/**\r\n * Recursive flatten function with depth.\r\n *\r\n * @param  {Array}  array\r\n * @param  {Array}  result\r\n * @param  {Number} depth\r\n * @return {Array}\r\n */\r\nfunction flattenWithDepth (array, result, depth) {\r\n  for (var i = 0; i < array.length; i++) {\r\n    var value = array[i]\r\n\r\n    if (depth > 0 && Array.isArray(value)) {\r\n      flattenWithDepth(value, result, depth - 1)\r\n    } else {\r\n      result.push(value)\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Recursive flatten function. Omitting depth is slightly faster.\r\n *\r\n * @param  {Array} array\r\n * @param  {Array} result\r\n * @return {Array}\r\n */\r\nfunction flattenForever (array, result) {\r\n  for (var i = 0; i < array.length; i++) {\r\n    var value = array[i]\r\n\r\n    if (Array.isArray(value)) {\r\n      flattenForever(value, result)\r\n    } else {\r\n      result.push(value)\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Flatten an array, with the ability to define a depth.\r\n *\r\n * @param  {Array}  array\r\n * @param  {Number} depth\r\n * @return {Array}\r\n */\r\nfunction arrayFlatten (array, depth) {\r\n  if (depth == null) {\r\n    return flattenForever(array, [])\r\n  }\r\n\r\n  return flattenWithDepth(array, [], depth)\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210603
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\layer.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\layer.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\layer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\layer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
        "sourceFileName": "layer.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar pathRegexp = require('path-to-regexp');\n\nvar debug = require('debug')('express:router:layer');\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path);\n  var opts = options || {};\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts); // set fast path flags\n\n  this.regexp.fast_star = path === '*';\n  this.regexp.fast_slash = path === '/' && opts.end === false;\n}\n/**\r\n * Handle the error for the layer.\r\n *\r\n * @param {Error} error\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {function} next\r\n * @api private\r\n */\n\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n/**\r\n * Handle the request for the layer.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {function} next\r\n * @api private\r\n */\n\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n/**\r\n * Check if this route matches `path`, if so\r\n * populate `.params`.\r\n *\r\n * @param {String} path\r\n * @return {Boolean}\r\n * @api private\r\n */\n\n\nLayer.prototype.match = function match(path) {\n  var match;\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {};\n      this.path = '';\n      return true;\n    } // fast path for * (everything matched in a param)\n\n\n    if (this.regexp.fast_star) {\n      this.params = {\n        '0': decode_param(path)\n      };\n      this.path = path;\n      return true;\n    } // match the path\n\n\n    match = this.regexp.exec(path);\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  } // store values\n\n\n  this.params = {};\n  this.path = match[0];\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i]);\n\n    if (val !== undefined || !hasOwnProperty.call(params, prop)) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n/**\r\n * Decode param value.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "layer.js"
      ],
      "names": [
        "pathRegexp",
        "require",
        "debug",
        "hasOwnProperty",
        "Object",
        "prototype",
        "module",
        "exports",
        "Layer",
        "path",
        "options",
        "fn",
        "opts",
        "handle",
        "name",
        "params",
        "undefined",
        "regexp",
        "keys",
        "fast_star",
        "fast_slash",
        "end",
        "handle_error",
        "error",
        "req",
        "res",
        "next",
        "length",
        "err",
        "handle_request",
        "match",
        "decode_param",
        "exec",
        "i",
        "key",
        "prop",
        "val",
        "call",
        "decodeURIComponent",
        "URIError",
        "message",
        "status",
        "statusCode"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\router\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar pathRegexp = require('path-to-regexp');\r\nvar debug = require('debug')('express:router:layer');\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = Layer;\r\n\r\nfunction Layer(path, options, fn) {\r\n  if (!(this instanceof Layer)) {\r\n    return new Layer(path, options, fn);\r\n  }\r\n\r\n  debug('new %o', path)\r\n  var opts = options || {};\r\n\r\n  this.handle = fn;\r\n  this.name = fn.name || '<anonymous>';\r\n  this.params = undefined;\r\n  this.path = undefined;\r\n  this.regexp = pathRegexp(path, this.keys = [], opts);\r\n\r\n  // set fast path flags\r\n  this.regexp.fast_star = path === '*'\r\n  this.regexp.fast_slash = path === '/' && opts.end === false\r\n}\r\n\r\n/**\r\n * Handle the error for the layer.\r\n *\r\n * @param {Error} error\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {function} next\r\n * @api private\r\n */\r\n\r\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\r\n  var fn = this.handle;\r\n\r\n  if (fn.length !== 4) {\r\n    // not a standard error handler\r\n    return next(error);\r\n  }\r\n\r\n  try {\r\n    fn(error, req, res, next);\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Handle the request for the layer.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {function} next\r\n * @api private\r\n */\r\n\r\nLayer.prototype.handle_request = function handle(req, res, next) {\r\n  var fn = this.handle;\r\n\r\n  if (fn.length > 3) {\r\n    // not a standard request handler\r\n    return next();\r\n  }\r\n\r\n  try {\r\n    fn(req, res, next);\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if this route matches `path`, if so\r\n * populate `.params`.\r\n *\r\n * @param {String} path\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nLayer.prototype.match = function match(path) {\r\n  var match\r\n\r\n  if (path != null) {\r\n    // fast path non-ending match for / (any path matches)\r\n    if (this.regexp.fast_slash) {\r\n      this.params = {}\r\n      this.path = ''\r\n      return true\r\n    }\r\n\r\n    // fast path for * (everything matched in a param)\r\n    if (this.regexp.fast_star) {\r\n      this.params = {'0': decode_param(path)}\r\n      this.path = path\r\n      return true\r\n    }\r\n\r\n    // match the path\r\n    match = this.regexp.exec(path)\r\n  }\r\n\r\n  if (!match) {\r\n    this.params = undefined;\r\n    this.path = undefined;\r\n    return false;\r\n  }\r\n\r\n  // store values\r\n  this.params = {};\r\n  this.path = match[0]\r\n\r\n  var keys = this.keys;\r\n  var params = this.params;\r\n\r\n  for (var i = 1; i < match.length; i++) {\r\n    var key = keys[i - 1];\r\n    var prop = key.name;\r\n    var val = decode_param(match[i])\r\n\r\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\r\n      params[prop] = val;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Decode param value.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction decode_param(val) {\r\n  if (typeof val !== 'string' || val.length === 0) {\r\n    return val;\r\n  }\r\n\r\n  try {\r\n    return decodeURIComponent(val);\r\n  } catch (err) {\r\n    if (err instanceof URIError) {\r\n      err.message = 'Failed to decode param \\'' + val + '\\'';\r\n      err.status = err.statusCode = 400;\r\n    }\r\n\r\n    throw err;\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\path-to-regexp\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\path-to-regexp\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\path-to-regexp\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\path-to-regexp\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\path-to-regexp\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\path-to-regexp\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\path-to-regexp\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Expose `pathtoRegexp`.\r\n */\nmodule.exports = pathtoRegexp;\n/**\r\n * Match matching groups in a regular expression.\r\n */\n\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n/**\r\n * Normalize the given path string,\r\n * returning a regular expression.\r\n *\r\n * An empty array should be passed,\r\n * which will contain the placeholder\r\n * key names. For example \"/user/:id\" will\r\n * then contain [\"id\"].\r\n *\r\n * @param  {String|RegExp|Array} path\r\n * @param  {Array} keys\r\n * @param  {Object} options\r\n * @return {RegExp}\r\n * @api private\r\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?')).replace(/\\/\\(/g, '/(?:').replace(/([\\/\\.])/g, '\\\\$1').replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n    slash = slash || '';\n    format = format || '';\n    capture = capture || '([^\\\\/' + format + ']+?)';\n    optional = optional || '';\n    keys.push({\n      name: key,\n      optional: !!optional,\n      offset: offset + extraOffset\n    });\n    var result = '' + (optional ? '' : slash) + '(?:' + format + (optional ? slash : '') + capture + (star ? '((?:[\\\\/' + format + '].+?)?)' : '') + ')' + optional;\n    extraOffset += result.length - match.length;\n    return result;\n  }).replace(/\\*/g, function (star, index) {\n    var len = keys.length;\n\n    while (len-- > keysOffset && keys[len].offset > index) {\n      keys[len].offset += 3; // Replacement length minus asterisk length.\n    }\n\n    return '(.*)';\n  }); // This is a workaround for handling unnamed matching groups.\n\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    } // It's possible to escape the bracket.\n\n\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++,\n        // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  } // If the path is non-ending, match until the end or a slash.\n\n\n  path += end ? '$' : path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)';\n  return new RegExp(path, flags);\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "pathtoRegexp",
        "MATCHING_GROUP_REGEXP",
        "path",
        "keys",
        "options",
        "strict",
        "end",
        "flags",
        "sensitive",
        "extraOffset",
        "keysOffset",
        "length",
        "i",
        "name",
        "m",
        "RegExp",
        "exec",
        "source",
        "push",
        "optional",
        "offset",
        "index",
        "Array",
        "isArray",
        "map",
        "value",
        "join",
        "replace",
        "match",
        "slash",
        "format",
        "key",
        "capture",
        "star",
        "result",
        "len",
        "escapeCount",
        "charAt",
        "splice"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\path-to-regexp\\",
      "sourcesContent": [
        "/**\r\n * Expose `pathtoRegexp`.\r\n */\r\n\r\nmodule.exports = pathtoRegexp;\r\n\r\n/**\r\n * Match matching groups in a regular expression.\r\n */\r\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\r\n\r\n/**\r\n * Normalize the given path string,\r\n * returning a regular expression.\r\n *\r\n * An empty array should be passed,\r\n * which will contain the placeholder\r\n * key names. For example \"/user/:id\" will\r\n * then contain [\"id\"].\r\n *\r\n * @param  {String|RegExp|Array} path\r\n * @param  {Array} keys\r\n * @param  {Object} options\r\n * @return {RegExp}\r\n * @api private\r\n */\r\n\r\nfunction pathtoRegexp(path, keys, options) {\r\n  options = options || {};\r\n  keys = keys || [];\r\n  var strict = options.strict;\r\n  var end = options.end !== false;\r\n  var flags = options.sensitive ? '' : 'i';\r\n  var extraOffset = 0;\r\n  var keysOffset = keys.length;\r\n  var i = 0;\r\n  var name = 0;\r\n  var m;\r\n\r\n  if (path instanceof RegExp) {\r\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\r\n      keys.push({\r\n        name: name++,\r\n        optional: false,\r\n        offset: m.index\r\n      });\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  if (Array.isArray(path)) {\r\n    // Map array parts into regexps and return their source. We also pass\r\n    // the same keys and options instance into every generation to get\r\n    // consistent matching groups before we join the sources together.\r\n    path = path.map(function (value) {\r\n      return pathtoRegexp(value, keys, options).source;\r\n    });\r\n\r\n    return new RegExp('(?:' + path.join('|') + ')', flags);\r\n  }\r\n\r\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\r\n    .replace(/\\/\\(/g, '/(?:')\r\n    .replace(/([\\/\\.])/g, '\\\\$1')\r\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\r\n      slash = slash || '';\r\n      format = format || '';\r\n      capture = capture || '([^\\\\/' + format + ']+?)';\r\n      optional = optional || '';\r\n\r\n      keys.push({\r\n        name: key,\r\n        optional: !!optional,\r\n        offset: offset + extraOffset\r\n      });\r\n\r\n      var result = ''\r\n        + (optional ? '' : slash)\r\n        + '(?:'\r\n        + format + (optional ? slash : '') + capture\r\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\r\n        + ')'\r\n        + optional;\r\n\r\n      extraOffset += result.length - match.length;\r\n\r\n      return result;\r\n    })\r\n    .replace(/\\*/g, function (star, index) {\r\n      var len = keys.length\r\n\r\n      while (len-- > keysOffset && keys[len].offset > index) {\r\n        keys[len].offset += 3; // Replacement length minus asterisk length.\r\n      }\r\n\r\n      return '(.*)';\r\n    });\r\n\r\n  // This is a workaround for handling unnamed matching groups.\r\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\r\n    var escapeCount = 0;\r\n    var index = m.index;\r\n\r\n    while (path.charAt(--index) === '\\\\') {\r\n      escapeCount++;\r\n    }\r\n\r\n    // It's possible to escape the bracket.\r\n    if (escapeCount % 2 === 1) {\r\n      continue;\r\n    }\r\n\r\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\r\n      keys.splice(keysOffset + i, 0, {\r\n        name: name++, // Unnamed matching groups must be consistently linear.\r\n        optional: false,\r\n        offset: m.index\r\n      });\r\n    }\r\n\r\n    i++;\r\n  }\r\n\r\n  // If the path is non-ending, match until the end or a slash.\r\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\r\n\r\n  return new RegExp(path, flags);\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211633
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\methods\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\methods\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\methods\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\methods\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\methods\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\methods\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\methods\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * methods\r\n * Copyright(c) 2013-2014 TJ Holowaychuk\r\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar http = require('http');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n/**\r\n * Get the current Node.js methods.\r\n * @private\r\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n/**\r\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\r\n * @private\r\n */\n\n\nfunction getBasicNodeMethods() {\n  return ['get', 'post', 'put', 'head', 'delete', 'options', 'trace', 'copy', 'lock', 'mkcol', 'move', 'purge', 'propfind', 'proppatch', 'unlock', 'report', 'mkactivity', 'checkout', 'merge', 'm-search', 'notify', 'subscribe', 'unsubscribe', 'patch', 'search', 'connect'];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImh0dHAiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldEN1cnJlbnROb2RlTWV0aG9kcyIsImdldEJhc2ljTm9kZU1ldGhvZHMiLCJNRVRIT0RTIiwibWFwIiwibG93ZXJDYXNlTWV0aG9kIiwibWV0aG9kIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxxQkFBcUIsTUFBTUMsbUJBQW1CLEVBQS9EO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0QscUJBQVQsR0FBaUM7QUFDL0IsU0FBT0osSUFBSSxDQUFDTSxPQUFMLElBQWdCTixJQUFJLENBQUNNLE9BQUwsQ0FBYUMsR0FBYixDQUFpQixTQUFTQyxlQUFULENBQXlCQyxNQUF6QixFQUFpQztBQUN2RSxXQUFPQSxNQUFNLENBQUNDLFdBQVAsRUFBUDtBQUNELEdBRnNCLENBQXZCO0FBR0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsU0FBU0wsbUJBQVQsR0FBK0I7QUFDN0IsU0FBTyxDQUNMLEtBREssRUFFTCxNQUZLLEVBR0wsS0FISyxFQUlMLE1BSkssRUFLTCxRQUxLLEVBTUwsU0FOSyxFQU9MLE9BUEssRUFRTCxNQVJLLEVBU0wsTUFUSyxFQVVMLE9BVkssRUFXTCxNQVhLLEVBWUwsT0FaSyxFQWFMLFVBYkssRUFjTCxXQWRLLEVBZUwsUUFmSyxFQWdCTCxRQWhCSyxFQWlCTCxZQWpCSyxFQWtCTCxVQWxCSyxFQW1CTCxPQW5CSyxFQW9CTCxVQXBCSyxFQXFCTCxRQXJCSyxFQXNCTCxXQXRCSyxFQXVCTCxhQXZCSyxFQXdCTCxPQXhCSyxFQXlCTCxRQXpCSyxFQTBCTCxTQTFCSyxDQUFQO0FBNEJEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxtZXRob2RzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogbWV0aG9kc1xyXG4gKiBDb3B5cmlnaHQoYykgMjAxMy0yMDE0IFRKIEhvbG93YXljaHVrXHJcbiAqIENvcHlyaWdodChjKSAyMDE1LTIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGdldEN1cnJlbnROb2RlTWV0aG9kcygpIHx8IGdldEJhc2ljTm9kZU1ldGhvZHMoKTtcclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIGN1cnJlbnQgTm9kZS5qcyBtZXRob2RzLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGdldEN1cnJlbnROb2RlTWV0aG9kcygpIHtcclxuICByZXR1cm4gaHR0cC5NRVRIT0RTICYmIGh0dHAuTUVUSE9EUy5tYXAoZnVuY3Rpb24gbG93ZXJDYXNlTWV0aG9kKG1ldGhvZCkge1xyXG4gICAgcmV0dXJuIG1ldGhvZC50b0xvd2VyQ2FzZSgpO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBcImJhc2ljXCIgTm9kZS5qcyBtZXRob2RzLCBhIHNuYXBzaG90IGZyb20gTm9kZS5qcyAwLjEwLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGdldEJhc2ljTm9kZU1ldGhvZHMoKSB7XHJcbiAgcmV0dXJuIFtcclxuICAgICdnZXQnLFxyXG4gICAgJ3Bvc3QnLFxyXG4gICAgJ3B1dCcsXHJcbiAgICAnaGVhZCcsXHJcbiAgICAnZGVsZXRlJyxcclxuICAgICdvcHRpb25zJyxcclxuICAgICd0cmFjZScsXHJcbiAgICAnY29weScsXHJcbiAgICAnbG9jaycsXHJcbiAgICAnbWtjb2wnLFxyXG4gICAgJ21vdmUnLFxyXG4gICAgJ3B1cmdlJyxcclxuICAgICdwcm9wZmluZCcsXHJcbiAgICAncHJvcHBhdGNoJyxcclxuICAgICd1bmxvY2snLFxyXG4gICAgJ3JlcG9ydCcsXHJcbiAgICAnbWthY3Rpdml0eScsXHJcbiAgICAnY2hlY2tvdXQnLFxyXG4gICAgJ21lcmdlJyxcclxuICAgICdtLXNlYXJjaCcsXHJcbiAgICAnbm90aWZ5JyxcclxuICAgICdzdWJzY3JpYmUnLFxyXG4gICAgJ3Vuc3Vic2NyaWJlJyxcclxuICAgICdwYXRjaCcsXHJcbiAgICAnc2VhcmNoJyxcclxuICAgICdjb25uZWN0J1xyXG4gIF07XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "http",
        "require",
        "module",
        "exports",
        "getCurrentNodeMethods",
        "getBasicNodeMethods",
        "METHODS",
        "map",
        "lowerCaseMethod",
        "method",
        "toLowerCase"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAEA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,qBAAqB,MAAMC,mBAAmB,EAA/D;AAEA;AACA;AACA;AACA;;AAEA,SAASD,qBAAT,GAAiC;AAC/B,SAAOJ,IAAI,CAACM,OAAL,IAAgBN,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAiB,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AACvE,WAAOA,MAAM,CAACC,WAAP,EAAP;AACD,GAFsB,CAAvB;AAGD;AAED;AACA;AACA;AACA;;;AAEA,SAASL,mBAAT,GAA+B;AAC7B,SAAO,CACL,KADK,EAEL,MAFK,EAGL,KAHK,EAIL,MAJK,EAKL,QALK,EAML,SANK,EAOL,OAPK,EAQL,MARK,EASL,MATK,EAUL,OAVK,EAWL,MAXK,EAYL,OAZK,EAaL,UAbK,EAcL,WAdK,EAeL,QAfK,EAgBL,QAhBK,EAiBL,YAjBK,EAkBL,UAlBK,EAmBL,OAnBK,EAoBL,UApBK,EAqBL,QArBK,EAsBL,WAtBK,EAuBL,aAvBK,EAwBL,OAxBK,EAyBL,QAzBK,EA0BL,SA1BK,CAAP;AA4BD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\methods\\",
      "sourcesContent": [
        "/*!\r\n * methods\r\n * Copyright(c) 2013-2014 TJ Holowaychuk\r\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar http = require('http');\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\r\n\r\n/**\r\n * Get the current Node.js methods.\r\n * @private\r\n */\r\n\r\nfunction getCurrentNodeMethods() {\r\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\r\n    return method.toLowerCase();\r\n  });\r\n}\r\n\r\n/**\r\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\r\n * @private\r\n */\r\n\r\nfunction getBasicNodeMethods() {\r\n  return [\r\n    'get',\r\n    'post',\r\n    'put',\r\n    'head',\r\n    'delete',\r\n    'options',\r\n    'trace',\r\n    'copy',\r\n    'lock',\r\n    'mkcol',\r\n    'move',\r\n    'purge',\r\n    'propfind',\r\n    'proppatch',\r\n    'unlock',\r\n    'report',\r\n    'mkactivity',\r\n    'checkout',\r\n    'merge',\r\n    'm-search',\r\n    'notify',\r\n    'subscribe',\r\n    'unsubscribe',\r\n    'patch',\r\n    'search',\r\n    'connect'\r\n  ];\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211492
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\utils-merge\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\utils-merge\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\utils-merge\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\utils-merge\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\utils-merge\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\utils-merge\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\utils-merge\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Merge object b with object a.\r\n *\r\n *     var a = { foo: 'bar' }\r\n *       , b = { bar: 'baz' };\r\n *\r\n *     merge(a, b);\r\n *     // => { foo: 'bar', bar: 'baz' }\r\n *\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {Object}\r\n * @api public\r\n */\nexports = module.exports = function (a, b) {\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJtb2R1bGUiLCJhIiwiYiIsImtleSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBQSxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0QsT0FBUCxHQUFpQixVQUFTRSxDQUFULEVBQVlDLENBQVosRUFBYztBQUN2QyxNQUFJRCxDQUFDLElBQUlDLENBQVQsRUFBWTtBQUNWLFNBQUssSUFBSUMsR0FBVCxJQUFnQkQsQ0FBaEIsRUFBbUI7QUFDakJELE1BQUFBLENBQUMsQ0FBQ0UsR0FBRCxDQUFELEdBQVNELENBQUMsQ0FBQ0MsR0FBRCxDQUFWO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPRixDQUFQO0FBQ0QsQ0FQRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcdXRpbHMtbWVyZ2VcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNZXJnZSBvYmplY3QgYiB3aXRoIG9iamVjdCBhLlxyXG4gKlxyXG4gKiAgICAgdmFyIGEgPSB7IGZvbzogJ2JhcicgfVxyXG4gKiAgICAgICAsIGIgPSB7IGJhcjogJ2JheicgfTtcclxuICpcclxuICogICAgIG1lcmdlKGEsIGIpO1xyXG4gKiAgICAgLy8gPT4geyBmb286ICdiYXInLCBiYXI6ICdiYXonIH1cclxuICpcclxuICogQHBhcmFtIHtPYmplY3R9IGFcclxuICogQHBhcmFtIHtPYmplY3R9IGJcclxuICogQHJldHVybiB7T2JqZWN0fVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGEsIGIpe1xyXG4gIGlmIChhICYmIGIpIHtcclxuICAgIGZvciAodmFyIGtleSBpbiBiKSB7XHJcbiAgICAgIGFba2V5XSA9IGJba2V5XTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIGE7XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "exports",
        "module",
        "a",
        "b",
        "key"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiB,UAASE,CAAT,EAAYC,CAAZ,EAAc;AACvC,MAAID,CAAC,IAAIC,CAAT,EAAY;AACV,SAAK,IAAIC,GAAT,IAAgBD,CAAhB,EAAmB;AACjBD,MAAAA,CAAC,CAACE,GAAD,CAAD,GAASD,CAAC,CAACC,GAAD,CAAV;AACD;AACF;;AACD,SAAOF,CAAP;AACD,CAPD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\utils-merge\\",
      "sourcesContent": [
        "/**\r\n * Merge object b with object a.\r\n *\r\n *     var a = { foo: 'bar' }\r\n *       , b = { bar: 'baz' };\r\n *\r\n *     merge(a, b);\r\n *     // => { foo: 'bar', bar: 'baz' }\r\n *\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {Object}\r\n * @api public\r\n */\r\n\r\nexports = module.exports = function(a, b){\r\n  if (a && b) {\r\n    for (var key in b) {\r\n      a[key] = b[key];\r\n    }\r\n  }\r\n  return a;\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211991
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\setprototypeof\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\setprototypeof\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\setprototypeof\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\setprototypeof\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\setprototypeof\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\setprototypeof\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\setprototypeof\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/* eslint no-proto: 0 */\n\nmodule.exports = Object.setPrototypeOf || ({\n  __proto__: []\n} instanceof Array ? setProtoOf : mixinProperties);\n\nfunction setProtoOf(obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n}\n\nfunction mixinProperties(obj, proto) {\n  for (var prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5Iiwic2V0UHJvdG9PZiIsIm1peGluUHJvcGVydGllcyIsIm9iaiIsInByb3RvIiwicHJvcCIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLE1BQU0sQ0FBQ0MsY0FBUCxLQUEwQjtBQUFFQyxFQUFBQSxTQUFTLEVBQUU7QUFBYixhQUE2QkMsS0FBN0IsR0FBcUNDLFVBQXJDLEdBQWtEQyxlQUE1RSxDQUFqQjs7QUFFQSxTQUFTRCxVQUFULENBQXFCRSxHQUFyQixFQUEwQkMsS0FBMUIsRUFBaUM7QUFDL0JELEVBQUFBLEdBQUcsQ0FBQ0osU0FBSixHQUFnQkssS0FBaEI7QUFDQSxTQUFPRCxHQUFQO0FBQ0Q7O0FBRUQsU0FBU0QsZUFBVCxDQUEwQkMsR0FBMUIsRUFBK0JDLEtBQS9CLEVBQXNDO0FBQ3BDLE9BQUssSUFBSUMsSUFBVCxJQUFpQkQsS0FBakIsRUFBd0I7QUFDdEIsUUFBSSxDQUFDRCxHQUFHLENBQUNHLGNBQUosQ0FBbUJELElBQW5CLENBQUwsRUFBK0I7QUFDN0JGLE1BQUFBLEdBQUcsQ0FBQ0UsSUFBRCxDQUFILEdBQVlELEtBQUssQ0FBQ0MsSUFBRCxDQUFqQjtBQUNEO0FBQ0Y7O0FBQ0QsU0FBT0YsR0FBUDtBQUNEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxzZXRwcm90b3R5cGVvZlxcIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXHJcbi8qIGVzbGludCBuby1wcm90bzogMCAqL1xyXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSA/IHNldFByb3RvT2YgOiBtaXhpblByb3BlcnRpZXMpXHJcblxyXG5mdW5jdGlvbiBzZXRQcm90b09mIChvYmosIHByb3RvKSB7XHJcbiAgb2JqLl9fcHJvdG9fXyA9IHByb3RvXHJcbiAgcmV0dXJuIG9ialxyXG59XHJcblxyXG5mdW5jdGlvbiBtaXhpblByb3BlcnRpZXMgKG9iaiwgcHJvdG8pIHtcclxuICBmb3IgKHZhciBwcm9wIGluIHByb3RvKSB7XHJcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xyXG4gICAgICBvYmpbcHJvcF0gPSBwcm90b1twcm9wXVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gb2JqXHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "Object",
        "setPrototypeOf",
        "__proto__",
        "Array",
        "setProtoOf",
        "mixinProperties",
        "obj",
        "proto",
        "prop",
        "hasOwnProperty"
      ],
      "mappings": "AAAA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,cAAP,KAA0B;AAAEC,EAAAA,SAAS,EAAE;AAAb,aAA6BC,KAA7B,GAAqCC,UAArC,GAAkDC,eAA5E,CAAjB;;AAEA,SAASD,UAAT,CAAqBE,GAArB,EAA0BC,KAA1B,EAAiC;AAC/BD,EAAAA,GAAG,CAACJ,SAAJ,GAAgBK,KAAhB;AACA,SAAOD,GAAP;AACD;;AAED,SAASD,eAAT,CAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;AACpC,OAAK,IAAIC,IAAT,IAAiBD,KAAjB,EAAwB;AACtB,QAAI,CAACD,GAAG,CAACG,cAAJ,CAAmBD,IAAnB,CAAL,EAA+B;AAC7BF,MAAAA,GAAG,CAACE,IAAD,CAAH,GAAYD,KAAK,CAACC,IAAD,CAAjB;AACD;AACF;;AACD,SAAOF,GAAP;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\setprototypeof\\",
      "sourcesContent": [
        "'use strict'\r\n/* eslint no-proto: 0 */\r\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\r\n\r\nfunction setProtoOf (obj, proto) {\r\n  obj.__proto__ = proto\r\n  return obj\r\n}\r\n\r\nfunction mixinProperties (obj, proto) {\r\n  for (var prop in proto) {\r\n    if (!obj.hasOwnProperty(prop)) {\r\n      obj[prop] = proto[prop]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211960
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\middleware\\\\init.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\init.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\init.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\init.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\",
        "sourceFileName": "init.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar setPrototypeOf = require('setprototypeof');\n/**\r\n * Initialization middleware, exposing the\r\n * request and response to each other, as well\r\n * as defaulting the X-Powered-By header field.\r\n *\r\n * @param {Function} app\r\n * @return {Function}\r\n * @api private\r\n */\n\n\nexports.init = function (app) {\n  return function expressInit(req, res, next) {\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n    setPrototypeOf(req, app.request);\n    setPrototypeOf(res, app.response);\n    res.locals = res.locals || Object.create(null);\n    next();\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsic2V0UHJvdG90eXBlT2YiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImluaXQiLCJhcHAiLCJleHByZXNzSW5pdCIsInJlcSIsInJlcyIsIm5leHQiLCJlbmFibGVkIiwic2V0SGVhZGVyIiwicmVxdWVzdCIsInJlc3BvbnNlIiwibG9jYWxzIiwiT2JqZWN0IiwiY3JlYXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUEsY0FBYyxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBNUI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBQyxPQUFPLENBQUNDLElBQVIsR0FBZSxVQUFTQyxHQUFULEVBQWE7QUFDMUIsU0FBTyxTQUFTQyxXQUFULENBQXFCQyxHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQW9DO0FBQ3pDLFFBQUlKLEdBQUcsQ0FBQ0ssT0FBSixDQUFZLGNBQVosQ0FBSixFQUFpQ0YsR0FBRyxDQUFDRyxTQUFKLENBQWMsY0FBZCxFQUE4QixTQUE5QjtBQUNqQ0osSUFBQUEsR0FBRyxDQUFDQyxHQUFKLEdBQVVBLEdBQVY7QUFDQUEsSUFBQUEsR0FBRyxDQUFDRCxHQUFKLEdBQVVBLEdBQVY7QUFDQUEsSUFBQUEsR0FBRyxDQUFDRSxJQUFKLEdBQVdBLElBQVg7QUFFQVIsSUFBQUEsY0FBYyxDQUFDTSxHQUFELEVBQU1GLEdBQUcsQ0FBQ08sT0FBVixDQUFkO0FBQ0FYLElBQUFBLGNBQWMsQ0FBQ08sR0FBRCxFQUFNSCxHQUFHLENBQUNRLFFBQVYsQ0FBZDtBQUVBTCxJQUFBQSxHQUFHLENBQUNNLE1BQUosR0FBYU4sR0FBRyxDQUFDTSxNQUFKLElBQWNDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLElBQWQsQ0FBM0I7QUFFQVAsSUFBQUEsSUFBSTtBQUNMLEdBWkQ7QUFhRCxDQWREIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxleHByZXNzXFxsaWJcXG1pZGRsZXdhcmVcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBleHByZXNzXHJcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcclxuICogQ29weXJpZ2h0KGMpIDIwMTMgUm9tYW4gU2h0eWxtYW5cclxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG4vKipcclxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCdzZXRwcm90b3R5cGVvZicpXHJcblxyXG4vKipcclxuICogSW5pdGlhbGl6YXRpb24gbWlkZGxld2FyZSwgZXhwb3NpbmcgdGhlXHJcbiAqIHJlcXVlc3QgYW5kIHJlc3BvbnNlIHRvIGVhY2ggb3RoZXIsIGFzIHdlbGxcclxuICogYXMgZGVmYXVsdGluZyB0aGUgWC1Qb3dlcmVkLUJ5IGhlYWRlciBmaWVsZC5cclxuICpcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gYXBwXHJcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5leHBvcnRzLmluaXQgPSBmdW5jdGlvbihhcHApe1xyXG4gIHJldHVybiBmdW5jdGlvbiBleHByZXNzSW5pdChyZXEsIHJlcywgbmV4dCl7XHJcbiAgICBpZiAoYXBwLmVuYWJsZWQoJ3gtcG93ZXJlZC1ieScpKSByZXMuc2V0SGVhZGVyKCdYLVBvd2VyZWQtQnknLCAnRXhwcmVzcycpO1xyXG4gICAgcmVxLnJlcyA9IHJlcztcclxuICAgIHJlcy5yZXEgPSByZXE7XHJcbiAgICByZXEubmV4dCA9IG5leHQ7XHJcblxyXG4gICAgc2V0UHJvdG90eXBlT2YocmVxLCBhcHAucmVxdWVzdClcclxuICAgIHNldFByb3RvdHlwZU9mKHJlcywgYXBwLnJlc3BvbnNlKVxyXG5cclxuICAgIHJlcy5sb2NhbHMgPSByZXMubG9jYWxzIHx8IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcblxyXG4gICAgbmV4dCgpO1xyXG4gIH07XHJcbn07XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "init.js"
      ],
      "names": [
        "setPrototypeOf",
        "require",
        "exports",
        "init",
        "app",
        "expressInit",
        "req",
        "res",
        "next",
        "enabled",
        "setHeader",
        "request",
        "response",
        "locals",
        "Object",
        "create"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,OAAO,CAACC,IAAR,GAAe,UAASC,GAAT,EAAa;AAC1B,SAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAoC;AACzC,QAAIJ,GAAG,CAACK,OAAJ,CAAY,cAAZ,CAAJ,EAAiCF,GAAG,CAACG,SAAJ,CAAc,cAAd,EAA8B,SAA9B;AACjCJ,IAAAA,GAAG,CAACC,GAAJ,GAAUA,GAAV;AACAA,IAAAA,GAAG,CAACD,GAAJ,GAAUA,GAAV;AACAA,IAAAA,GAAG,CAACE,IAAJ,GAAWA,IAAX;AAEAR,IAAAA,cAAc,CAACM,GAAD,EAAMF,GAAG,CAACO,OAAV,CAAd;AACAX,IAAAA,cAAc,CAACO,GAAD,EAAMH,GAAG,CAACQ,QAAV,CAAd;AAEAL,IAAAA,GAAG,CAACM,MAAJ,GAAaN,GAAG,CAACM,MAAJ,IAAcC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA3B;AAEAP,IAAAA,IAAI;AACL,GAZD;AAaD,CAdD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar setPrototypeOf = require('setprototypeof')\r\n\r\n/**\r\n * Initialization middleware, exposing the\r\n * request and response to each other, as well\r\n * as defaulting the X-Powered-By header field.\r\n *\r\n * @param {Function} app\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.init = function(app){\r\n  return function expressInit(req, res, next){\r\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\r\n    req.res = res;\r\n    res.req = req;\r\n    req.next = next;\r\n\r\n    setPrototypeOf(req, app.request)\r\n    setPrototypeOf(res, app.response)\r\n\r\n    res.locals = res.locals || Object.create(null);\r\n\r\n    next();\r\n  };\r\n};\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\middleware\\\\query.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\query.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\query.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\",
        "sourceFileName": "query.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n */\n\nvar merge = require('utils-merge');\n\nvar parseUrl = require('parseurl');\n\nvar qs = require('qs');\n/**\r\n * @param {Object} options\r\n * @return {Function}\r\n * @api public\r\n */\n\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options);\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJ5LmpzIl0sIm5hbWVzIjpbIm1lcmdlIiwicmVxdWlyZSIsInBhcnNlVXJsIiwicXMiLCJtb2R1bGUiLCJleHBvcnRzIiwicXVlcnkiLCJvcHRpb25zIiwib3B0cyIsInF1ZXJ5cGFyc2UiLCJwYXJzZSIsInVuZGVmaW5lZCIsImFsbG93UHJvdG90eXBlcyIsInJlcSIsInJlcyIsIm5leHQiLCJ2YWwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUFuQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLElBQUlFLEVBQUUsR0FBR0YsT0FBTyxDQUFDLElBQUQsQ0FBaEI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLEtBQVQsQ0FBZUMsT0FBZixFQUF3QjtBQUN2QyxNQUFJQyxJQUFJLEdBQUdSLEtBQUssQ0FBQyxFQUFELEVBQUtPLE9BQUwsQ0FBaEI7QUFDQSxNQUFJRSxVQUFVLEdBQUdOLEVBQUUsQ0FBQ08sS0FBcEI7O0FBRUEsTUFBSSxPQUFPSCxPQUFQLEtBQW1CLFVBQXZCLEVBQW1DO0FBQ2pDRSxJQUFBQSxVQUFVLEdBQUdGLE9BQWI7QUFDQUMsSUFBQUEsSUFBSSxHQUFHRyxTQUFQO0FBQ0Q7O0FBRUQsTUFBSUgsSUFBSSxLQUFLRyxTQUFULElBQXNCSCxJQUFJLENBQUNJLGVBQUwsS0FBeUJELFNBQW5ELEVBQThEO0FBQzVEO0FBQ0FILElBQUFBLElBQUksQ0FBQ0ksZUFBTCxHQUF1QixJQUF2QjtBQUNEOztBQUVELFNBQU8sU0FBU04sS0FBVCxDQUFlTyxHQUFmLEVBQW9CQyxHQUFwQixFQUF5QkMsSUFBekIsRUFBOEI7QUFDbkMsUUFBSSxDQUFDRixHQUFHLENBQUNQLEtBQVQsRUFBZ0I7QUFDZCxVQUFJVSxHQUFHLEdBQUdkLFFBQVEsQ0FBQ1csR0FBRCxDQUFSLENBQWNQLEtBQXhCO0FBQ0FPLE1BQUFBLEdBQUcsQ0FBQ1AsS0FBSixHQUFZRyxVQUFVLENBQUNPLEdBQUQsRUFBTVIsSUFBTixDQUF0QjtBQUNEOztBQUVETyxJQUFBQSxJQUFJO0FBQ0wsR0FQRDtBQVFELENBdEJEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxleHByZXNzXFxsaWJcXG1pZGRsZXdhcmVcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBleHByZXNzXHJcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcclxuICogQ29weXJpZ2h0KGMpIDIwMTMgUm9tYW4gU2h0eWxtYW5cclxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG4vKipcclxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cclxuICovXHJcblxyXG52YXIgbWVyZ2UgPSByZXF1aXJlKCd1dGlscy1tZXJnZScpXHJcbnZhciBwYXJzZVVybCA9IHJlcXVpcmUoJ3BhcnNldXJsJyk7XHJcbnZhciBxcyA9IHJlcXVpcmUoJ3FzJyk7XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcclxuICogQHJldHVybiB7RnVuY3Rpb259XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBxdWVyeShvcHRpb25zKSB7XHJcbiAgdmFyIG9wdHMgPSBtZXJnZSh7fSwgb3B0aW9ucylcclxuICB2YXIgcXVlcnlwYXJzZSA9IHFzLnBhcnNlO1xyXG5cclxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcclxuICAgIHF1ZXJ5cGFyc2UgPSBvcHRpb25zO1xyXG4gICAgb3B0cyA9IHVuZGVmaW5lZDtcclxuICB9XHJcblxyXG4gIGlmIChvcHRzICE9PSB1bmRlZmluZWQgJiYgb3B0cy5hbGxvd1Byb3RvdHlwZXMgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgLy8gYmFjay1jb21wYXQgZm9yIHFzIG1vZHVsZVxyXG4gICAgb3B0cy5hbGxvd1Byb3RvdHlwZXMgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZ1bmN0aW9uIHF1ZXJ5KHJlcSwgcmVzLCBuZXh0KXtcclxuICAgIGlmICghcmVxLnF1ZXJ5KSB7XHJcbiAgICAgIHZhciB2YWwgPSBwYXJzZVVybChyZXEpLnF1ZXJ5O1xyXG4gICAgICByZXEucXVlcnkgPSBxdWVyeXBhcnNlKHZhbCwgb3B0cyk7XHJcbiAgICB9XHJcblxyXG4gICAgbmV4dCgpO1xyXG4gIH07XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "query.js"
      ],
      "names": [
        "merge",
        "require",
        "parseUrl",
        "qs",
        "module",
        "exports",
        "query",
        "options",
        "opts",
        "queryparse",
        "parse",
        "undefined",
        "allowPrototypes",
        "req",
        "res",
        "next",
        "val"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACvC,MAAIC,IAAI,GAAGR,KAAK,CAAC,EAAD,EAAKO,OAAL,CAAhB;AACA,MAAIE,UAAU,GAAGN,EAAE,CAACO,KAApB;;AAEA,MAAI,OAAOH,OAAP,KAAmB,UAAvB,EAAmC;AACjCE,IAAAA,UAAU,GAAGF,OAAb;AACAC,IAAAA,IAAI,GAAGG,SAAP;AACD;;AAED,MAAIH,IAAI,KAAKG,SAAT,IAAsBH,IAAI,CAACI,eAAL,KAAyBD,SAAnD,EAA8D;AAC5D;AACAH,IAAAA,IAAI,CAACI,eAAL,GAAuB,IAAvB;AACD;;AAED,SAAO,SAASN,KAAT,CAAeO,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8B;AACnC,QAAI,CAACF,GAAG,CAACP,KAAT,EAAgB;AACd,UAAIU,GAAG,GAAGd,QAAQ,CAACW,GAAD,CAAR,CAAcP,KAAxB;AACAO,MAAAA,GAAG,CAACP,KAAJ,GAAYG,UAAU,CAACO,GAAD,EAAMR,IAAN,CAAtB;AACD;;AAEDO,IAAAA,IAAI;AACL,GAPD;AAQD,CAtBD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\middleware\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar merge = require('utils-merge')\r\nvar parseUrl = require('parseurl');\r\nvar qs = require('qs');\r\n\r\n/**\r\n * @param {Object} options\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function query(options) {\r\n  var opts = merge({}, options)\r\n  var queryparse = qs.parse;\r\n\r\n  if (typeof options === 'function') {\r\n    queryparse = options;\r\n    opts = undefined;\r\n  }\r\n\r\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\r\n    // back-compat for qs module\r\n    opts.allowPrototypes = true;\r\n  }\r\n\r\n  return function query(req, res, next){\r\n    if (!req.query) {\r\n      var val = parseUrl(req).query;\r\n      req.query = queryparse(val, opts);\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar stringify = require('./stringify');\n\nvar parse = require('./parse');\n\nvar formats = require('./formats');\n\nmodule.exports = {\n  formats: formats,\n  parse: parse,\n  stringify: stringify\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInN0cmluZ2lmeSIsInJlcXVpcmUiLCJwYXJzZSIsImZvcm1hdHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXZCOztBQUNBLElBQUlDLEtBQUssR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBbkI7O0FBQ0EsSUFBSUUsT0FBTyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUFyQjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JGLEVBQUFBLE9BQU8sRUFBRUEsT0FESTtBQUViRCxFQUFBQSxLQUFLLEVBQUVBLEtBRk07QUFHYkYsRUFBQUEsU0FBUyxFQUFFQTtBQUhFLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxxc1xcbGliXFwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9zdHJpbmdpZnknKTtcclxudmFyIHBhcnNlID0gcmVxdWlyZSgnLi9wYXJzZScpO1xyXG52YXIgZm9ybWF0cyA9IHJlcXVpcmUoJy4vZm9ybWF0cycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBmb3JtYXRzOiBmb3JtYXRzLFxyXG4gICAgcGFyc2U6IHBhcnNlLFxyXG4gICAgc3RyaW5naWZ5OiBzdHJpbmdpZnlcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "stringify",
        "require",
        "parse",
        "formats",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAArB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbF,EAAAA,OAAO,EAAEA,OADI;AAEbD,EAAAA,KAAK,EAAEA,KAFM;AAGbF,EAAAA,SAAS,EAAEA;AAHE,CAAjB",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nvar stringify = require('./stringify');\r\nvar parse = require('./parse');\r\nvar formats = require('./formats');\r\n\r\nmodule.exports = {\r\n    formats: formats,\r\n    parse: parse,\r\n    stringify: stringify\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211679
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\stringify.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\stringify.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\stringify.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\stringify.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
        "sourceFileName": "stringify.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar utils = require('./utils');\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar arrayPrefixGenerators = {\n  brackets: function brackets(prefix) {\n    // eslint-disable-line func-name-matching\n    return prefix + '[]';\n  },\n  comma: 'comma',\n  indices: function indices(prefix, key) {\n    // eslint-disable-line func-name-matching\n    return prefix + '[' + key + ']';\n  },\n  repeat: function repeat(prefix) {\n    // eslint-disable-line func-name-matching\n    return prefix;\n  }\n};\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\n\nvar pushToArray = function (arr, valueOrArray) {\n  push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\nvar defaults = {\n  addQueryPrefix: false,\n  allowDots: false,\n  charset: 'utf-8',\n  charsetSentinel: false,\n  delimiter: '&',\n  encode: true,\n  encoder: utils.encode,\n  encodeValuesOnly: false,\n  formatter: formats.formatters[formats['default']],\n  // deprecated\n  indices: false,\n  serializeDate: function serializeDate(date) {\n    // eslint-disable-line func-name-matching\n    return toISO.call(date);\n  },\n  skipNulls: false,\n  strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\nobject, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset) {\n  var obj = object;\n\n  if (typeof filter === 'function') {\n    obj = filter(prefix, obj);\n  } else if (obj instanceof Date) {\n    obj = serializeDate(obj);\n  } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    obj = obj.join(',');\n  }\n\n  if (obj === null) {\n    if (strictNullHandling) {\n      return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n    }\n\n    obj = '';\n  }\n\n  if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n    if (encoder) {\n      var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n      return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n    }\n\n    return [formatter(prefix) + '=' + formatter(String(obj))];\n  }\n\n  var values = [];\n\n  if (typeof obj === 'undefined') {\n    return values;\n  }\n\n  var objKeys;\n\n  if (isArray(filter)) {\n    objKeys = filter;\n  } else {\n    var keys = Object.keys(obj);\n    objKeys = sort ? keys.sort(sort) : keys;\n  }\n\n  for (var i = 0; i < objKeys.length; ++i) {\n    var key = objKeys[i];\n\n    if (skipNulls && obj[key] === null) {\n      continue;\n    }\n\n    if (isArray(obj)) {\n      pushToArray(values, stringify(obj[key], typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset));\n    } else {\n      pushToArray(values, stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset));\n    }\n  }\n\n  return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n  if (!opts) {\n    return defaults;\n  }\n\n  if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n    throw new TypeError('Encoder has to be a function.');\n  }\n\n  var charset = opts.charset || defaults.charset;\n\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n\n  var format = formats['default'];\n\n  if (typeof opts.format !== 'undefined') {\n    if (!has.call(formats.formatters, opts.format)) {\n      throw new TypeError('Unknown format option provided.');\n    }\n\n    format = opts.format;\n  }\n\n  var formatter = formats.formatters[format];\n  var filter = defaults.filter;\n\n  if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n    filter = opts.filter;\n  }\n\n  return {\n    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n    allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n    charset: charset,\n    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n    encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n    filter: filter,\n    formatter: formatter,\n    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n    sort: typeof opts.sort === 'function' ? opts.sort : null,\n    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n  };\n};\n\nmodule.exports = function (object, opts) {\n  var obj = object;\n  var options = normalizeStringifyOptions(opts);\n  var objKeys;\n  var filter;\n\n  if (typeof options.filter === 'function') {\n    filter = options.filter;\n    obj = filter('', obj);\n  } else if (isArray(options.filter)) {\n    filter = options.filter;\n    objKeys = filter;\n  }\n\n  var keys = [];\n\n  if (typeof obj !== 'object' || obj === null) {\n    return '';\n  }\n\n  var arrayFormat;\n\n  if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n    arrayFormat = opts.arrayFormat;\n  } else if (opts && 'indices' in opts) {\n    arrayFormat = opts.indices ? 'indices' : 'repeat';\n  } else {\n    arrayFormat = 'indices';\n  }\n\n  var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n  if (!objKeys) {\n    objKeys = Object.keys(obj);\n  }\n\n  if (options.sort) {\n    objKeys.sort(options.sort);\n  }\n\n  for (var i = 0; i < objKeys.length; ++i) {\n    var key = objKeys[i];\n\n    if (options.skipNulls && obj[key] === null) {\n      continue;\n    }\n\n    pushToArray(keys, stringify(obj[key], key, generateArrayPrefix, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.formatter, options.encodeValuesOnly, options.charset));\n  }\n\n  var joined = keys.join(options.delimiter);\n  var prefix = options.addQueryPrefix === true ? '?' : '';\n\n  if (options.charsetSentinel) {\n    if (options.charset === 'iso-8859-1') {\n      // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n      prefix += 'utf8=%26%2310003%3B&';\n    } else {\n      // encodeURIComponent('✓')\n      prefix += 'utf8=%E2%9C%93&';\n    }\n  }\n\n  return joined.length > 0 ? prefix + joined : '';\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "stringify.js"
      ],
      "names": [
        "utils",
        "require",
        "formats",
        "has",
        "Object",
        "prototype",
        "hasOwnProperty",
        "arrayPrefixGenerators",
        "brackets",
        "prefix",
        "comma",
        "indices",
        "key",
        "repeat",
        "isArray",
        "Array",
        "push",
        "pushToArray",
        "arr",
        "valueOrArray",
        "apply",
        "toISO",
        "Date",
        "toISOString",
        "defaults",
        "addQueryPrefix",
        "allowDots",
        "charset",
        "charsetSentinel",
        "delimiter",
        "encode",
        "encoder",
        "encodeValuesOnly",
        "formatter",
        "formatters",
        "serializeDate",
        "date",
        "call",
        "skipNulls",
        "strictNullHandling",
        "stringify",
        "object",
        "generateArrayPrefix",
        "filter",
        "sort",
        "obj",
        "join",
        "isBuffer",
        "keyValue",
        "String",
        "values",
        "objKeys",
        "keys",
        "i",
        "length",
        "normalizeStringifyOptions",
        "opts",
        "undefined",
        "TypeError",
        "format",
        "module",
        "exports",
        "options",
        "arrayFormat",
        "joined"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIE,GAAG,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA3B;AAEA,IAAIC,qBAAqB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AAAE;AAClC,WAAOA,MAAM,GAAG,IAAhB;AACH,GAHuB;AAIxBC,EAAAA,KAAK,EAAE,OAJiB;AAKxBC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,MAAjB,EAAyBG,GAAzB,EAA8B;AAAE;AACrC,WAAOH,MAAM,GAAG,GAAT,GAAeG,GAAf,GAAqB,GAA5B;AACH,GAPuB;AAQxBC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAAE;AAC9B,WAAOA,MAAP;AACH;AAVuB,CAA5B;AAaA,IAAIK,OAAO,GAAGC,KAAK,CAACD,OAApB;AACA,IAAIE,IAAI,GAAGD,KAAK,CAACV,SAAN,CAAgBW,IAA3B;;AACA,IAAIC,WAAW,GAAG,UAAUC,GAAV,EAAeC,YAAf,EAA6B;AAC3CH,EAAAA,IAAI,CAACI,KAAL,CAAWF,GAAX,EAAgBJ,OAAO,CAACK,YAAD,CAAP,GAAwBA,YAAxB,GAAuC,CAACA,YAAD,CAAvD;AACH,CAFD;;AAIA,IAAIE,KAAK,GAAGC,IAAI,CAACjB,SAAL,CAAekB,WAA3B;AAEA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,cAAc,EAAE,KADL;AAEXC,EAAAA,SAAS,EAAE,KAFA;AAGXC,EAAAA,OAAO,EAAE,OAHE;AAIXC,EAAAA,eAAe,EAAE,KAJN;AAKXC,EAAAA,SAAS,EAAE,GALA;AAMXC,EAAAA,MAAM,EAAE,IANG;AAOXC,EAAAA,OAAO,EAAE/B,KAAK,CAAC8B,MAPJ;AAQXE,EAAAA,gBAAgB,EAAE,KARP;AASXC,EAAAA,SAAS,EAAE/B,OAAO,CAACgC,UAAR,CAAmBhC,OAAO,CAAC,SAAD,CAA1B,CATA;AAUX;AACAS,EAAAA,OAAO,EAAE,KAXE;AAYXwB,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAAE;AAC1C,WAAOf,KAAK,CAACgB,IAAN,CAAWD,IAAX,CAAP;AACH,GAdU;AAeXE,EAAAA,SAAS,EAAE,KAfA;AAgBXC,EAAAA,kBAAkB,EAAE;AAhBT,CAAf;;AAmBA,IAAIC,SAAS,GAAG,SAASA,SAAT,EAAoB;AAChCC,MADY,EAEZhC,MAFY,EAGZiC,mBAHY,EAIZH,kBAJY,EAKZD,SALY,EAMZP,OANY,EAOZY,MAPY,EAQZC,IARY,EASZlB,SATY,EAUZS,aAVY,EAWZF,SAXY,EAYZD,gBAZY,EAaZL,OAbY,EAcd;AACE,MAAIkB,GAAG,GAAGJ,MAAV;;AACA,MAAI,OAAOE,MAAP,KAAkB,UAAtB,EAAkC;AAC9BE,IAAAA,GAAG,GAAGF,MAAM,CAAClC,MAAD,EAASoC,GAAT,CAAZ;AACH,GAFD,MAEO,IAAIA,GAAG,YAAYvB,IAAnB,EAAyB;AAC5BuB,IAAAA,GAAG,GAAGV,aAAa,CAACU,GAAD,CAAnB;AACH,GAFM,MAEA,IAAIH,mBAAmB,KAAK,OAAxB,IAAmC5B,OAAO,CAAC+B,GAAD,CAA9C,EAAqD;AACxDA,IAAAA,GAAG,GAAGA,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAN;AACH;;AAED,MAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,QAAIN,kBAAJ,EAAwB;AACpB,aAAOR,OAAO,IAAI,CAACC,gBAAZ,GAA+BD,OAAO,CAACtB,MAAD,EAASe,QAAQ,CAACO,OAAlB,EAA2BJ,OAA3B,CAAtC,GAA4ElB,MAAnF;AACH;;AAEDoC,IAAAA,GAAG,GAAG,EAAN;AACH;;AAED,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAA1C,IAAsD,OAAOA,GAAP,KAAe,SAArE,IAAkF7C,KAAK,CAAC+C,QAAN,CAAeF,GAAf,CAAtF,EAA2G;AACvG,QAAId,OAAJ,EAAa;AACT,UAAIiB,QAAQ,GAAGhB,gBAAgB,GAAGvB,MAAH,GAAYsB,OAAO,CAACtB,MAAD,EAASe,QAAQ,CAACO,OAAlB,EAA2BJ,OAA3B,CAAlD;AACA,aAAO,CAACM,SAAS,CAACe,QAAD,CAAT,GAAsB,GAAtB,GAA4Bf,SAAS,CAACF,OAAO,CAACc,GAAD,EAAMrB,QAAQ,CAACO,OAAf,EAAwBJ,OAAxB,CAAR,CAAtC,CAAP;AACH;;AACD,WAAO,CAACM,SAAS,CAACxB,MAAD,CAAT,GAAoB,GAApB,GAA0BwB,SAAS,CAACgB,MAAM,CAACJ,GAAD,CAAP,CAApC,CAAP;AACH;;AAED,MAAIK,MAAM,GAAG,EAAb;;AAEA,MAAI,OAAOL,GAAP,KAAe,WAAnB,EAAgC;AAC5B,WAAOK,MAAP;AACH;;AAED,MAAIC,OAAJ;;AACA,MAAIrC,OAAO,CAAC6B,MAAD,CAAX,EAAqB;AACjBQ,IAAAA,OAAO,GAAGR,MAAV;AACH,GAFD,MAEO;AACH,QAAIS,IAAI,GAAGhD,MAAM,CAACgD,IAAP,CAAYP,GAAZ,CAAX;AACAM,IAAAA,OAAO,GAAGP,IAAI,GAAGQ,IAAI,CAACR,IAAL,CAAUA,IAAV,CAAH,GAAqBQ,IAAnC;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACrC,QAAIzC,GAAG,GAAGuC,OAAO,CAACE,CAAD,CAAjB;;AAEA,QAAIf,SAAS,IAAIO,GAAG,CAACjC,GAAD,CAAH,KAAa,IAA9B,EAAoC;AAChC;AACH;;AAED,QAAIE,OAAO,CAAC+B,GAAD,CAAX,EAAkB;AACd5B,MAAAA,WAAW,CAACiC,MAAD,EAASV,SAAS,CACzBK,GAAG,CAACjC,GAAD,CADsB,EAEzB,OAAO8B,mBAAP,KAA+B,UAA/B,GAA4CA,mBAAmB,CAACjC,MAAD,EAASG,GAAT,CAA/D,GAA+EH,MAFtD,EAGzBiC,mBAHyB,EAIzBH,kBAJyB,EAKzBD,SALyB,EAMzBP,OANyB,EAOzBY,MAPyB,EAQzBC,IARyB,EASzBlB,SATyB,EAUzBS,aAVyB,EAWzBF,SAXyB,EAYzBD,gBAZyB,EAazBL,OAbyB,CAAlB,CAAX;AAeH,KAhBD,MAgBO;AACHV,MAAAA,WAAW,CAACiC,MAAD,EAASV,SAAS,CACzBK,GAAG,CAACjC,GAAD,CADsB,EAEzBH,MAAM,IAAIiB,SAAS,GAAG,MAAMd,GAAT,GAAe,MAAMA,GAAN,GAAY,GAAxC,CAFmB,EAGzB8B,mBAHyB,EAIzBH,kBAJyB,EAKzBD,SALyB,EAMzBP,OANyB,EAOzBY,MAPyB,EAQzBC,IARyB,EASzBlB,SATyB,EAUzBS,aAVyB,EAWzBF,SAXyB,EAYzBD,gBAZyB,EAazBL,OAbyB,CAAlB,CAAX;AAeH;AACJ;;AAED,SAAOuB,MAAP;AACH,CAjGD;;AAmGA,IAAIK,yBAAyB,GAAG,SAASA,yBAAT,CAAmCC,IAAnC,EAAyC;AACrE,MAAI,CAACA,IAAL,EAAW;AACP,WAAOhC,QAAP;AACH;;AAED,MAAIgC,IAAI,CAACzB,OAAL,KAAiB,IAAjB,IAAyByB,IAAI,CAACzB,OAAL,KAAiB0B,SAA1C,IAAuD,OAAOD,IAAI,CAACzB,OAAZ,KAAwB,UAAnF,EAA+F;AAC3F,UAAM,IAAI2B,SAAJ,CAAc,+BAAd,CAAN;AACH;;AAED,MAAI/B,OAAO,GAAG6B,IAAI,CAAC7B,OAAL,IAAgBH,QAAQ,CAACG,OAAvC;;AACA,MAAI,OAAO6B,IAAI,CAAC7B,OAAZ,KAAwB,WAAxB,IAAuC6B,IAAI,CAAC7B,OAAL,KAAiB,OAAxD,IAAmE6B,IAAI,CAAC7B,OAAL,KAAiB,YAAxF,EAAsG;AAClG,UAAM,IAAI+B,SAAJ,CAAc,mEAAd,CAAN;AACH;;AAED,MAAIC,MAAM,GAAGzD,OAAO,CAAC,SAAD,CAApB;;AACA,MAAI,OAAOsD,IAAI,CAACG,MAAZ,KAAuB,WAA3B,EAAwC;AACpC,QAAI,CAACxD,GAAG,CAACkC,IAAJ,CAASnC,OAAO,CAACgC,UAAjB,EAA6BsB,IAAI,CAACG,MAAlC,CAAL,EAAgD;AAC5C,YAAM,IAAID,SAAJ,CAAc,iCAAd,CAAN;AACH;;AACDC,IAAAA,MAAM,GAAGH,IAAI,CAACG,MAAd;AACH;;AACD,MAAI1B,SAAS,GAAG/B,OAAO,CAACgC,UAAR,CAAmByB,MAAnB,CAAhB;AAEA,MAAIhB,MAAM,GAAGnB,QAAQ,CAACmB,MAAtB;;AACA,MAAI,OAAOa,IAAI,CAACb,MAAZ,KAAuB,UAAvB,IAAqC7B,OAAO,CAAC0C,IAAI,CAACb,MAAN,CAAhD,EAA+D;AAC3DA,IAAAA,MAAM,GAAGa,IAAI,CAACb,MAAd;AACH;;AAED,SAAO;AACHlB,IAAAA,cAAc,EAAE,OAAO+B,IAAI,CAAC/B,cAAZ,KAA+B,SAA/B,GAA2C+B,IAAI,CAAC/B,cAAhD,GAAiED,QAAQ,CAACC,cADvF;AAEHC,IAAAA,SAAS,EAAE,OAAO8B,IAAI,CAAC9B,SAAZ,KAA0B,WAA1B,GAAwCF,QAAQ,CAACE,SAAjD,GAA6D,CAAC,CAAC8B,IAAI,CAAC9B,SAF5E;AAGHC,IAAAA,OAAO,EAAEA,OAHN;AAIHC,IAAAA,eAAe,EAAE,OAAO4B,IAAI,CAAC5B,eAAZ,KAAgC,SAAhC,GAA4C4B,IAAI,CAAC5B,eAAjD,GAAmEJ,QAAQ,CAACI,eAJ1F;AAKHC,IAAAA,SAAS,EAAE,OAAO2B,IAAI,CAAC3B,SAAZ,KAA0B,WAA1B,GAAwCL,QAAQ,CAACK,SAAjD,GAA6D2B,IAAI,CAAC3B,SAL1E;AAMHC,IAAAA,MAAM,EAAE,OAAO0B,IAAI,CAAC1B,MAAZ,KAAuB,SAAvB,GAAmC0B,IAAI,CAAC1B,MAAxC,GAAiDN,QAAQ,CAACM,MAN/D;AAOHC,IAAAA,OAAO,EAAE,OAAOyB,IAAI,CAACzB,OAAZ,KAAwB,UAAxB,GAAqCyB,IAAI,CAACzB,OAA1C,GAAoDP,QAAQ,CAACO,OAPnE;AAQHC,IAAAA,gBAAgB,EAAE,OAAOwB,IAAI,CAACxB,gBAAZ,KAAiC,SAAjC,GAA6CwB,IAAI,CAACxB,gBAAlD,GAAqER,QAAQ,CAACQ,gBAR7F;AASHW,IAAAA,MAAM,EAAEA,MATL;AAUHV,IAAAA,SAAS,EAAEA,SAVR;AAWHE,IAAAA,aAAa,EAAE,OAAOqB,IAAI,CAACrB,aAAZ,KAA8B,UAA9B,GAA2CqB,IAAI,CAACrB,aAAhD,GAAgEX,QAAQ,CAACW,aAXrF;AAYHG,IAAAA,SAAS,EAAE,OAAOkB,IAAI,CAAClB,SAAZ,KAA0B,SAA1B,GAAsCkB,IAAI,CAAClB,SAA3C,GAAuDd,QAAQ,CAACc,SAZxE;AAaHM,IAAAA,IAAI,EAAE,OAAOY,IAAI,CAACZ,IAAZ,KAAqB,UAArB,GAAkCY,IAAI,CAACZ,IAAvC,GAA8C,IAbjD;AAcHL,IAAAA,kBAAkB,EAAE,OAAOiB,IAAI,CAACjB,kBAAZ,KAAmC,SAAnC,GAA+CiB,IAAI,CAACjB,kBAApD,GAAyEf,QAAQ,CAACe;AAdnG,GAAP;AAgBH,CA5CD;;AA8CAqB,MAAM,CAACC,OAAP,GAAiB,UAAUpB,MAAV,EAAkBe,IAAlB,EAAwB;AACrC,MAAIX,GAAG,GAAGJ,MAAV;AACA,MAAIqB,OAAO,GAAGP,yBAAyB,CAACC,IAAD,CAAvC;AAEA,MAAIL,OAAJ;AACA,MAAIR,MAAJ;;AAEA,MAAI,OAAOmB,OAAO,CAACnB,MAAf,KAA0B,UAA9B,EAA0C;AACtCA,IAAAA,MAAM,GAAGmB,OAAO,CAACnB,MAAjB;AACAE,IAAAA,GAAG,GAAGF,MAAM,CAAC,EAAD,EAAKE,GAAL,CAAZ;AACH,GAHD,MAGO,IAAI/B,OAAO,CAACgD,OAAO,CAACnB,MAAT,CAAX,EAA6B;AAChCA,IAAAA,MAAM,GAAGmB,OAAO,CAACnB,MAAjB;AACAQ,IAAAA,OAAO,GAAGR,MAAV;AACH;;AAED,MAAIS,IAAI,GAAG,EAAX;;AAEA,MAAI,OAAOP,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AACzC,WAAO,EAAP;AACH;;AAED,MAAIkB,WAAJ;;AACA,MAAIP,IAAI,IAAIA,IAAI,CAACO,WAAL,IAAoBxD,qBAAhC,EAAuD;AACnDwD,IAAAA,WAAW,GAAGP,IAAI,CAACO,WAAnB;AACH,GAFD,MAEO,IAAIP,IAAI,IAAI,aAAaA,IAAzB,EAA+B;AAClCO,IAAAA,WAAW,GAAGP,IAAI,CAAC7C,OAAL,GAAe,SAAf,GAA2B,QAAzC;AACH,GAFM,MAEA;AACHoD,IAAAA,WAAW,GAAG,SAAd;AACH;;AAED,MAAIrB,mBAAmB,GAAGnC,qBAAqB,CAACwD,WAAD,CAA/C;;AAEA,MAAI,CAACZ,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG/C,MAAM,CAACgD,IAAP,CAAYP,GAAZ,CAAV;AACH;;AAED,MAAIiB,OAAO,CAAClB,IAAZ,EAAkB;AACdO,IAAAA,OAAO,CAACP,IAAR,CAAakB,OAAO,CAAClB,IAArB;AACH;;AAED,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACrC,QAAIzC,GAAG,GAAGuC,OAAO,CAACE,CAAD,CAAjB;;AAEA,QAAIS,OAAO,CAACxB,SAAR,IAAqBO,GAAG,CAACjC,GAAD,CAAH,KAAa,IAAtC,EAA4C;AACxC;AACH;;AACDK,IAAAA,WAAW,CAACmC,IAAD,EAAOZ,SAAS,CACvBK,GAAG,CAACjC,GAAD,CADoB,EAEvBA,GAFuB,EAGvB8B,mBAHuB,EAIvBoB,OAAO,CAACvB,kBAJe,EAKvBuB,OAAO,CAACxB,SALe,EAMvBwB,OAAO,CAAChC,MAAR,GAAiBgC,OAAO,CAAC/B,OAAzB,GAAmC,IANZ,EAOvB+B,OAAO,CAACnB,MAPe,EAQvBmB,OAAO,CAAClB,IARe,EASvBkB,OAAO,CAACpC,SATe,EAUvBoC,OAAO,CAAC3B,aAVe,EAWvB2B,OAAO,CAAC7B,SAXe,EAYvB6B,OAAO,CAAC9B,gBAZe,EAavB8B,OAAO,CAACnC,OAbe,CAAhB,CAAX;AAeH;;AAED,MAAIqC,MAAM,GAAGZ,IAAI,CAACN,IAAL,CAAUgB,OAAO,CAACjC,SAAlB,CAAb;AACA,MAAIpB,MAAM,GAAGqD,OAAO,CAACrC,cAAR,KAA2B,IAA3B,GAAkC,GAAlC,GAAwC,EAArD;;AAEA,MAAIqC,OAAO,CAAClC,eAAZ,EAA6B;AACzB,QAAIkC,OAAO,CAACnC,OAAR,KAAoB,YAAxB,EAAsC;AAClC;AACAlB,MAAAA,MAAM,IAAI,sBAAV;AACH,KAHD,MAGO;AACH;AACAA,MAAAA,MAAM,IAAI,iBAAV;AACH;AACJ;;AAED,SAAOuD,MAAM,CAACV,MAAP,GAAgB,CAAhB,GAAoB7C,MAAM,GAAGuD,MAA7B,GAAsC,EAA7C;AACH,CA7ED",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar formats = require('./formats');\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nvar arrayPrefixGenerators = {\r\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\r\n        return prefix + '[]';\r\n    },\r\n    comma: 'comma',\r\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\r\n        return prefix + '[' + key + ']';\r\n    },\r\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\r\n        return prefix;\r\n    }\r\n};\r\n\r\nvar isArray = Array.isArray;\r\nvar push = Array.prototype.push;\r\nvar pushToArray = function (arr, valueOrArray) {\r\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\r\n};\r\n\r\nvar toISO = Date.prototype.toISOString;\r\n\r\nvar defaults = {\r\n    addQueryPrefix: false,\r\n    allowDots: false,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    delimiter: '&',\r\n    encode: true,\r\n    encoder: utils.encode,\r\n    encodeValuesOnly: false,\r\n    formatter: formats.formatters[formats['default']],\r\n    // deprecated\r\n    indices: false,\r\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\r\n        return toISO.call(date);\r\n    },\r\n    skipNulls: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar stringify = function stringify( // eslint-disable-line func-name-matching\r\n    object,\r\n    prefix,\r\n    generateArrayPrefix,\r\n    strictNullHandling,\r\n    skipNulls,\r\n    encoder,\r\n    filter,\r\n    sort,\r\n    allowDots,\r\n    serializeDate,\r\n    formatter,\r\n    encodeValuesOnly,\r\n    charset\r\n) {\r\n    var obj = object;\r\n    if (typeof filter === 'function') {\r\n        obj = filter(prefix, obj);\r\n    } else if (obj instanceof Date) {\r\n        obj = serializeDate(obj);\r\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        obj = obj.join(',');\r\n    }\r\n\r\n    if (obj === null) {\r\n        if (strictNullHandling) {\r\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\r\n        }\r\n\r\n        obj = '';\r\n    }\r\n\r\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\r\n        if (encoder) {\r\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\r\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\r\n        }\r\n        return [formatter(prefix) + '=' + formatter(String(obj))];\r\n    }\r\n\r\n    var values = [];\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return values;\r\n    }\r\n\r\n    var objKeys;\r\n    if (isArray(filter)) {\r\n        objKeys = filter;\r\n    } else {\r\n        var keys = Object.keys(obj);\r\n        objKeys = sort ? keys.sort(sort) : keys;\r\n    }\r\n\r\n    for (var i = 0; i < objKeys.length; ++i) {\r\n        var key = objKeys[i];\r\n\r\n        if (skipNulls && obj[key] === null) {\r\n            continue;\r\n        }\r\n\r\n        if (isArray(obj)) {\r\n            pushToArray(values, stringify(\r\n                obj[key],\r\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\r\n                generateArrayPrefix,\r\n                strictNullHandling,\r\n                skipNulls,\r\n                encoder,\r\n                filter,\r\n                sort,\r\n                allowDots,\r\n                serializeDate,\r\n                formatter,\r\n                encodeValuesOnly,\r\n                charset\r\n            ));\r\n        } else {\r\n            pushToArray(values, stringify(\r\n                obj[key],\r\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\r\n                generateArrayPrefix,\r\n                strictNullHandling,\r\n                skipNulls,\r\n                encoder,\r\n                filter,\r\n                sort,\r\n                allowDots,\r\n                serializeDate,\r\n                formatter,\r\n                encodeValuesOnly,\r\n                charset\r\n            ));\r\n        }\r\n    }\r\n\r\n    return values;\r\n};\r\n\r\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\r\n        throw new TypeError('Encoder has to be a function.');\r\n    }\r\n\r\n    var charset = opts.charset || defaults.charset;\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n\r\n    var format = formats['default'];\r\n    if (typeof opts.format !== 'undefined') {\r\n        if (!has.call(formats.formatters, opts.format)) {\r\n            throw new TypeError('Unknown format option provided.');\r\n        }\r\n        format = opts.format;\r\n    }\r\n    var formatter = formats.formatters[format];\r\n\r\n    var filter = defaults.filter;\r\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\r\n        filter = opts.filter;\r\n    }\r\n\r\n    return {\r\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\r\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\r\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\r\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\r\n        filter: filter,\r\n        formatter: formatter,\r\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\r\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\r\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (object, opts) {\r\n    var obj = object;\r\n    var options = normalizeStringifyOptions(opts);\r\n\r\n    var objKeys;\r\n    var filter;\r\n\r\n    if (typeof options.filter === 'function') {\r\n        filter = options.filter;\r\n        obj = filter('', obj);\r\n    } else if (isArray(options.filter)) {\r\n        filter = options.filter;\r\n        objKeys = filter;\r\n    }\r\n\r\n    var keys = [];\r\n\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return '';\r\n    }\r\n\r\n    var arrayFormat;\r\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\r\n        arrayFormat = opts.arrayFormat;\r\n    } else if (opts && 'indices' in opts) {\r\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\r\n    } else {\r\n        arrayFormat = 'indices';\r\n    }\r\n\r\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\r\n\r\n    if (!objKeys) {\r\n        objKeys = Object.keys(obj);\r\n    }\r\n\r\n    if (options.sort) {\r\n        objKeys.sort(options.sort);\r\n    }\r\n\r\n    for (var i = 0; i < objKeys.length; ++i) {\r\n        var key = objKeys[i];\r\n\r\n        if (options.skipNulls && obj[key] === null) {\r\n            continue;\r\n        }\r\n        pushToArray(keys, stringify(\r\n            obj[key],\r\n            key,\r\n            generateArrayPrefix,\r\n            options.strictNullHandling,\r\n            options.skipNulls,\r\n            options.encode ? options.encoder : null,\r\n            options.filter,\r\n            options.sort,\r\n            options.allowDots,\r\n            options.serializeDate,\r\n            options.formatter,\r\n            options.encodeValuesOnly,\r\n            options.charset\r\n        ));\r\n    }\r\n\r\n    var joined = keys.join(options.delimiter);\r\n    var prefix = options.addQueryPrefix === true ? '?' : '';\r\n\r\n    if (options.charsetSentinel) {\r\n        if (options.charset === 'iso-8859-1') {\r\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\r\n            prefix += 'utf8=%26%2310003%3B&';\r\n        } else {\r\n            // encodeURIComponent('✓')\r\n            prefix += 'utf8=%E2%9C%93&';\r\n        }\r\n    }\r\n\r\n    return joined.length > 0 ? prefix + joined : '';\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211679
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\utils.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\utils.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = function () {\n  var array = [];\n\n  for (var i = 0; i < 256; ++i) {\n    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n  }\n\n  return array;\n}();\n\nvar compactQueue = function compactQueue(queue) {\n  while (queue.length > 1) {\n    var item = queue.pop();\n    var obj = item.obj[item.prop];\n\n    if (isArray(obj)) {\n      var compacted = [];\n\n      for (var j = 0; j < obj.length; ++j) {\n        if (typeof obj[j] !== 'undefined') {\n          compacted.push(obj[j]);\n        }\n      }\n\n      item.obj[item.prop] = compacted;\n    }\n  }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n  var obj = options && options.plainObjects ? Object.create(null) : {};\n\n  for (var i = 0; i < source.length; ++i) {\n    if (typeof source[i] !== 'undefined') {\n      obj[i] = source[i];\n    }\n  }\n\n  return obj;\n};\n\nvar merge = function merge(target, source, options) {\n  if (!source) {\n    return target;\n  }\n\n  if (typeof source !== 'object') {\n    if (isArray(target)) {\n      target.push(source);\n    } else if (target && typeof target === 'object') {\n      if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {\n        target[source] = true;\n      }\n    } else {\n      return [target, source];\n    }\n\n    return target;\n  }\n\n  if (!target || typeof target !== 'object') {\n    return [target].concat(source);\n  }\n\n  var mergeTarget = target;\n\n  if (isArray(target) && !isArray(source)) {\n    mergeTarget = arrayToObject(target, options);\n  }\n\n  if (isArray(target) && isArray(source)) {\n    source.forEach(function (item, i) {\n      if (has.call(target, i)) {\n        var targetItem = target[i];\n\n        if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n          target[i] = merge(targetItem, item, options);\n        } else {\n          target.push(item);\n        }\n      } else {\n        target[i] = item;\n      }\n    });\n    return target;\n  }\n\n  return Object.keys(source).reduce(function (acc, key) {\n    var value = source[key];\n\n    if (has.call(acc, key)) {\n      acc[key] = merge(acc[key], value, options);\n    } else {\n      acc[key] = value;\n    }\n\n    return acc;\n  }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n  return Object.keys(source).reduce(function (acc, key) {\n    acc[key] = source[key];\n    return acc;\n  }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n  var strWithoutPlus = str.replace(/\\+/g, ' ');\n\n  if (charset === 'iso-8859-1') {\n    // unescape never throws, no try...catch needed:\n    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n  } // utf-8\n\n\n  try {\n    return decodeURIComponent(strWithoutPlus);\n  } catch (e) {\n    return strWithoutPlus;\n  }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n  // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) {\n    return str;\n  }\n\n  var string = typeof str === 'string' ? str : String(str);\n\n  if (charset === 'iso-8859-1') {\n    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n      return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n    });\n  }\n\n  var out = '';\n\n  for (var i = 0; i < string.length; ++i) {\n    var c = string.charCodeAt(i);\n\n    if (c === 0x2D // -\n    || c === 0x2E // .\n    || c === 0x5F // _\n    || c === 0x7E // ~\n    || c >= 0x30 && c <= 0x39 // 0-9\n    || c >= 0x41 && c <= 0x5A // a-z\n    || c >= 0x61 && c <= 0x7A // A-Z\n    ) {\n      out += string.charAt(i);\n      continue;\n    }\n\n    if (c < 0x80) {\n      out = out + hexTable[c];\n      continue;\n    }\n\n    if (c < 0x800) {\n      out = out + (hexTable[0xC0 | c >> 6] + hexTable[0x80 | c & 0x3F]);\n      continue;\n    }\n\n    if (c < 0xD800 || c >= 0xE000) {\n      out = out + (hexTable[0xE0 | c >> 12] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F]);\n      continue;\n    }\n\n    i += 1;\n    c = 0x10000 + ((c & 0x3FF) << 10 | string.charCodeAt(i) & 0x3FF);\n    out += hexTable[0xF0 | c >> 18] + hexTable[0x80 | c >> 12 & 0x3F] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F];\n  }\n\n  return out;\n};\n\nvar compact = function compact(value) {\n  var queue = [{\n    obj: {\n      o: value\n    },\n    prop: 'o'\n  }];\n  var refs = [];\n\n  for (var i = 0; i < queue.length; ++i) {\n    var item = queue[i];\n    var obj = item.obj[item.prop];\n    var keys = Object.keys(obj);\n\n    for (var j = 0; j < keys.length; ++j) {\n      var key = keys[j];\n      var val = obj[key];\n\n      if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n        queue.push({\n          obj: obj,\n          prop: key\n        });\n        refs.push(val);\n      }\n    }\n  }\n\n  compactQueue(queue);\n  return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n  return [].concat(a, b);\n};\n\nmodule.exports = {\n  arrayToObject: arrayToObject,\n  assign: assign,\n  combine: combine,\n  compact: compact,\n  decode: decode,\n  encode: encode,\n  isBuffer: isBuffer,\n  isRegExp: isRegExp,\n  merge: merge\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImhhcyIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiaXNBcnJheSIsIkFycmF5IiwiaGV4VGFibGUiLCJhcnJheSIsImkiLCJwdXNoIiwidG9TdHJpbmciLCJ0b1VwcGVyQ2FzZSIsImNvbXBhY3RRdWV1ZSIsInF1ZXVlIiwibGVuZ3RoIiwiaXRlbSIsInBvcCIsIm9iaiIsInByb3AiLCJjb21wYWN0ZWQiLCJqIiwiYXJyYXlUb09iamVjdCIsInNvdXJjZSIsIm9wdGlvbnMiLCJwbGFpbk9iamVjdHMiLCJjcmVhdGUiLCJtZXJnZSIsInRhcmdldCIsImFsbG93UHJvdG90eXBlcyIsImNhbGwiLCJjb25jYXQiLCJtZXJnZVRhcmdldCIsImZvckVhY2giLCJ0YXJnZXRJdGVtIiwia2V5cyIsInJlZHVjZSIsImFjYyIsImtleSIsInZhbHVlIiwiYXNzaWduIiwiYXNzaWduU2luZ2xlU291cmNlIiwiZGVjb2RlIiwic3RyIiwiZGVjb2RlciIsImNoYXJzZXQiLCJzdHJXaXRob3V0UGx1cyIsInJlcGxhY2UiLCJ1bmVzY2FwZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImUiLCJlbmNvZGUiLCJkZWZhdWx0RW5jb2RlciIsInN0cmluZyIsIlN0cmluZyIsImVzY2FwZSIsIiQwIiwicGFyc2VJbnQiLCJzbGljZSIsIm91dCIsImMiLCJjaGFyQ29kZUF0IiwiY2hhckF0IiwiY29tcGFjdCIsIm8iLCJyZWZzIiwidmFsIiwiaW5kZXhPZiIsImlzUmVnRXhwIiwiaXNCdWZmZXIiLCJjb25zdHJ1Y3RvciIsImNvbWJpbmUiLCJhIiwiYiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLEdBQUcsR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxjQUEzQjtBQUNBLElBQUlDLE9BQU8sR0FBR0MsS0FBSyxDQUFDRCxPQUFwQjs7QUFFQSxJQUFJRSxRQUFRLEdBQUksWUFB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YixDQUFQO0FBQ0gsQ0FGRDs7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JyRCxFQUFBQSxhQUFhLEVBQUVBLGFBREY7QUFFYmtCLEVBQUFBLE1BQU0sRUFBRUEsTUFGSztBQUdiK0IsRUFBQUEsT0FBTyxFQUFFQSxPQUhJO0FBSWJSLEVBQUFBLE9BQU8sRUFBRUEsT0FKSTtBQUtickIsRUFBQUEsTUFBTSxFQUFFQSxNQUxLO0FBTWJTLEVBQUFBLE1BQU0sRUFBRUEsTUFOSztBQU9ia0IsRUFBQUEsUUFBUSxFQUFFQSxRQVBHO0FBUWJELEVBQUFBLFFBQVEsRUFBRUEsUUFSRztBQVNiekMsRUFBQUEsS0FBSyxFQUFFQTtBQVRNLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxxc1xcbGliXFwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xyXG5cclxudmFyIGhleFRhYmxlID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhcnJheSA9IFtdO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xyXG4gICAgICAgIGFycmF5LnB1c2goJyUnICsgKChpIDwgMTYgPyAnMCcgOiAnJykgKyBpLnRvU3RyaW5nKDE2KSkudG9VcHBlckNhc2UoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGFycmF5O1xyXG59KCkpO1xyXG5cclxudmFyIGNvbXBhY3RRdWV1ZSA9IGZ1bmN0aW9uIGNvbXBhY3RRdWV1ZShxdWV1ZSkge1xyXG4gICAgd2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICB2YXIgaXRlbSA9IHF1ZXVlLnBvcCgpO1xyXG4gICAgICAgIHZhciBvYmogPSBpdGVtLm9ialtpdGVtLnByb3BdO1xyXG5cclxuICAgICAgICBpZiAoaXNBcnJheShvYmopKSB7XHJcbiAgICAgICAgICAgIHZhciBjb21wYWN0ZWQgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgb2JqLmxlbmd0aDsgKytqKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9ialtqXSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb21wYWN0ZWQucHVzaChvYmpbal0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpdGVtLm9ialtpdGVtLnByb3BdID0gY29tcGFjdGVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbnZhciBhcnJheVRvT2JqZWN0ID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdChzb3VyY2UsIG9wdGlvbnMpIHtcclxuICAgIHZhciBvYmogPSBvcHRpb25zICYmIG9wdGlvbnMucGxhaW5PYmplY3RzID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9O1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHNvdXJjZVtpXSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgb2JqW2ldID0gc291cmNlW2ldO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gb2JqO1xyXG59O1xyXG5cclxudmFyIG1lcmdlID0gZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcclxuICAgIGlmICghc291cmNlKSB7XHJcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodHlwZW9mIHNvdXJjZSAhPT0gJ29iamVjdCcpIHtcclxuICAgICAgICBpZiAoaXNBcnJheSh0YXJnZXQpKSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5wdXNoKHNvdXJjZSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0YXJnZXQgJiYgdHlwZW9mIHRhcmdldCA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICAgICAgaWYgKChvcHRpb25zICYmIChvcHRpb25zLnBsYWluT2JqZWN0cyB8fCBvcHRpb25zLmFsbG93UHJvdG90eXBlcykpIHx8ICFoYXMuY2FsbChPYmplY3QucHJvdG90eXBlLCBzb3VyY2UpKSB7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXRbc291cmNlXSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gW3RhcmdldCwgc291cmNlXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0YXJnZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCF0YXJnZXQgfHwgdHlwZW9mIHRhcmdldCAhPT0gJ29iamVjdCcpIHtcclxuICAgICAgICByZXR1cm4gW3RhcmdldF0uY29uY2F0KHNvdXJjZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIG1lcmdlVGFyZ2V0ID0gdGFyZ2V0O1xyXG4gICAgaWYgKGlzQXJyYXkodGFyZ2V0KSAmJiAhaXNBcnJheShzb3VyY2UpKSB7XHJcbiAgICAgICAgbWVyZ2VUYXJnZXQgPSBhcnJheVRvT2JqZWN0KHRhcmdldCwgb3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlzQXJyYXkodGFyZ2V0KSAmJiBpc0FycmF5KHNvdXJjZSkpIHtcclxuICAgICAgICBzb3VyY2UuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaSkge1xyXG4gICAgICAgICAgICBpZiAoaGFzLmNhbGwodGFyZ2V0LCBpKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldEl0ZW0gPSB0YXJnZXRbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0SXRlbSAmJiB0eXBlb2YgdGFyZ2V0SXRlbSA9PT0gJ29iamVjdCcgJiYgaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRbaV0gPSBtZXJnZSh0YXJnZXRJdGVtLCBpdGVtLCBvcHRpb25zKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnB1c2goaXRlbSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXRbaV0gPSBpdGVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc291cmNlKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XHJcbiAgICAgICAgdmFyIHZhbHVlID0gc291cmNlW2tleV07XHJcblxyXG4gICAgICAgIGlmIChoYXMuY2FsbChhY2MsIGtleSkpIHtcclxuICAgICAgICAgICAgYWNjW2tleV0gPSBtZXJnZShhY2Nba2V5XSwgdmFsdWUsIG9wdGlvbnMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGFjY1trZXldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhY2M7XHJcbiAgICB9LCBtZXJnZVRhcmdldCk7XHJcbn07XHJcblxyXG52YXIgYXNzaWduID0gZnVuY3Rpb24gYXNzaWduU2luZ2xlU291cmNlKHRhcmdldCwgc291cmNlKSB7XHJcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc291cmNlKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XHJcbiAgICAgICAgYWNjW2tleV0gPSBzb3VyY2Vba2V5XTtcclxuICAgICAgICByZXR1cm4gYWNjO1xyXG4gICAgfSwgdGFyZ2V0KTtcclxufTtcclxuXHJcbnZhciBkZWNvZGUgPSBmdW5jdGlvbiAoc3RyLCBkZWNvZGVyLCBjaGFyc2V0KSB7XHJcbiAgICB2YXIgc3RyV2l0aG91dFBsdXMgPSBzdHIucmVwbGFjZSgvXFwrL2csICcgJyk7XHJcbiAgICBpZiAoY2hhcnNldCA9PT0gJ2lzby04ODU5LTEnKSB7XHJcbiAgICAgICAgLy8gdW5lc2NhcGUgbmV2ZXIgdGhyb3dzLCBubyB0cnkuLi5jYXRjaCBuZWVkZWQ6XHJcbiAgICAgICAgcmV0dXJuIHN0cldpdGhvdXRQbHVzLnJlcGxhY2UoLyVbMC05YS1mXXsyfS9naSwgdW5lc2NhcGUpO1xyXG4gICAgfVxyXG4gICAgLy8gdXRmLThcclxuICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChzdHJXaXRob3V0UGx1cyk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0cldpdGhvdXRQbHVzO1xyXG4gICAgfVxyXG59O1xyXG5cclxudmFyIGVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShzdHIsIGRlZmF1bHRFbmNvZGVyLCBjaGFyc2V0KSB7XHJcbiAgICAvLyBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgd3JpdHRlbiBieSBCcmlhbiBXaGl0ZSAobXNjZGV4KSBmb3IgdGhlIGlvLmpzIGNvcmUgcXVlcnlzdHJpbmcgbGlicmFyeS5cclxuICAgIC8vIEl0IGhhcyBiZWVuIGFkYXB0ZWQgaGVyZSBmb3Igc3RyaWN0ZXIgYWRoZXJlbmNlIHRvIFJGQyAzOTg2XHJcbiAgICBpZiAoc3RyLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiBzdHI7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHN0cmluZyA9IHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gc3RyIDogU3RyaW5nKHN0cik7XHJcblxyXG4gICAgaWYgKGNoYXJzZXQgPT09ICdpc28tODg1OS0xJykge1xyXG4gICAgICAgIHJldHVybiBlc2NhcGUoc3RyaW5nKS5yZXBsYWNlKC8ldVswLTlhLWZdezR9L2dpLCBmdW5jdGlvbiAoJDApIHtcclxuICAgICAgICAgICAgcmV0dXJuICclMjYlMjMnICsgcGFyc2VJbnQoJDAuc2xpY2UoMiksIDE2KSArICclM0InO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBvdXQgPSAnJztcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgICAgdmFyIGMgPSBzdHJpbmcuY2hhckNvZGVBdChpKTtcclxuXHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICBjID09PSAweDJEIC8vIC1cclxuICAgICAgICAgICAgfHwgYyA9PT0gMHgyRSAvLyAuXHJcbiAgICAgICAgICAgIHx8IGMgPT09IDB4NUYgLy8gX1xyXG4gICAgICAgICAgICB8fCBjID09PSAweDdFIC8vIH5cclxuICAgICAgICAgICAgfHwgKGMgPj0gMHgzMCAmJiBjIDw9IDB4MzkpIC8vIDAtOVxyXG4gICAgICAgICAgICB8fCAoYyA+PSAweDQxICYmIGMgPD0gMHg1QSkgLy8gYS16XHJcbiAgICAgICAgICAgIHx8IChjID49IDB4NjEgJiYgYyA8PSAweDdBKSAvLyBBLVpcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgb3V0ICs9IHN0cmluZy5jaGFyQXQoaSk7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGMgPCAweDgwKSB7XHJcbiAgICAgICAgICAgIG91dCA9IG91dCArIGhleFRhYmxlW2NdO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChjIDwgMHg4MDApIHtcclxuICAgICAgICAgICAgb3V0ID0gb3V0ICsgKGhleFRhYmxlWzB4QzAgfCAoYyA+PiA2KV0gKyBoZXhUYWJsZVsweDgwIHwgKGMgJiAweDNGKV0pO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChjIDwgMHhEODAwIHx8IGMgPj0gMHhFMDAwKSB7XHJcbiAgICAgICAgICAgIG91dCA9IG91dCArIChoZXhUYWJsZVsweEUwIHwgKGMgPj4gMTIpXSArIGhleFRhYmxlWzB4ODAgfCAoKGMgPj4gNikgJiAweDNGKV0gKyBoZXhUYWJsZVsweDgwIHwgKGMgJiAweDNGKV0pO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGkgKz0gMTtcclxuICAgICAgICBjID0gMHgxMDAwMCArICgoKGMgJiAweDNGRikgPDwgMTApIHwgKHN0cmluZy5jaGFyQ29kZUF0KGkpICYgMHgzRkYpKTtcclxuICAgICAgICBvdXQgKz0gaGV4VGFibGVbMHhGMCB8IChjID4+IDE4KV1cclxuICAgICAgICAgICAgKyBoZXhUYWJsZVsweDgwIHwgKChjID4+IDEyKSAmIDB4M0YpXVxyXG4gICAgICAgICAgICArIGhleFRhYmxlWzB4ODAgfCAoKGMgPj4gNikgJiAweDNGKV1cclxuICAgICAgICAgICAgKyBoZXhUYWJsZVsweDgwIHwgKGMgJiAweDNGKV07XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG91dDtcclxufTtcclxuXHJcbnZhciBjb21wYWN0ID0gZnVuY3Rpb24gY29tcGFjdCh2YWx1ZSkge1xyXG4gICAgdmFyIHF1ZXVlID0gW3sgb2JqOiB7IG86IHZhbHVlIH0sIHByb3A6ICdvJyB9XTtcclxuICAgIHZhciByZWZzID0gW107XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBxdWV1ZS5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgIHZhciBpdGVtID0gcXVldWVbaV07XHJcbiAgICAgICAgdmFyIG9iaiA9IGl0ZW0ub2JqW2l0ZW0ucHJvcF07XHJcblxyXG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcclxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGtleXMubGVuZ3RoOyArK2opIHtcclxuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbal07XHJcbiAgICAgICAgICAgIHZhciB2YWwgPSBvYmpba2V5XTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIHZhbCAhPT0gbnVsbCAmJiByZWZzLmluZGV4T2YodmFsKSA9PT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2goeyBvYmo6IG9iaiwgcHJvcDoga2V5IH0pO1xyXG4gICAgICAgICAgICAgICAgcmVmcy5wdXNoKHZhbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29tcGFjdFF1ZXVlKHF1ZXVlKTtcclxuXHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn07XHJcblxyXG52YXIgaXNSZWdFeHAgPSBmdW5jdGlvbiBpc1JlZ0V4cChvYmopIHtcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XHJcbn07XHJcblxyXG52YXIgaXNCdWZmZXIgPSBmdW5jdGlvbiBpc0J1ZmZlcihvYmopIHtcclxuICAgIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAhIShvYmouY29uc3RydWN0b3IgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyICYmIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlcihvYmopKTtcclxufTtcclxuXHJcbnZhciBjb21iaW5lID0gZnVuY3Rpb24gY29tYmluZShhLCBiKSB7XHJcbiAgICByZXR1cm4gW10uY29uY2F0KGEsIGIpO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBhcnJheVRvT2JqZWN0OiBhcnJheVRvT2JqZWN0LFxyXG4gICAgYXNzaWduOiBhc3NpZ24sXHJcbiAgICBjb21iaW5lOiBjb21iaW5lLFxyXG4gICAgY29tcGFjdDogY29tcGFjdCxcclxuICAgIGRlY29kZTogZGVjb2RlLFxyXG4gICAgZW5jb2RlOiBlbmNvZGUsXHJcbiAgICBpc0J1ZmZlcjogaXNCdWZmZXIsXHJcbiAgICBpc1JlZ0V4cDogaXNSZWdFeHAsXHJcbiAgICBtZXJnZTogbWVyZ2VcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "has",
        "Object",
        "prototype",
        "hasOwnProperty",
        "isArray",
        "Array",
        "hexTable",
        "array",
        "i",
        "push",
        "toString",
        "toUpperCase",
        "compactQueue",
        "queue",
        "length",
        "item",
        "pop",
        "obj",
        "prop",
        "compacted",
        "j",
        "arrayToObject",
        "source",
        "options",
        "plainObjects",
        "create",
        "merge",
        "target",
        "allowPrototypes",
        "call",
        "concat",
        "mergeTarget",
        "forEach",
        "targetItem",
        "keys",
        "reduce",
        "acc",
        "key",
        "value",
        "assign",
        "assignSingleSource",
        "decode",
        "str",
        "decoder",
        "charset",
        "strWithoutPlus",
        "replace",
        "unescape",
        "decodeURIComponent",
        "e",
        "encode",
        "defaultEncoder",
        "string",
        "String",
        "escape",
        "$0",
        "parseInt",
        "slice",
        "out",
        "c",
        "charCodeAt",
        "charAt",
        "compact",
        "o",
        "refs",
        "val",
        "indexOf",
        "isRegExp",
        "isBuffer",
        "constructor",
        "combine",
        "a",
        "b",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar hexTable = (function () {\r\n    var array = [];\r\n    for (var i = 0; i < 256; ++i) {\r\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\r\n    }\r\n\r\n    return array;\r\n}());\r\n\r\nvar compactQueue = function compactQueue(queue) {\r\n    while (queue.length > 1) {\r\n        var item = queue.pop();\r\n        var obj = item.obj[item.prop];\r\n\r\n        if (isArray(obj)) {\r\n            var compacted = [];\r\n\r\n            for (var j = 0; j < obj.length; ++j) {\r\n                if (typeof obj[j] !== 'undefined') {\r\n                    compacted.push(obj[j]);\r\n                }\r\n            }\r\n\r\n            item.obj[item.prop] = compacted;\r\n        }\r\n    }\r\n};\r\n\r\nvar arrayToObject = function arrayToObject(source, options) {\r\n    var obj = options && options.plainObjects ? Object.create(null) : {};\r\n    for (var i = 0; i < source.length; ++i) {\r\n        if (typeof source[i] !== 'undefined') {\r\n            obj[i] = source[i];\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar merge = function merge(target, source, options) {\r\n    if (!source) {\r\n        return target;\r\n    }\r\n\r\n    if (typeof source !== 'object') {\r\n        if (isArray(target)) {\r\n            target.push(source);\r\n        } else if (target && typeof target === 'object') {\r\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\r\n                target[source] = true;\r\n            }\r\n        } else {\r\n            return [target, source];\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    if (!target || typeof target !== 'object') {\r\n        return [target].concat(source);\r\n    }\r\n\r\n    var mergeTarget = target;\r\n    if (isArray(target) && !isArray(source)) {\r\n        mergeTarget = arrayToObject(target, options);\r\n    }\r\n\r\n    if (isArray(target) && isArray(source)) {\r\n        source.forEach(function (item, i) {\r\n            if (has.call(target, i)) {\r\n                var targetItem = target[i];\r\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\r\n                    target[i] = merge(targetItem, item, options);\r\n                } else {\r\n                    target.push(item);\r\n                }\r\n            } else {\r\n                target[i] = item;\r\n            }\r\n        });\r\n        return target;\r\n    }\r\n\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        var value = source[key];\r\n\r\n        if (has.call(acc, key)) {\r\n            acc[key] = merge(acc[key], value, options);\r\n        } else {\r\n            acc[key] = value;\r\n        }\r\n        return acc;\r\n    }, mergeTarget);\r\n};\r\n\r\nvar assign = function assignSingleSource(target, source) {\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        acc[key] = source[key];\r\n        return acc;\r\n    }, target);\r\n};\r\n\r\nvar decode = function (str, decoder, charset) {\r\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\r\n    if (charset === 'iso-8859-1') {\r\n        // unescape never throws, no try...catch needed:\r\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\r\n    }\r\n    // utf-8\r\n    try {\r\n        return decodeURIComponent(strWithoutPlus);\r\n    } catch (e) {\r\n        return strWithoutPlus;\r\n    }\r\n};\r\n\r\nvar encode = function encode(str, defaultEncoder, charset) {\r\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\r\n    // It has been adapted here for stricter adherence to RFC 3986\r\n    if (str.length === 0) {\r\n        return str;\r\n    }\r\n\r\n    var string = typeof str === 'string' ? str : String(str);\r\n\r\n    if (charset === 'iso-8859-1') {\r\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\r\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\r\n        });\r\n    }\r\n\r\n    var out = '';\r\n    for (var i = 0; i < string.length; ++i) {\r\n        var c = string.charCodeAt(i);\r\n\r\n        if (\r\n            c === 0x2D // -\r\n            || c === 0x2E // .\r\n            || c === 0x5F // _\r\n            || c === 0x7E // ~\r\n            || (c >= 0x30 && c <= 0x39) // 0-9\r\n            || (c >= 0x41 && c <= 0x5A) // a-z\r\n            || (c >= 0x61 && c <= 0x7A) // A-Z\r\n        ) {\r\n            out += string.charAt(i);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x80) {\r\n            out = out + hexTable[c];\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x800) {\r\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0xD800 || c >= 0xE000) {\r\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        i += 1;\r\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\r\n        out += hexTable[0xF0 | (c >> 18)]\r\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\r\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\r\n            + hexTable[0x80 | (c & 0x3F)];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar compact = function compact(value) {\r\n    var queue = [{ obj: { o: value }, prop: 'o' }];\r\n    var refs = [];\r\n\r\n    for (var i = 0; i < queue.length; ++i) {\r\n        var item = queue[i];\r\n        var obj = item.obj[item.prop];\r\n\r\n        var keys = Object.keys(obj);\r\n        for (var j = 0; j < keys.length; ++j) {\r\n            var key = keys[j];\r\n            var val = obj[key];\r\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\r\n                queue.push({ obj: obj, prop: key });\r\n                refs.push(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    compactQueue(queue);\r\n\r\n    return value;\r\n};\r\n\r\nvar isRegExp = function isRegExp(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\r\n};\r\n\r\nvar isBuffer = function isBuffer(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return false;\r\n    }\r\n\r\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\r\n};\r\n\r\nvar combine = function combine(a, b) {\r\n    return [].concat(a, b);\r\n};\r\n\r\nmodule.exports = {\r\n    arrayToObject: arrayToObject,\r\n    assign: assign,\r\n    combine: combine,\r\n    compact: compact,\r\n    decode: decode,\r\n    encode: encode,\r\n    isBuffer: isBuffer,\r\n    isRegExp: isRegExp,\r\n    merge: merge\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211679
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\formats.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\formats.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\formats.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\formats.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
        "sourceFileName": "formats.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\nmodule.exports = {\n  'default': 'RFC3986',\n  formatters: {\n    RFC1738: function (value) {\n      return replace.call(value, percentTwenties, '+');\n    },\n    RFC3986: function (value) {\n      return value;\n    }\n  },\n  RFC1738: 'RFC1738',\n  RFC3986: 'RFC3986'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm1hdHMuanMiXSwibmFtZXMiOlsicmVwbGFjZSIsIlN0cmluZyIsInByb3RvdHlwZSIsInBlcmNlbnRUd2VudGllcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJmb3JtYXR0ZXJzIiwiUkZDMTczOCIsInZhbHVlIiwiY2FsbCIsIlJGQzM5ODYiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLE9BQU8sR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCRixPQUEvQjtBQUNBLElBQUlHLGVBQWUsR0FBRyxNQUF0QjtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYixhQUFXLFNBREU7QUFFYkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLE9BQU8sRUFBRSxVQUFVQyxLQUFWLEVBQWlCO0FBQ3RCLGFBQU9SLE9BQU8sQ0FBQ1MsSUFBUixDQUFhRCxLQUFiLEVBQW9CTCxlQUFwQixFQUFxQyxHQUFyQyxDQUFQO0FBQ0gsS0FITztBQUlSTyxJQUFBQSxPQUFPLEVBQUUsVUFBVUYsS0FBVixFQUFpQjtBQUN0QixhQUFPQSxLQUFQO0FBQ0g7QUFOTyxHQUZDO0FBVWJELEVBQUFBLE9BQU8sRUFBRSxTQVZJO0FBV2JHLEVBQUFBLE9BQU8sRUFBRTtBQVhJLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxxc1xcbGliXFwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgcmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTtcclxudmFyIHBlcmNlbnRUd2VudGllcyA9IC8lMjAvZztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgJ2RlZmF1bHQnOiAnUkZDMzk4NicsXHJcbiAgICBmb3JtYXR0ZXJzOiB7XHJcbiAgICAgICAgUkZDMTczODogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXBsYWNlLmNhbGwodmFsdWUsIHBlcmNlbnRUd2VudGllcywgJysnKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIFJGQzM5ODY6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJGQzE3Mzg6ICdSRkMxNzM4JyxcclxuICAgIFJGQzM5ODY6ICdSRkMzOTg2J1xyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "formats.js"
      ],
      "names": [
        "replace",
        "String",
        "prototype",
        "percentTwenties",
        "module",
        "exports",
        "formatters",
        "RFC1738",
        "value",
        "call",
        "RFC3986"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,OAAO,GAAGC,MAAM,CAACC,SAAP,CAAiBF,OAA/B;AACA,IAAIG,eAAe,GAAG,MAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACb,aAAW,SADE;AAEbC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE,UAAUC,KAAV,EAAiB;AACtB,aAAOR,OAAO,CAACS,IAAR,CAAaD,KAAb,EAAoBL,eAApB,EAAqC,GAArC,CAAP;AACH,KAHO;AAIRO,IAAAA,OAAO,EAAE,UAAUF,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACH;AANO,GAFC;AAUbD,EAAAA,OAAO,EAAE,SAVI;AAWbG,EAAAA,OAAO,EAAE;AAXI,CAAjB",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nvar replace = String.prototype.replace;\r\nvar percentTwenties = /%20/g;\r\n\r\nmodule.exports = {\r\n    'default': 'RFC3986',\r\n    formatters: {\r\n        RFC1738: function (value) {\r\n            return replace.call(value, percentTwenties, '+');\r\n        },\r\n        RFC3986: function (value) {\r\n            return value;\r\n        }\r\n    },\r\n    RFC1738: 'RFC1738',\r\n    RFC3986: 'RFC3986'\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211679
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\qs\\\\lib\\\\parse.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\parse.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\parse.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\parse.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
        "sourceFileName": "parse.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar defaults = {\n  allowDots: false,\n  allowPrototypes: false,\n  arrayLimit: 20,\n  charset: 'utf-8',\n  charsetSentinel: false,\n  comma: false,\n  decoder: utils.decode,\n  delimiter: '&',\n  depth: 5,\n  ignoreQueryPrefix: false,\n  interpretNumericEntities: false,\n  parameterLimit: 1000,\n  parseArrays: true,\n  plainObjects: false,\n  strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n  return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n    return String.fromCharCode(parseInt(numberStr, 10));\n  });\n}; // This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\n\n\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\n\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n  var obj = {};\n  var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n  var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n  var parts = cleanStr.split(options.delimiter, limit);\n  var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n\n  var i;\n  var charset = options.charset;\n\n  if (options.charsetSentinel) {\n    for (i = 0; i < parts.length; ++i) {\n      if (parts[i].indexOf('utf8=') === 0) {\n        if (parts[i] === charsetSentinel) {\n          charset = 'utf-8';\n        } else if (parts[i] === isoSentinel) {\n          charset = 'iso-8859-1';\n        }\n\n        skipIndex = i;\n        i = parts.length; // The eslint settings do not allow break;\n      }\n    }\n  }\n\n  for (i = 0; i < parts.length; ++i) {\n    if (i === skipIndex) {\n      continue;\n    }\n\n    var part = parts[i];\n    var bracketEqualsPos = part.indexOf(']=');\n    var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n    var key, val;\n\n    if (pos === -1) {\n      key = options.decoder(part, defaults.decoder, charset);\n      val = options.strictNullHandling ? null : '';\n    } else {\n      key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n      val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n    }\n\n    if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n      val = interpretNumericEntities(val);\n    }\n\n    if (val && options.comma && val.indexOf(',') > -1) {\n      val = val.split(',');\n    }\n\n    if (has.call(obj, key)) {\n      obj[key] = utils.combine(obj[key], val);\n    } else {\n      obj[key] = val;\n    }\n  }\n\n  return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n  var leaf = val;\n\n  for (var i = chain.length - 1; i >= 0; --i) {\n    var obj;\n    var root = chain[i];\n\n    if (root === '[]' && options.parseArrays) {\n      obj = [].concat(leaf);\n    } else {\n      obj = options.plainObjects ? Object.create(null) : {};\n      var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n      var index = parseInt(cleanRoot, 10);\n\n      if (!options.parseArrays && cleanRoot === '') {\n        obj = {\n          0: leaf\n        };\n      } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {\n        obj = [];\n        obj[index] = leaf;\n      } else {\n        obj[cleanRoot] = leaf;\n      }\n    }\n\n    leaf = obj;\n  }\n\n  return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n  if (!givenKey) {\n    return;\n  } // Transform dot notation to bracket notation\n\n\n  var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey; // The regex chunks\n\n  var brackets = /(\\[[^[\\]]*])/;\n  var child = /(\\[[^[\\]]*])/g; // Get the parent\n\n  var segment = brackets.exec(key);\n  var parent = segment ? key.slice(0, segment.index) : key; // Stash the parent if it exists\n\n  var keys = [];\n\n  if (parent) {\n    // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n    if (!options.plainObjects && has.call(Object.prototype, parent)) {\n      if (!options.allowPrototypes) {\n        return;\n      }\n    }\n\n    keys.push(parent);\n  } // Loop through children appending to the array until we hit depth\n\n\n  var i = 0;\n\n  while ((segment = child.exec(key)) !== null && i < options.depth) {\n    i += 1;\n\n    if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n      if (!options.allowPrototypes) {\n        return;\n      }\n    }\n\n    keys.push(segment[1]);\n  } // If there's a remainder, just add whatever is left\n\n\n  if (segment) {\n    keys.push('[' + key.slice(segment.index) + ']');\n  }\n\n  return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n  if (!opts) {\n    return defaults;\n  }\n\n  if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n    throw new TypeError('Decoder has to be a function.');\n  }\n\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n\n  var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n  return {\n    allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n    allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n    arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n    charset: charset,\n    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n    decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n    delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n    depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n    ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n    interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n    parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n    parseArrays: opts.parseArrays !== false,\n    plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n  };\n};\n\nmodule.exports = function (str, opts) {\n  var options = normalizeParseOptions(opts);\n\n  if (str === '' || str === null || typeof str === 'undefined') {\n    return options.plainObjects ? Object.create(null) : {};\n  }\n\n  var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n  var obj = options.plainObjects ? Object.create(null) : {}; // Iterate over the keys and setup the new object\n\n  var keys = Object.keys(tempObj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    var newObj = parseKeys(key, tempObj[key], options);\n    obj = utils.merge(obj, newObj, options);\n  }\n\n  return utils.compact(obj);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "parse.js"
      ],
      "names": [
        "utils",
        "require",
        "has",
        "Object",
        "prototype",
        "hasOwnProperty",
        "defaults",
        "allowDots",
        "allowPrototypes",
        "arrayLimit",
        "charset",
        "charsetSentinel",
        "comma",
        "decoder",
        "decode",
        "delimiter",
        "depth",
        "ignoreQueryPrefix",
        "interpretNumericEntities",
        "parameterLimit",
        "parseArrays",
        "plainObjects",
        "strictNullHandling",
        "str",
        "replace",
        "$0",
        "numberStr",
        "String",
        "fromCharCode",
        "parseInt",
        "isoSentinel",
        "parseValues",
        "parseQueryStringValues",
        "options",
        "obj",
        "cleanStr",
        "limit",
        "Infinity",
        "undefined",
        "parts",
        "split",
        "skipIndex",
        "i",
        "length",
        "indexOf",
        "part",
        "bracketEqualsPos",
        "pos",
        "key",
        "val",
        "slice",
        "call",
        "combine",
        "parseObject",
        "chain",
        "leaf",
        "root",
        "concat",
        "create",
        "cleanRoot",
        "charAt",
        "index",
        "isNaN",
        "parseKeys",
        "parseQueryStringKeys",
        "givenKey",
        "brackets",
        "child",
        "segment",
        "exec",
        "parent",
        "keys",
        "push",
        "normalizeParseOptions",
        "opts",
        "TypeError",
        "Error",
        "isRegExp",
        "module",
        "exports",
        "tempObj",
        "newObj",
        "merge",
        "compact"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\qs\\lib\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nvar defaults = {\r\n    allowDots: false,\r\n    allowPrototypes: false,\r\n    arrayLimit: 20,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    comma: false,\r\n    decoder: utils.decode,\r\n    delimiter: '&',\r\n    depth: 5,\r\n    ignoreQueryPrefix: false,\r\n    interpretNumericEntities: false,\r\n    parameterLimit: 1000,\r\n    parseArrays: true,\r\n    plainObjects: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar interpretNumericEntities = function (str) {\r\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\r\n        return String.fromCharCode(parseInt(numberStr, 10));\r\n    });\r\n};\r\n\r\n// This is what browsers will submit when the ✓ character occurs in an\r\n// application/x-www-form-urlencoded body and the encoding of the page containing\r\n// the form is iso-8859-1, or when the submitted form has an accept-charset\r\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\r\n// the ✓ character, such as us-ascii.\r\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\r\n\r\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\r\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\r\n\r\nvar parseValues = function parseQueryStringValues(str, options) {\r\n    var obj = {};\r\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\r\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\r\n    var parts = cleanStr.split(options.delimiter, limit);\r\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\r\n    var i;\r\n\r\n    var charset = options.charset;\r\n    if (options.charsetSentinel) {\r\n        for (i = 0; i < parts.length; ++i) {\r\n            if (parts[i].indexOf('utf8=') === 0) {\r\n                if (parts[i] === charsetSentinel) {\r\n                    charset = 'utf-8';\r\n                } else if (parts[i] === isoSentinel) {\r\n                    charset = 'iso-8859-1';\r\n                }\r\n                skipIndex = i;\r\n                i = parts.length; // The eslint settings do not allow break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < parts.length; ++i) {\r\n        if (i === skipIndex) {\r\n            continue;\r\n        }\r\n        var part = parts[i];\r\n\r\n        var bracketEqualsPos = part.indexOf(']=');\r\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\r\n\r\n        var key, val;\r\n        if (pos === -1) {\r\n            key = options.decoder(part, defaults.decoder, charset);\r\n            val = options.strictNullHandling ? null : '';\r\n        } else {\r\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\r\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\r\n        }\r\n\r\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\r\n            val = interpretNumericEntities(val);\r\n        }\r\n\r\n        if (val && options.comma && val.indexOf(',') > -1) {\r\n            val = val.split(',');\r\n        }\r\n\r\n        if (has.call(obj, key)) {\r\n            obj[key] = utils.combine(obj[key], val);\r\n        } else {\r\n            obj[key] = val;\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar parseObject = function (chain, val, options) {\r\n    var leaf = val;\r\n\r\n    for (var i = chain.length - 1; i >= 0; --i) {\r\n        var obj;\r\n        var root = chain[i];\r\n\r\n        if (root === '[]' && options.parseArrays) {\r\n            obj = [].concat(leaf);\r\n        } else {\r\n            obj = options.plainObjects ? Object.create(null) : {};\r\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\r\n            var index = parseInt(cleanRoot, 10);\r\n            if (!options.parseArrays && cleanRoot === '') {\r\n                obj = { 0: leaf };\r\n            } else if (\r\n                !isNaN(index)\r\n                && root !== cleanRoot\r\n                && String(index) === cleanRoot\r\n                && index >= 0\r\n                && (options.parseArrays && index <= options.arrayLimit)\r\n            ) {\r\n                obj = [];\r\n                obj[index] = leaf;\r\n            } else {\r\n                obj[cleanRoot] = leaf;\r\n            }\r\n        }\r\n\r\n        leaf = obj;\r\n    }\r\n\r\n    return leaf;\r\n};\r\n\r\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\r\n    if (!givenKey) {\r\n        return;\r\n    }\r\n\r\n    // Transform dot notation to bracket notation\r\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\r\n\r\n    // The regex chunks\r\n\r\n    var brackets = /(\\[[^[\\]]*])/;\r\n    var child = /(\\[[^[\\]]*])/g;\r\n\r\n    // Get the parent\r\n\r\n    var segment = brackets.exec(key);\r\n    var parent = segment ? key.slice(0, segment.index) : key;\r\n\r\n    // Stash the parent if it exists\r\n\r\n    var keys = [];\r\n    if (parent) {\r\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\r\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        keys.push(parent);\r\n    }\r\n\r\n    // Loop through children appending to the array until we hit depth\r\n\r\n    var i = 0;\r\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\r\n        i += 1;\r\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n        keys.push(segment[1]);\r\n    }\r\n\r\n    // If there's a remainder, just add whatever is left\r\n\r\n    if (segment) {\r\n        keys.push('[' + key.slice(segment.index) + ']');\r\n    }\r\n\r\n    return parseObject(keys, val, options);\r\n};\r\n\r\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\r\n        throw new TypeError('Decoder has to be a function.');\r\n    }\r\n\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\r\n\r\n    return {\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\r\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\r\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\r\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\r\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\r\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\r\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\r\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\r\n        parseArrays: opts.parseArrays !== false,\r\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (str, opts) {\r\n    var options = normalizeParseOptions(opts);\r\n\r\n    if (str === '' || str === null || typeof str === 'undefined') {\r\n        return options.plainObjects ? Object.create(null) : {};\r\n    }\r\n\r\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\r\n    var obj = options.plainObjects ? Object.create(null) : {};\r\n\r\n    // Iterate over the keys and setup the new object\r\n\r\n    var keys = Object.keys(tempObj);\r\n    for (var i = 0; i < keys.length; ++i) {\r\n        var key = keys[i];\r\n        var newObj = parseKeys(key, tempObj[key], options);\r\n        obj = utils.merge(obj, newObj, options);\r\n    }\r\n\r\n    return utils.compact(obj);\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211679
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\view.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\view.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\view.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\view.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
        "sourceFileName": "view.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar debug = require('debug')('express:view');\n\nvar path = require('path');\n\nvar fs = require('fs');\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = View;\n/**\r\n * Initialize a new `View` with the given `name`.\r\n *\r\n * Options:\r\n *\r\n *   - `defaultEngine` the default template engine name\r\n *   - `engines` template engine require() cache\r\n *   - `root` root path for view lookup\r\n *\r\n * @param {string} name\r\n * @param {object} options\r\n * @public\r\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.' ? '.' + this.defaultEngine : this.defaultEngine;\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.substr(1);\n    debug('require \"%s\"', mod); // default engine export\n\n    var fn = require(mod).__express;\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.');\n    }\n\n    opts.engines[this.ext] = fn;\n  } // store loaded engine\n\n\n  this.engine = opts.engines[this.ext]; // lookup path\n\n  this.path = this.lookup(fileName);\n}\n/**\r\n * Lookup view by the given `name`\r\n *\r\n * @param {string} name\r\n * @private\r\n */\n\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i]; // resolve the path\n\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc); // resolve the file\n\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n/**\r\n * Render with the given options.\r\n *\r\n * @param {object} options\r\n * @param {function} callback\r\n * @private\r\n */\n\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n/**\r\n * Resolve the file within the given directory.\r\n *\r\n * @param {string} dir\r\n * @param {string} file\r\n * @private\r\n */\n\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext; // <path>.<ext>\n\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  } // <path>/index.<ext>\n\n\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n/**\r\n * Return a stat, maybe.\r\n *\r\n * @param {string} path\r\n * @return {fs.Stats}\r\n * @private\r\n */\n\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "view.js"
      ],
      "names": [
        "debug",
        "require",
        "path",
        "fs",
        "dirname",
        "basename",
        "extname",
        "join",
        "resolve",
        "module",
        "exports",
        "View",
        "name",
        "options",
        "opts",
        "defaultEngine",
        "ext",
        "root",
        "Error",
        "fileName",
        "engines",
        "mod",
        "substr",
        "fn",
        "__express",
        "engine",
        "lookup",
        "prototype",
        "roots",
        "concat",
        "i",
        "length",
        "loc",
        "dir",
        "file",
        "render",
        "callback",
        "stat",
        "tryStat",
        "isFile",
        "statSync",
        "e",
        "undefined"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('express:view');\r\nvar path = require('path');\r\nvar fs = require('fs');\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar dirname = path.dirname;\r\nvar basename = path.basename;\r\nvar extname = path.extname;\r\nvar join = path.join;\r\nvar resolve = path.resolve;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = View;\r\n\r\n/**\r\n * Initialize a new `View` with the given `name`.\r\n *\r\n * Options:\r\n *\r\n *   - `defaultEngine` the default template engine name\r\n *   - `engines` template engine require() cache\r\n *   - `root` root path for view lookup\r\n *\r\n * @param {string} name\r\n * @param {object} options\r\n * @public\r\n */\r\n\r\nfunction View(name, options) {\r\n  var opts = options || {};\r\n\r\n  this.defaultEngine = opts.defaultEngine;\r\n  this.ext = extname(name);\r\n  this.name = name;\r\n  this.root = opts.root;\r\n\r\n  if (!this.ext && !this.defaultEngine) {\r\n    throw new Error('No default engine was specified and no extension was provided.');\r\n  }\r\n\r\n  var fileName = name;\r\n\r\n  if (!this.ext) {\r\n    // get extension from default engine name\r\n    this.ext = this.defaultEngine[0] !== '.'\r\n      ? '.' + this.defaultEngine\r\n      : this.defaultEngine;\r\n\r\n    fileName += this.ext;\r\n  }\r\n\r\n  if (!opts.engines[this.ext]) {\r\n    // load engine\r\n    var mod = this.ext.substr(1)\r\n    debug('require \"%s\"', mod)\r\n\r\n    // default engine export\r\n    var fn = require(mod).__express\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\r\n    }\r\n\r\n    opts.engines[this.ext] = fn\r\n  }\r\n\r\n  // store loaded engine\r\n  this.engine = opts.engines[this.ext];\r\n\r\n  // lookup path\r\n  this.path = this.lookup(fileName);\r\n}\r\n\r\n/**\r\n * Lookup view by the given `name`\r\n *\r\n * @param {string} name\r\n * @private\r\n */\r\n\r\nView.prototype.lookup = function lookup(name) {\r\n  var path;\r\n  var roots = [].concat(this.root);\r\n\r\n  debug('lookup \"%s\"', name);\r\n\r\n  for (var i = 0; i < roots.length && !path; i++) {\r\n    var root = roots[i];\r\n\r\n    // resolve the path\r\n    var loc = resolve(root, name);\r\n    var dir = dirname(loc);\r\n    var file = basename(loc);\r\n\r\n    // resolve the file\r\n    path = this.resolve(dir, file);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\n/**\r\n * Render with the given options.\r\n *\r\n * @param {object} options\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nView.prototype.render = function render(options, callback) {\r\n  debug('render \"%s\"', this.path);\r\n  this.engine(this.path, options, callback);\r\n};\r\n\r\n/**\r\n * Resolve the file within the given directory.\r\n *\r\n * @param {string} dir\r\n * @param {string} file\r\n * @private\r\n */\r\n\r\nView.prototype.resolve = function resolve(dir, file) {\r\n  var ext = this.ext;\r\n\r\n  // <path>.<ext>\r\n  var path = join(dir, file);\r\n  var stat = tryStat(path);\r\n\r\n  if (stat && stat.isFile()) {\r\n    return path;\r\n  }\r\n\r\n  // <path>/index.<ext>\r\n  path = join(dir, basename(file, ext), 'index' + ext);\r\n  stat = tryStat(path);\r\n\r\n  if (stat && stat.isFile()) {\r\n    return path;\r\n  }\r\n};\r\n\r\n/**\r\n * Return a stat, maybe.\r\n *\r\n * @param {string} path\r\n * @return {fs.Stats}\r\n * @private\r\n */\r\n\r\nfunction tryStat(path) {\r\n  debug('stat \"%s\"', path);\r\n\r\n  try {\r\n    return fs.statSync(path);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\utils.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\utils.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @api private\r\n */\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar contentDisposition = require('content-disposition');\n\nvar contentType = require('content-type');\n\nvar deprecate = require('depd')('express');\n\nvar flatten = require('array-flatten');\n\nvar mime = require('send').mime;\n\nvar etag = require('etag');\n\nvar proxyaddr = require('proxy-addr');\n\nvar qs = require('qs');\n\nvar querystring = require('querystring');\n/**\r\n * Return strong ETag for `body`.\r\n *\r\n * @param {String|Buffer} body\r\n * @param {String} [encoding]\r\n * @return {String}\r\n * @api private\r\n */\n\n\nexports.etag = createETagGenerator({\n  weak: false\n});\n/**\r\n * Return weak ETag for `body`.\r\n *\r\n * @param {String|Buffer} body\r\n * @param {String} [encoding]\r\n * @return {String}\r\n * @api private\r\n */\n\nexports.wetag = createETagGenerator({\n  weak: true\n});\n/**\r\n * Check if `path` looks absolute.\r\n *\r\n * @param {String} path\r\n * @return {Boolean}\r\n * @api private\r\n */\n\nexports.isAbsolute = function (path) {\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n/**\r\n * Flatten the given `arr`.\r\n *\r\n * @param {Array} arr\r\n * @return {Array}\r\n * @api private\r\n */\n\n\nexports.flatten = deprecate.function(flatten, 'utils.flatten: use array-flatten npm module instead');\n/**\r\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\r\n *\r\n * @param {String} type\r\n * @return {Object}\r\n * @api private\r\n */\n\nexports.normalizeType = function (type) {\n  return ~type.indexOf('/') ? acceptParams(type) : {\n    value: mime.lookup(type),\n    params: {}\n  };\n};\n/**\r\n * Normalize `types`, for example \"html\" becomes \"text/html\".\r\n *\r\n * @param {Array} types\r\n * @return {Array}\r\n * @api private\r\n */\n\n\nexports.normalizeTypes = function (types) {\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n/**\r\n * Generate Content-Disposition header appropriate for the filename.\r\n * non-ascii filenames are urlencoded and a filename* parameter is added\r\n *\r\n * @param {String} filename\r\n * @return {String}\r\n * @api private\r\n */\n\n\nexports.contentDisposition = deprecate.function(contentDisposition, 'utils.contentDisposition: use content-disposition npm module instead');\n/**\r\n * Parse accept params `str` returning an\r\n * object with `.value`, `.quality` and `.params`.\r\n * also includes `.originalIndex` for stable sorting\r\n *\r\n * @param {String} str\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = {\n    value: parts[0],\n    quality: 1,\n    params: {},\n    originalIndex: index\n  };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n/**\r\n * Compile \"etag\" value to function.\r\n *\r\n * @param  {Boolean|String|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\n\n\nexports.compileETag = function (val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = exports.wetag;\n      break;\n\n    case false:\n      break;\n\n    case 'strong':\n      fn = exports.etag;\n      break;\n\n    case 'weak':\n      fn = exports.wetag;\n      break;\n\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n};\n/**\r\n * Compile \"query parser\" value to function.\r\n *\r\n * @param  {String|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\n\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = querystring.parse;\n      break;\n\n    case false:\n      fn = newObject;\n      break;\n\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n\n    case 'simple':\n      fn = querystring.parse;\n      break;\n\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n};\n/**\r\n * Compile \"proxy trust\" value to function.\r\n *\r\n * @param  {Boolean|String|Number|Array|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\n\n\nexports.compileTrust = function (val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function () {\n      return true;\n    };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function (a, i) {\n      return i < val;\n    };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return proxyaddr.compile(val || []);\n};\n/**\r\n * Set the charset in a given Content-Type string.\r\n *\r\n * @param {String} type\r\n * @param {String} charset\r\n * @return {String}\r\n * @api private\r\n */\n\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  } // parse type\n\n\n  var parsed = contentType.parse(type); // set charset\n\n  parsed.parameters.charset = charset; // format type\n\n  return contentType.format(parsed);\n};\n/**\r\n * Create an ETag generator function, generating ETags with\r\n * the given options.\r\n *\r\n * @param {object} options\r\n * @return {function}\r\n * @private\r\n */\n\n\nfunction createETagGenerator(options) {\n  return function generateETag(body, encoding) {\n    var buf = !Buffer.isBuffer(body) ? Buffer.from(body, encoding) : body;\n    return etag(buf, options);\n  };\n}\n/**\r\n * Parse an extended query string with qs.\r\n *\r\n * @return {Object}\r\n * @private\r\n */\n\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n/**\r\n * Return new empty object.\r\n *\r\n * @return {Object}\r\n * @api private\r\n */\n\n\nfunction newObject() {\n  return {};\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "Buffer",
        "require",
        "contentDisposition",
        "contentType",
        "deprecate",
        "flatten",
        "mime",
        "etag",
        "proxyaddr",
        "qs",
        "querystring",
        "exports",
        "createETagGenerator",
        "weak",
        "wetag",
        "isAbsolute",
        "path",
        "substring",
        "function",
        "normalizeType",
        "type",
        "indexOf",
        "acceptParams",
        "value",
        "lookup",
        "params",
        "normalizeTypes",
        "types",
        "ret",
        "i",
        "length",
        "push",
        "str",
        "index",
        "parts",
        "split",
        "quality",
        "originalIndex",
        "pms",
        "parseFloat",
        "compileETag",
        "val",
        "fn",
        "TypeError",
        "compileQueryParser",
        "parse",
        "newObject",
        "parseExtendedQueryString",
        "compileTrust",
        "a",
        "compile",
        "setCharset",
        "charset",
        "parsed",
        "parameters",
        "format",
        "options",
        "generateETag",
        "body",
        "encoding",
        "buf",
        "isBuffer",
        "from",
        "allowPrototypes"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @api private\r\n */\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar contentDisposition = require('content-disposition');\r\nvar contentType = require('content-type');\r\nvar deprecate = require('depd')('express');\r\nvar flatten = require('array-flatten');\r\nvar mime = require('send').mime;\r\nvar etag = require('etag');\r\nvar proxyaddr = require('proxy-addr');\r\nvar qs = require('qs');\r\nvar querystring = require('querystring');\r\n\r\n/**\r\n * Return strong ETag for `body`.\r\n *\r\n * @param {String|Buffer} body\r\n * @param {String} [encoding]\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.etag = createETagGenerator({ weak: false })\r\n\r\n/**\r\n * Return weak ETag for `body`.\r\n *\r\n * @param {String|Buffer} body\r\n * @param {String} [encoding]\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.wetag = createETagGenerator({ weak: true })\r\n\r\n/**\r\n * Check if `path` looks absolute.\r\n *\r\n * @param {String} path\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nexports.isAbsolute = function(path){\r\n  if ('/' === path[0]) return true;\r\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\r\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\r\n};\r\n\r\n/**\r\n * Flatten the given `arr`.\r\n *\r\n * @param {Array} arr\r\n * @return {Array}\r\n * @api private\r\n */\r\n\r\nexports.flatten = deprecate.function(flatten,\r\n  'utils.flatten: use array-flatten npm module instead');\r\n\r\n/**\r\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\r\n *\r\n * @param {String} type\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nexports.normalizeType = function(type){\r\n  return ~type.indexOf('/')\r\n    ? acceptParams(type)\r\n    : { value: mime.lookup(type), params: {} };\r\n};\r\n\r\n/**\r\n * Normalize `types`, for example \"html\" becomes \"text/html\".\r\n *\r\n * @param {Array} types\r\n * @return {Array}\r\n * @api private\r\n */\r\n\r\nexports.normalizeTypes = function(types){\r\n  var ret = [];\r\n\r\n  for (var i = 0; i < types.length; ++i) {\r\n    ret.push(exports.normalizeType(types[i]));\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Generate Content-Disposition header appropriate for the filename.\r\n * non-ascii filenames are urlencoded and a filename* parameter is added\r\n *\r\n * @param {String} filename\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.contentDisposition = deprecate.function(contentDisposition,\r\n  'utils.contentDisposition: use content-disposition npm module instead');\r\n\r\n/**\r\n * Parse accept params `str` returning an\r\n * object with `.value`, `.quality` and `.params`.\r\n * also includes `.originalIndex` for stable sorting\r\n *\r\n * @param {String} str\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction acceptParams(str, index) {\r\n  var parts = str.split(/ *; */);\r\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\r\n\r\n  for (var i = 1; i < parts.length; ++i) {\r\n    var pms = parts[i].split(/ *= */);\r\n    if ('q' === pms[0]) {\r\n      ret.quality = parseFloat(pms[1]);\r\n    } else {\r\n      ret.params[pms[0]] = pms[1];\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Compile \"etag\" value to function.\r\n *\r\n * @param  {Boolean|String|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.compileETag = function(val) {\r\n  var fn;\r\n\r\n  if (typeof val === 'function') {\r\n    return val;\r\n  }\r\n\r\n  switch (val) {\r\n    case true:\r\n      fn = exports.wetag;\r\n      break;\r\n    case false:\r\n      break;\r\n    case 'strong':\r\n      fn = exports.etag;\r\n      break;\r\n    case 'weak':\r\n      fn = exports.wetag;\r\n      break;\r\n    default:\r\n      throw new TypeError('unknown value for etag function: ' + val);\r\n  }\r\n\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Compile \"query parser\" value to function.\r\n *\r\n * @param  {String|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.compileQueryParser = function compileQueryParser(val) {\r\n  var fn;\r\n\r\n  if (typeof val === 'function') {\r\n    return val;\r\n  }\r\n\r\n  switch (val) {\r\n    case true:\r\n      fn = querystring.parse;\r\n      break;\r\n    case false:\r\n      fn = newObject;\r\n      break;\r\n    case 'extended':\r\n      fn = parseExtendedQueryString;\r\n      break;\r\n    case 'simple':\r\n      fn = querystring.parse;\r\n      break;\r\n    default:\r\n      throw new TypeError('unknown value for query parser function: ' + val);\r\n  }\r\n\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Compile \"proxy trust\" value to function.\r\n *\r\n * @param  {Boolean|String|Number|Array|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.compileTrust = function(val) {\r\n  if (typeof val === 'function') return val;\r\n\r\n  if (val === true) {\r\n    // Support plain true/false\r\n    return function(){ return true };\r\n  }\r\n\r\n  if (typeof val === 'number') {\r\n    // Support trusting hop count\r\n    return function(a, i){ return i < val };\r\n  }\r\n\r\n  if (typeof val === 'string') {\r\n    // Support comma-separated values\r\n    val = val.split(/ *, */);\r\n  }\r\n\r\n  return proxyaddr.compile(val || []);\r\n}\r\n\r\n/**\r\n * Set the charset in a given Content-Type string.\r\n *\r\n * @param {String} type\r\n * @param {String} charset\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.setCharset = function setCharset(type, charset) {\r\n  if (!type || !charset) {\r\n    return type;\r\n  }\r\n\r\n  // parse type\r\n  var parsed = contentType.parse(type);\r\n\r\n  // set charset\r\n  parsed.parameters.charset = charset;\r\n\r\n  // format type\r\n  return contentType.format(parsed);\r\n};\r\n\r\n/**\r\n * Create an ETag generator function, generating ETags with\r\n * the given options.\r\n *\r\n * @param {object} options\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction createETagGenerator (options) {\r\n  return function generateETag (body, encoding) {\r\n    var buf = !Buffer.isBuffer(body)\r\n      ? Buffer.from(body, encoding)\r\n      : body\r\n\r\n    return etag(buf, options)\r\n  }\r\n}\r\n\r\n/**\r\n * Parse an extended query string with qs.\r\n *\r\n * @return {Object}\r\n * @private\r\n */\r\n\r\nfunction parseExtendedQueryString(str) {\r\n  return qs.parse(str, {\r\n    allowPrototypes: true\r\n  });\r\n}\r\n\r\n/**\r\n * Return new empty object.\r\n *\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction newObject() {\r\n  return {};\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\safe-buffer\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\safe-buffer\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safe-buffer\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safe-buffer\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safe-buffer\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safe-buffer\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safe-buffer\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n} // Copy static methods from Buffer\n\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJ1ZmZlciIsInJlcXVpcmUiLCJCdWZmZXIiLCJjb3B5UHJvcHMiLCJzcmMiLCJkc3QiLCJrZXkiLCJmcm9tIiwiYWxsb2MiLCJhbGxvY1Vuc2FmZSIsImFsbG9jVW5zYWZlU2xvdyIsIm1vZHVsZSIsImV4cG9ydHMiLCJTYWZlQnVmZmVyIiwiYXJnIiwiZW5jb2RpbmdPck9mZnNldCIsImxlbmd0aCIsIlR5cGVFcnJvciIsInNpemUiLCJmaWxsIiwiZW5jb2RpbmciLCJidWYiLCJ1bmRlZmluZWQiLCJTbG93QnVmZmVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixNQUFNLENBQUNFLE1BQXBCLEMsQ0FFQTs7QUFDQSxTQUFTQyxTQUFULENBQW9CQyxHQUFwQixFQUF5QkMsR0FBekIsRUFBOEI7QUFDNUIsT0FBSyxJQUFJQyxHQUFULElBQWdCRixHQUFoQixFQUFxQjtBQUNuQkMsSUFBQUEsR0FBRyxDQUFDQyxHQUFELENBQUgsR0FBV0YsR0FBRyxDQUFDRSxHQUFELENBQWQ7QUFDRDtBQUNGOztBQUNELElBQUlKLE1BQU0sQ0FBQ0ssSUFBUCxJQUFlTCxNQUFNLENBQUNNLEtBQXRCLElBQStCTixNQUFNLENBQUNPLFdBQXRDLElBQXFEUCxNQUFNLENBQUNRLGVBQWhFLEVBQWlGO0FBQy9FQyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLE1BQWpCO0FBQ0QsQ0FGRCxNQUVPO0FBQ0w7QUFDQUcsRUFBQUEsU0FBUyxDQUFDSCxNQUFELEVBQVNZLE9BQVQsQ0FBVDtBQUNBQSxFQUFBQSxPQUFPLENBQUNWLE1BQVIsR0FBaUJXLFVBQWpCO0FBQ0Q7O0FBRUQsU0FBU0EsVUFBVCxDQUFxQkMsR0FBckIsRUFBMEJDLGdCQUExQixFQUE0Q0MsTUFBNUMsRUFBb0Q7QUFDbEQsU0FBT2QsTUFBTSxDQUFDWSxHQUFELEVBQU1DLGdCQUFOLEVBQXdCQyxNQUF4QixDQUFiO0FBQ0QsQyxDQUVEOzs7QUFDQWIsU0FBUyxDQUFDRCxNQUFELEVBQVNXLFVBQVQsQ0FBVDs7QUFFQUEsVUFBVSxDQUFDTixJQUFYLEdBQWtCLFVBQVVPLEdBQVYsRUFBZUMsZ0JBQWYsRUFBaUNDLE1BQWpDLEVBQXlDO0FBQ3pELE1BQUksT0FBT0YsR0FBUCxLQUFlLFFBQW5CLEVBQTZCO0FBQzNCLFVBQU0sSUFBSUcsU0FBSixDQUFjLCtCQUFkLENBQU47QUFDRDs7QUFDRCxTQUFPZixNQUFNLENBQUNZLEdBQUQsRUFBTUMsZ0JBQU4sRUFBd0JDLE1BQXhCLENBQWI7QUFDRCxDQUxEOztBQU9BSCxVQUFVLENBQUNMLEtBQVgsR0FBbUIsVUFBVVUsSUFBVixFQUFnQkMsSUFBaEIsRUFBc0JDLFFBQXRCLEVBQWdDO0FBQ2pELE1BQUksT0FBT0YsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtBQUM1QixVQUFNLElBQUlELFNBQUosQ0FBYywyQkFBZCxDQUFOO0FBQ0Q7O0FBQ0QsTUFBSUksR0FBRyxHQUFHbkIsTUFBTSxDQUFDZ0IsSUFBRCxDQUFoQjs7QUFDQSxNQUFJQyxJQUFJLEtBQUtHLFNBQWIsRUFBd0I7QUFDdEIsUUFBSSxPQUFPRixRQUFQLEtBQW9CLFFBQXhCLEVBQWtDO0FBQ2hDQyxNQUFBQSxHQUFHLENBQUNGLElBQUosQ0FBU0EsSUFBVCxFQUFlQyxRQUFmO0FBQ0QsS0FGRCxNQUVPO0FBQ0xDLE1BQUFBLEdBQUcsQ0FBQ0YsSUFBSixDQUFTQSxJQUFUO0FBQ0Q7QUFDRixHQU5ELE1BTU87QUFDTEUsSUFBQUEsR0FBRyxDQUFDRixJQUFKLENBQVMsQ0FBVDtBQUNEOztBQUNELFNBQU9FLEdBQVA7QUFDRCxDQWZEOztBQWlCQVIsVUFBVSxDQUFDSixXQUFYLEdBQXlCLFVBQVVTLElBQVYsRUFBZ0I7QUFDdkMsTUFBSSxPQUFPQSxJQUFQLEtBQWdCLFFBQXBCLEVBQThCO0FBQzVCLFVBQU0sSUFBSUQsU0FBSixDQUFjLDJCQUFkLENBQU47QUFDRDs7QUFDRCxTQUFPZixNQUFNLENBQUNnQixJQUFELENBQWI7QUFDRCxDQUxEOztBQU9BTCxVQUFVLENBQUNILGVBQVgsR0FBNkIsVUFBVVEsSUFBVixFQUFnQjtBQUMzQyxNQUFJLE9BQU9BLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7QUFDNUIsVUFBTSxJQUFJRCxTQUFKLENBQWMsMkJBQWQsQ0FBTjtBQUNEOztBQUNELFNBQU9qQixNQUFNLENBQUN1QixVQUFQLENBQWtCTCxJQUFsQixDQUFQO0FBQ0QsQ0FMRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcc2FmZS1idWZmZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vZGUvbm8tZGVwcmVjYXRlZC1hcGkgKi9cclxudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpXHJcbnZhciBCdWZmZXIgPSBidWZmZXIuQnVmZmVyXHJcblxyXG4vLyBhbHRlcm5hdGl2ZSB0byB1c2luZyBPYmplY3Qua2V5cyBmb3Igb2xkIGJyb3dzZXJzXHJcbmZ1bmN0aW9uIGNvcHlQcm9wcyAoc3JjLCBkc3QpIHtcclxuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XHJcbiAgICBkc3Rba2V5XSA9IHNyY1trZXldXHJcbiAgfVxyXG59XHJcbmlmIChCdWZmZXIuZnJvbSAmJiBCdWZmZXIuYWxsb2MgJiYgQnVmZmVyLmFsbG9jVW5zYWZlICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IGJ1ZmZlclxyXG59IGVsc2Uge1xyXG4gIC8vIENvcHkgcHJvcGVydGllcyBmcm9tIHJlcXVpcmUoJ2J1ZmZlcicpXHJcbiAgY29weVByb3BzKGJ1ZmZlciwgZXhwb3J0cylcclxuICBleHBvcnRzLkJ1ZmZlciA9IFNhZmVCdWZmZXJcclxufVxyXG5cclxuZnVuY3Rpb24gU2FmZUJ1ZmZlciAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcclxuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxyXG59XHJcblxyXG4vLyBDb3B5IHN0YXRpYyBtZXRob2RzIGZyb20gQnVmZmVyXHJcbmNvcHlQcm9wcyhCdWZmZXIsIFNhZmVCdWZmZXIpXHJcblxyXG5TYWZlQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcclxuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJylcclxuICB9XHJcbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcclxufVxyXG5cclxuU2FmZUJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xyXG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxyXG4gIH1cclxuICB2YXIgYnVmID0gQnVmZmVyKHNpemUpXHJcbiAgaWYgKGZpbGwgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidWYuZmlsbChmaWxsKVxyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBidWYuZmlsbCgwKVxyXG4gIH1cclxuICByZXR1cm4gYnVmXHJcbn1cclxuXHJcblNhZmVCdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xyXG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxyXG4gIH1cclxuICByZXR1cm4gQnVmZmVyKHNpemUpXHJcbn1cclxuXHJcblNhZmVCdWZmZXIuYWxsb2NVbnNhZmVTbG93ID0gZnVuY3Rpb24gKHNpemUpIHtcclxuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcclxuICB9XHJcbiAgcmV0dXJuIGJ1ZmZlci5TbG93QnVmZmVyKHNpemUpXHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "buffer",
        "require",
        "Buffer",
        "copyProps",
        "src",
        "dst",
        "key",
        "from",
        "alloc",
        "allocUnsafe",
        "allocUnsafeSlow",
        "module",
        "exports",
        "SafeBuffer",
        "arg",
        "encodingOrOffset",
        "length",
        "TypeError",
        "size",
        "fill",
        "encoding",
        "buf",
        "undefined",
        "SlowBuffer"
      ],
      "mappings": "AAAA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,MAAM,GAAGF,MAAM,CAACE,MAApB,C,CAEA;;AACA,SAASC,SAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnBC,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,GAAG,CAACE,GAAD,CAAd;AACD;AACF;;AACD,IAAIJ,MAAM,CAACK,IAAP,IAAeL,MAAM,CAACM,KAAtB,IAA+BN,MAAM,CAACO,WAAtC,IAAqDP,MAAM,CAACQ,eAAhE,EAAiF;AAC/EC,EAAAA,MAAM,CAACC,OAAP,GAAiBZ,MAAjB;AACD,CAFD,MAEO;AACL;AACAG,EAAAA,SAAS,CAACH,MAAD,EAASY,OAAT,CAAT;AACAA,EAAAA,OAAO,CAACV,MAAR,GAAiBW,UAAjB;AACD;;AAED,SAASA,UAAT,CAAqBC,GAArB,EAA0BC,gBAA1B,EAA4CC,MAA5C,EAAoD;AAClD,SAAOd,MAAM,CAACY,GAAD,EAAMC,gBAAN,EAAwBC,MAAxB,CAAb;AACD,C,CAED;;;AACAb,SAAS,CAACD,MAAD,EAASW,UAAT,CAAT;;AAEAA,UAAU,CAACN,IAAX,GAAkB,UAAUO,GAAV,EAAeC,gBAAf,EAAiCC,MAAjC,EAAyC;AACzD,MAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIG,SAAJ,CAAc,+BAAd,CAAN;AACD;;AACD,SAAOf,MAAM,CAACY,GAAD,EAAMC,gBAAN,EAAwBC,MAAxB,CAAb;AACD,CALD;;AAOAH,UAAU,CAACL,KAAX,GAAmB,UAAUU,IAAV,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AACjD,MAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAID,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,MAAII,GAAG,GAAGnB,MAAM,CAACgB,IAAD,CAAhB;;AACA,MAAIC,IAAI,KAAKG,SAAb,EAAwB;AACtB,QAAI,OAAOF,QAAP,KAAoB,QAAxB,EAAkC;AAChCC,MAAAA,GAAG,CAACF,IAAJ,CAASA,IAAT,EAAeC,QAAf;AACD,KAFD,MAEO;AACLC,MAAAA,GAAG,CAACF,IAAJ,CAASA,IAAT;AACD;AACF,GAND,MAMO;AACLE,IAAAA,GAAG,CAACF,IAAJ,CAAS,CAAT;AACD;;AACD,SAAOE,GAAP;AACD,CAfD;;AAiBAR,UAAU,CAACJ,WAAX,GAAyB,UAAUS,IAAV,EAAgB;AACvC,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAID,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,SAAOf,MAAM,CAACgB,IAAD,CAAb;AACD,CALD;;AAOAL,UAAU,CAACH,eAAX,GAA6B,UAAUQ,IAAV,EAAgB;AAC3C,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAID,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,SAAOjB,MAAM,CAACuB,UAAP,CAAkBL,IAAlB,CAAP;AACD,CALD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safe-buffer\\",
      "sourcesContent": [
        "/* eslint-disable node/no-deprecated-api */\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\n// alternative to using Object.keys for old browsers\r\nfunction copyProps (src, dst) {\r\n  for (var key in src) {\r\n    dst[key] = src[key]\r\n  }\r\n}\r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n} else {\r\n  // Copy properties from require('buffer')\r\n  copyProps(buffer, exports)\r\n  exports.Buffer = SafeBuffer\r\n}\r\n\r\nfunction SafeBuffer (arg, encodingOrOffset, length) {\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\n// Copy static methods from Buffer\r\ncopyProps(Buffer, SafeBuffer)\r\n\r\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\r\n  if (typeof arg === 'number') {\r\n    throw new TypeError('Argument must not be a number')\r\n  }\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.alloc = function (size, fill, encoding) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  var buf = Buffer(size)\r\n  if (fill !== undefined) {\r\n    if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n  } else {\r\n    buf.fill(0)\r\n  }\r\n  return buf\r\n}\r\n\r\nSafeBuffer.allocUnsafe = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return Buffer(size)\r\n}\r\n\r\nSafeBuffer.allocUnsafeSlow = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return buffer.SlowBuffer(size)\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211867
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\content-disposition\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\content-disposition\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-disposition\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-disposition\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-disposition\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-disposition\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-disposition\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * content-disposition\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = contentDisposition;\nmodule.exports.parse = parse;\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar basename = require('path').basename;\n\nvar Buffer = require('safe-buffer').Buffer;\n/**\r\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\r\n * @private\r\n */\n\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g; // eslint-disable-line no-control-regex\n\n/**\r\n * RegExp to match percent encoding escape.\r\n * @private\r\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/;\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g;\n/**\r\n * RegExp to match non-latin1 characters.\r\n * @private\r\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g;\n/**\r\n * RegExp to match quoted-pair in RFC 2616\r\n *\r\n * quoted-pair = \"\\\" CHAR\r\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\r\n * @private\r\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g; // eslint-disable-line no-control-regex\n\n/**\r\n * RegExp to match chars that must be quoted-pair in RFC 2616\r\n * @private\r\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g;\n/**\r\n * RegExp for various RFC 2616 grammar\r\n *\r\n * parameter     = token \"=\" ( token | quoted-string )\r\n * token         = 1*<any CHAR except CTLs or separators>\r\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\r\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\r\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\r\n *               | \"{\" | \"}\" | SP | HT\r\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\r\n * qdtext        = <any TEXT except <\">>\r\n * quoted-pair   = \"\\\" CHAR\r\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\r\n * TEXT          = <any OCTET except CTLs, but including LWS>\r\n * LWS           = [CRLF] 1*( SP | HT )\r\n * CRLF          = CR LF\r\n * CR            = <US-ASCII CR, carriage return (13)>\r\n * LF            = <US-ASCII LF, linefeed (10)>\r\n * SP            = <US-ASCII SP, space (32)>\r\n * HT            = <US-ASCII HT, horizontal-tab (9)>\r\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\r\n * OCTET         = <any 8-bit sequence of data>\r\n * @private\r\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g; // eslint-disable-line no-control-regex\n\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/;\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/;\n/**\r\n * RegExp for various RFC 5987 grammar\r\n *\r\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\r\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\r\n * mime-charset  = 1*mime-charsetc\r\n * mime-charsetc = ALPHA / DIGIT\r\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\r\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\r\n *               / \"{\" / \"}\" / \"~\"\r\n * language      = ( 2*3ALPHA [ extlang ] )\r\n *               / 4ALPHA\r\n *               / 5*8ALPHA\r\n * extlang       = *3( \"-\" 3ALPHA )\r\n * value-chars   = *( pct-encoded / attr-char )\r\n * pct-encoded   = \"%\" HEXDIG HEXDIG\r\n * attr-char     = ALPHA / DIGIT\r\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\r\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\r\n * @private\r\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;\n/**\r\n * RegExp for various RFC 6266 grammar\r\n *\r\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\r\n * disp-ext-type    = token\r\n * disposition-parm = filename-parm | disp-ext-parm\r\n * filename-parm    = \"filename\" \"=\" value\r\n *                  | \"filename*\" \"=\" ext-value\r\n * disp-ext-parm    = token \"=\" value\r\n *                  | ext-token \"=\" ext-value\r\n * ext-token        = <the characters in token, followed by \"*\">\r\n * @private\r\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/; // eslint-disable-line no-control-regex\n\n/**\r\n * Create an attachment Content-Disposition header.\r\n *\r\n * @param {string} [filename]\r\n * @param {object} [options]\r\n * @param {string} [options.type=attachment]\r\n * @param {string|boolean} [options.fallback=true]\r\n * @return {string}\r\n * @public\r\n */\n\nfunction contentDisposition(filename, options) {\n  var opts = options || {}; // get type\n\n  var type = opts.type || 'attachment'; // get parameters\n\n  var params = createparams(filename, opts.fallback); // format into string\n\n  return format(new ContentDisposition(type, params));\n}\n/**\r\n * Create parameters object from filename and fallback.\r\n *\r\n * @param {string} [filename]\r\n * @param {string|boolean} [fallback=true]\r\n * @return {object}\r\n * @private\r\n */\n\n\nfunction createparams(filename, fallback) {\n  if (filename === undefined) {\n    return;\n  }\n\n  var params = {};\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string');\n  } // fallback defaults to true\n\n\n  if (fallback === undefined) {\n    fallback = true;\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean');\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string');\n  } // restrict to file base name\n\n\n  var name = basename(filename); // determine if name is suitable for quoted string\n\n  var isQuotedString = TEXT_REGEXP.test(name); // generate fallback name\n\n  var fallbackName = typeof fallback !== 'string' ? fallback && getlatin1(name) : basename(fallback);\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name; // set extended filename parameter\n\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name;\n  } // set filename parameter\n\n\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback ? fallbackName : name;\n  }\n\n  return params;\n}\n/**\r\n * Format object to Content-Disposition header.\r\n *\r\n * @param {object} obj\r\n * @param {string} obj.type\r\n * @param {object} [obj.parameters]\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction format(obj) {\n  var parameters = obj.parameters;\n  var type = obj.type;\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type');\n  } // start with normalized type\n\n\n  var string = String(type).toLowerCase(); // append parameters\n\n  if (parameters && typeof parameters === 'object') {\n    var param;\n    var params = Object.keys(parameters).sort();\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i];\n      var val = param.substr(-1) === '*' ? ustring(parameters[param]) : qstring(parameters[param]);\n      string += '; ' + param + '=' + val;\n    }\n  }\n\n  return string;\n}\n/**\r\n * Decode a RFC 6987 field value (gracefully).\r\n *\r\n * @param {string} str\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction decodefield(str) {\n  var match = EXT_VALUE_REGEXP.exec(str);\n\n  if (!match) {\n    throw new TypeError('invalid extended field value');\n  }\n\n  var charset = match[1].toLowerCase();\n  var encoded = match[2];\n  var value; // to binary string\n\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode);\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary);\n      break;\n\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8');\n      break;\n\n    default:\n      throw new TypeError('unsupported charset in extended field');\n  }\n\n  return value;\n}\n/**\r\n * Get ISO-8859-1 version of string.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction getlatin1(val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?');\n}\n/**\r\n * Parse Content-Disposition header string.\r\n *\r\n * @param {string} string\r\n * @return {object}\r\n * @public\r\n */\n\n\nfunction parse(string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required');\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string);\n\n  if (!match) {\n    throw new TypeError('invalid type format');\n  } // normalize type\n\n\n  var index = match[0].length;\n  var type = match[1].toLowerCase();\n  var key;\n  var names = [];\n  var params = {};\n  var value; // calculate index to start at\n\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';' ? index - 1 : index; // match parameters\n\n  while (match = PARAM_REGEXP.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format');\n    }\n\n    index += match[0].length;\n    key = match[1].toLowerCase();\n    value = match[2];\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter');\n    }\n\n    names.push(key);\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1);\n      value = decodefield(value); // overwrite existing value\n\n      params[key] = value;\n      continue;\n    }\n\n    if (typeof params[key] === 'string') {\n      continue;\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value.substr(1, value.length - 2).replace(QESC_REGEXP, '$1');\n    }\n\n    params[key] = value;\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format');\n  }\n\n  return new ContentDisposition(type, params);\n}\n/**\r\n * Percent decode a single character.\r\n *\r\n * @param {string} str\r\n * @param {string} hex\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction pdecode(str, hex) {\n  return String.fromCharCode(parseInt(hex, 16));\n}\n/**\r\n * Percent encode a single character.\r\n *\r\n * @param {string} char\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction pencode(char) {\n  return '%' + String(char).charCodeAt(0).toString(16).toUpperCase();\n}\n/**\r\n * Quote a string for HTTP.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction qstring(val) {\n  var str = String(val);\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"';\n}\n/**\r\n * Encode a Unicode string for HTTP (RFC 5987).\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction ustring(val) {\n  var str = String(val); // percent encode as UTF-8\n\n  var encoded = encodeURIComponent(str).replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode);\n  return 'UTF-8\\'\\'' + encoded;\n}\n/**\r\n * Class for parsed Content-Disposition header for v8 optimization\r\n *\r\n * @public\r\n * @param {string} type\r\n * @param {object} parameters\r\n * @constructor\r\n */\n\n\nfunction ContentDisposition(type, parameters) {\n  this.type = type;\n  this.parameters = parameters;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "contentDisposition",
        "parse",
        "basename",
        "require",
        "Buffer",
        "ENCODE_URL_ATTR_CHAR_REGEXP",
        "HEX_ESCAPE_REGEXP",
        "HEX_ESCAPE_REPLACE_REGEXP",
        "NON_LATIN1_REGEXP",
        "QESC_REGEXP",
        "QUOTE_REGEXP",
        "PARAM_REGEXP",
        "TEXT_REGEXP",
        "TOKEN_REGEXP",
        "EXT_VALUE_REGEXP",
        "DISPOSITION_TYPE_REGEXP",
        "filename",
        "options",
        "opts",
        "type",
        "params",
        "createparams",
        "fallback",
        "format",
        "ContentDisposition",
        "undefined",
        "TypeError",
        "test",
        "name",
        "isQuotedString",
        "fallbackName",
        "getlatin1",
        "hasFallback",
        "obj",
        "parameters",
        "string",
        "String",
        "toLowerCase",
        "param",
        "Object",
        "keys",
        "sort",
        "i",
        "length",
        "val",
        "substr",
        "ustring",
        "qstring",
        "decodefield",
        "str",
        "match",
        "exec",
        "charset",
        "encoded",
        "value",
        "binary",
        "replace",
        "pdecode",
        "from",
        "toString",
        "index",
        "key",
        "names",
        "lastIndex",
        "indexOf",
        "push",
        "slice",
        "hex",
        "fromCharCode",
        "parseInt",
        "pencode",
        "char",
        "charCodeAt",
        "toUpperCase",
        "encodeURIComponent"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-disposition\\",
      "sourcesContent": [
        "/*!\r\n * content-disposition\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = contentDisposition\r\nmodule.exports.parse = parse\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar basename = require('path').basename\r\nvar Buffer = require('safe-buffer').Buffer\r\n\r\n/**\r\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\r\n * @private\r\n */\r\n\r\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\r\n\r\n/**\r\n * RegExp to match percent encoding escape.\r\n * @private\r\n */\r\n\r\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\r\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\r\n\r\n/**\r\n * RegExp to match non-latin1 characters.\r\n * @private\r\n */\r\n\r\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\r\n\r\n/**\r\n * RegExp to match quoted-pair in RFC 2616\r\n *\r\n * quoted-pair = \"\\\" CHAR\r\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\r\n * @private\r\n */\r\n\r\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\r\n\r\n/**\r\n * RegExp to match chars that must be quoted-pair in RFC 2616\r\n * @private\r\n */\r\n\r\nvar QUOTE_REGEXP = /([\\\\\"])/g\r\n\r\n/**\r\n * RegExp for various RFC 2616 grammar\r\n *\r\n * parameter     = token \"=\" ( token | quoted-string )\r\n * token         = 1*<any CHAR except CTLs or separators>\r\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\r\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\r\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\r\n *               | \"{\" | \"}\" | SP | HT\r\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\r\n * qdtext        = <any TEXT except <\">>\r\n * quoted-pair   = \"\\\" CHAR\r\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\r\n * TEXT          = <any OCTET except CTLs, but including LWS>\r\n * LWS           = [CRLF] 1*( SP | HT )\r\n * CRLF          = CR LF\r\n * CR            = <US-ASCII CR, carriage return (13)>\r\n * LF            = <US-ASCII LF, linefeed (10)>\r\n * SP            = <US-ASCII SP, space (32)>\r\n * HT            = <US-ASCII HT, horizontal-tab (9)>\r\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\r\n * OCTET         = <any 8-bit sequence of data>\r\n * @private\r\n */\r\n\r\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\r\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\r\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\r\n\r\n/**\r\n * RegExp for various RFC 5987 grammar\r\n *\r\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\r\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\r\n * mime-charset  = 1*mime-charsetc\r\n * mime-charsetc = ALPHA / DIGIT\r\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\r\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\r\n *               / \"{\" / \"}\" / \"~\"\r\n * language      = ( 2*3ALPHA [ extlang ] )\r\n *               / 4ALPHA\r\n *               / 5*8ALPHA\r\n * extlang       = *3( \"-\" 3ALPHA )\r\n * value-chars   = *( pct-encoded / attr-char )\r\n * pct-encoded   = \"%\" HEXDIG HEXDIG\r\n * attr-char     = ALPHA / DIGIT\r\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\r\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\r\n * @private\r\n */\r\n\r\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\r\n\r\n/**\r\n * RegExp for various RFC 6266 grammar\r\n *\r\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\r\n * disp-ext-type    = token\r\n * disposition-parm = filename-parm | disp-ext-parm\r\n * filename-parm    = \"filename\" \"=\" value\r\n *                  | \"filename*\" \"=\" ext-value\r\n * disp-ext-parm    = token \"=\" value\r\n *                  | ext-token \"=\" ext-value\r\n * ext-token        = <the characters in token, followed by \"*\">\r\n * @private\r\n */\r\n\r\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\r\n\r\n/**\r\n * Create an attachment Content-Disposition header.\r\n *\r\n * @param {string} [filename]\r\n * @param {object} [options]\r\n * @param {string} [options.type=attachment]\r\n * @param {string|boolean} [options.fallback=true]\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction contentDisposition (filename, options) {\r\n  var opts = options || {}\r\n\r\n  // get type\r\n  var type = opts.type || 'attachment'\r\n\r\n  // get parameters\r\n  var params = createparams(filename, opts.fallback)\r\n\r\n  // format into string\r\n  return format(new ContentDisposition(type, params))\r\n}\r\n\r\n/**\r\n * Create parameters object from filename and fallback.\r\n *\r\n * @param {string} [filename]\r\n * @param {string|boolean} [fallback=true]\r\n * @return {object}\r\n * @private\r\n */\r\n\r\nfunction createparams (filename, fallback) {\r\n  if (filename === undefined) {\r\n    return\r\n  }\r\n\r\n  var params = {}\r\n\r\n  if (typeof filename !== 'string') {\r\n    throw new TypeError('filename must be a string')\r\n  }\r\n\r\n  // fallback defaults to true\r\n  if (fallback === undefined) {\r\n    fallback = true\r\n  }\r\n\r\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\r\n    throw new TypeError('fallback must be a string or boolean')\r\n  }\r\n\r\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\r\n    throw new TypeError('fallback must be ISO-8859-1 string')\r\n  }\r\n\r\n  // restrict to file base name\r\n  var name = basename(filename)\r\n\r\n  // determine if name is suitable for quoted string\r\n  var isQuotedString = TEXT_REGEXP.test(name)\r\n\r\n  // generate fallback name\r\n  var fallbackName = typeof fallback !== 'string'\r\n    ? fallback && getlatin1(name)\r\n    : basename(fallback)\r\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\r\n\r\n  // set extended filename parameter\r\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\r\n    params['filename*'] = name\r\n  }\r\n\r\n  // set filename parameter\r\n  if (isQuotedString || hasFallback) {\r\n    params.filename = hasFallback\r\n      ? fallbackName\r\n      : name\r\n  }\r\n\r\n  return params\r\n}\r\n\r\n/**\r\n * Format object to Content-Disposition header.\r\n *\r\n * @param {object} obj\r\n * @param {string} obj.type\r\n * @param {object} [obj.parameters]\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction format (obj) {\r\n  var parameters = obj.parameters\r\n  var type = obj.type\r\n\r\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\r\n    throw new TypeError('invalid type')\r\n  }\r\n\r\n  // start with normalized type\r\n  var string = String(type).toLowerCase()\r\n\r\n  // append parameters\r\n  if (parameters && typeof parameters === 'object') {\r\n    var param\r\n    var params = Object.keys(parameters).sort()\r\n\r\n    for (var i = 0; i < params.length; i++) {\r\n      param = params[i]\r\n\r\n      var val = param.substr(-1) === '*'\r\n        ? ustring(parameters[param])\r\n        : qstring(parameters[param])\r\n\r\n      string += '; ' + param + '=' + val\r\n    }\r\n  }\r\n\r\n  return string\r\n}\r\n\r\n/**\r\n * Decode a RFC 6987 field value (gracefully).\r\n *\r\n * @param {string} str\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction decodefield (str) {\r\n  var match = EXT_VALUE_REGEXP.exec(str)\r\n\r\n  if (!match) {\r\n    throw new TypeError('invalid extended field value')\r\n  }\r\n\r\n  var charset = match[1].toLowerCase()\r\n  var encoded = match[2]\r\n  var value\r\n\r\n  // to binary string\r\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\r\n\r\n  switch (charset) {\r\n    case 'iso-8859-1':\r\n      value = getlatin1(binary)\r\n      break\r\n    case 'utf-8':\r\n      value = Buffer.from(binary, 'binary').toString('utf8')\r\n      break\r\n    default:\r\n      throw new TypeError('unsupported charset in extended field')\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Get ISO-8859-1 version of string.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getlatin1 (val) {\r\n  // simple Unicode -> ISO-8859-1 transformation\r\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\r\n}\r\n\r\n/**\r\n * Parse Content-Disposition header string.\r\n *\r\n * @param {string} string\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse (string) {\r\n  if (!string || typeof string !== 'string') {\r\n    throw new TypeError('argument string is required')\r\n  }\r\n\r\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\r\n\r\n  if (!match) {\r\n    throw new TypeError('invalid type format')\r\n  }\r\n\r\n  // normalize type\r\n  var index = match[0].length\r\n  var type = match[1].toLowerCase()\r\n\r\n  var key\r\n  var names = []\r\n  var params = {}\r\n  var value\r\n\r\n  // calculate index to start at\r\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\r\n    ? index - 1\r\n    : index\r\n\r\n  // match parameters\r\n  while ((match = PARAM_REGEXP.exec(string))) {\r\n    if (match.index !== index) {\r\n      throw new TypeError('invalid parameter format')\r\n    }\r\n\r\n    index += match[0].length\r\n    key = match[1].toLowerCase()\r\n    value = match[2]\r\n\r\n    if (names.indexOf(key) !== -1) {\r\n      throw new TypeError('invalid duplicate parameter')\r\n    }\r\n\r\n    names.push(key)\r\n\r\n    if (key.indexOf('*') + 1 === key.length) {\r\n      // decode extended value\r\n      key = key.slice(0, -1)\r\n      value = decodefield(value)\r\n\r\n      // overwrite existing value\r\n      params[key] = value\r\n      continue\r\n    }\r\n\r\n    if (typeof params[key] === 'string') {\r\n      continue\r\n    }\r\n\r\n    if (value[0] === '\"') {\r\n      // remove quotes and escapes\r\n      value = value\r\n        .substr(1, value.length - 2)\r\n        .replace(QESC_REGEXP, '$1')\r\n    }\r\n\r\n    params[key] = value\r\n  }\r\n\r\n  if (index !== -1 && index !== string.length) {\r\n    throw new TypeError('invalid parameter format')\r\n  }\r\n\r\n  return new ContentDisposition(type, params)\r\n}\r\n\r\n/**\r\n * Percent decode a single character.\r\n *\r\n * @param {string} str\r\n * @param {string} hex\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction pdecode (str, hex) {\r\n  return String.fromCharCode(parseInt(hex, 16))\r\n}\r\n\r\n/**\r\n * Percent encode a single character.\r\n *\r\n * @param {string} char\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction pencode (char) {\r\n  return '%' + String(char)\r\n    .charCodeAt(0)\r\n    .toString(16)\r\n    .toUpperCase()\r\n}\r\n\r\n/**\r\n * Quote a string for HTTP.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction qstring (val) {\r\n  var str = String(val)\r\n\r\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\r\n}\r\n\r\n/**\r\n * Encode a Unicode string for HTTP (RFC 5987).\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction ustring (val) {\r\n  var str = String(val)\r\n\r\n  // percent encode as UTF-8\r\n  var encoded = encodeURIComponent(str)\r\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\r\n\r\n  return 'UTF-8\\'\\'' + encoded\r\n}\r\n\r\n/**\r\n * Class for parsed Content-Disposition header for v8 optimization\r\n *\r\n * @public\r\n * @param {string} type\r\n * @param {object} parameters\r\n * @constructor\r\n */\r\n\r\nfunction ContentDisposition (type, parameters) {\r\n  this.type = type\r\n  this.parameters = parameters\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210931
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\content-type\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\content-type\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-type\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-type\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-type\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-type\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-type\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * content-type\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\r\n *\r\n * parameter     = token \"=\" ( token / quoted-string )\r\n * token         = 1*tchar\r\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\r\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\r\n *               / DIGIT / ALPHA\r\n *               ; any VCHAR, except delimiters\r\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\r\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\r\n * obs-text      = %x80-FF\r\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\r\n */\n\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g;\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;\n/**\r\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\r\n *\r\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\r\n * obs-text    = %x80-FF\r\n */\n\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g;\n/**\r\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\r\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g;\n/**\r\n * RegExp to match type in RFC 7231 sec 3.1.1.1\r\n *\r\n * media-type = type \"/\" subtype\r\n * type       = token\r\n * subtype    = token\r\n */\n\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nexports.format = format;\nexports.parse = parse;\n/**\r\n * Format object to media type.\r\n *\r\n * @param {object} obj\r\n * @return {string}\r\n * @public\r\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required');\n  }\n\n  var parameters = obj.parameters;\n  var type = obj.type;\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type');\n  }\n\n  var string = type; // append parameters\n\n  if (parameters && typeof parameters === 'object') {\n    var param;\n    var params = Object.keys(parameters).sort();\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i];\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name');\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param]);\n    }\n  }\n\n  return string;\n}\n/**\r\n * Parse media type to object.\r\n *\r\n * @param {string|object} string\r\n * @return {Object}\r\n * @public\r\n */\n\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required');\n  } // support req/res-like objects as argument\n\n\n  var header = typeof string === 'object' ? getcontenttype(string) : string;\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string');\n  }\n\n  var index = header.indexOf(';');\n  var type = index !== -1 ? header.substr(0, index).trim() : header.trim();\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type');\n  }\n\n  var obj = new ContentType(type.toLowerCase()); // parse parameters\n\n  if (index !== -1) {\n    var key;\n    var match;\n    var value;\n    PARAM_REGEXP.lastIndex = index;\n\n    while (match = PARAM_REGEXP.exec(header)) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format');\n      }\n\n      index += match[0].length;\n      key = match[1].toLowerCase();\n      value = match[2];\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value.substr(1, value.length - 2).replace(QESC_REGEXP, '$1');\n      }\n\n      obj.parameters[key] = value;\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format');\n    }\n  }\n\n  return obj;\n}\n/**\r\n * Get content-type from req/res objects.\r\n *\r\n * @param {object}\r\n * @return {Object}\r\n * @private\r\n */\n\n\nfunction getcontenttype(obj) {\n  var header;\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type');\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type'];\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object');\n  }\n\n  return header;\n}\n/**\r\n * Quote a string if necessary.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction qstring(val) {\n  var str = String(val); // no need to quote tokens\n\n  if (TOKEN_REGEXP.test(str)) {\n    return str;\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value');\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"';\n}\n/**\r\n * Class to represent a content type.\r\n * @private\r\n */\n\n\nfunction ContentType(type) {\n  this.parameters = Object.create(null);\n  this.type = type;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "PARAM_REGEXP",
        "TEXT_REGEXP",
        "TOKEN_REGEXP",
        "QESC_REGEXP",
        "QUOTE_REGEXP",
        "TYPE_REGEXP",
        "exports",
        "format",
        "parse",
        "obj",
        "TypeError",
        "parameters",
        "type",
        "test",
        "string",
        "param",
        "params",
        "Object",
        "keys",
        "sort",
        "i",
        "length",
        "qstring",
        "header",
        "getcontenttype",
        "index",
        "indexOf",
        "substr",
        "trim",
        "ContentType",
        "toLowerCase",
        "key",
        "match",
        "value",
        "lastIndex",
        "exec",
        "replace",
        "getHeader",
        "headers",
        "val",
        "str",
        "String",
        "create"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\content-type\\",
      "sourcesContent": [
        "/*!\r\n * content-type\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\r\n *\r\n * parameter     = token \"=\" ( token / quoted-string )\r\n * token         = 1*tchar\r\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\r\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\r\n *               / DIGIT / ALPHA\r\n *               ; any VCHAR, except delimiters\r\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\r\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\r\n * obs-text      = %x80-FF\r\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\r\n */\r\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\r\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\r\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\r\n\r\n/**\r\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\r\n *\r\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\r\n * obs-text    = %x80-FF\r\n */\r\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\r\n\r\n/**\r\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\r\n */\r\nvar QUOTE_REGEXP = /([\\\\\"])/g\r\n\r\n/**\r\n * RegExp to match type in RFC 7231 sec 3.1.1.1\r\n *\r\n * media-type = type \"/\" subtype\r\n * type       = token\r\n * subtype    = token\r\n */\r\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.format = format\r\nexports.parse = parse\r\n\r\n/**\r\n * Format object to media type.\r\n *\r\n * @param {object} obj\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction format (obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    throw new TypeError('argument obj is required')\r\n  }\r\n\r\n  var parameters = obj.parameters\r\n  var type = obj.type\r\n\r\n  if (!type || !TYPE_REGEXP.test(type)) {\r\n    throw new TypeError('invalid type')\r\n  }\r\n\r\n  var string = type\r\n\r\n  // append parameters\r\n  if (parameters && typeof parameters === 'object') {\r\n    var param\r\n    var params = Object.keys(parameters).sort()\r\n\r\n    for (var i = 0; i < params.length; i++) {\r\n      param = params[i]\r\n\r\n      if (!TOKEN_REGEXP.test(param)) {\r\n        throw new TypeError('invalid parameter name')\r\n      }\r\n\r\n      string += '; ' + param + '=' + qstring(parameters[param])\r\n    }\r\n  }\r\n\r\n  return string\r\n}\r\n\r\n/**\r\n * Parse media type to object.\r\n *\r\n * @param {string|object} string\r\n * @return {Object}\r\n * @public\r\n */\r\n\r\nfunction parse (string) {\r\n  if (!string) {\r\n    throw new TypeError('argument string is required')\r\n  }\r\n\r\n  // support req/res-like objects as argument\r\n  var header = typeof string === 'object'\r\n    ? getcontenttype(string)\r\n    : string\r\n\r\n  if (typeof header !== 'string') {\r\n    throw new TypeError('argument string is required to be a string')\r\n  }\r\n\r\n  var index = header.indexOf(';')\r\n  var type = index !== -1\r\n    ? header.substr(0, index).trim()\r\n    : header.trim()\r\n\r\n  if (!TYPE_REGEXP.test(type)) {\r\n    throw new TypeError('invalid media type')\r\n  }\r\n\r\n  var obj = new ContentType(type.toLowerCase())\r\n\r\n  // parse parameters\r\n  if (index !== -1) {\r\n    var key\r\n    var match\r\n    var value\r\n\r\n    PARAM_REGEXP.lastIndex = index\r\n\r\n    while ((match = PARAM_REGEXP.exec(header))) {\r\n      if (match.index !== index) {\r\n        throw new TypeError('invalid parameter format')\r\n      }\r\n\r\n      index += match[0].length\r\n      key = match[1].toLowerCase()\r\n      value = match[2]\r\n\r\n      if (value[0] === '\"') {\r\n        // remove quotes and escapes\r\n        value = value\r\n          .substr(1, value.length - 2)\r\n          .replace(QESC_REGEXP, '$1')\r\n      }\r\n\r\n      obj.parameters[key] = value\r\n    }\r\n\r\n    if (index !== header.length) {\r\n      throw new TypeError('invalid parameter format')\r\n    }\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\n/**\r\n * Get content-type from req/res objects.\r\n *\r\n * @param {object}\r\n * @return {Object}\r\n * @private\r\n */\r\n\r\nfunction getcontenttype (obj) {\r\n  var header\r\n\r\n  if (typeof obj.getHeader === 'function') {\r\n    // res-like\r\n    header = obj.getHeader('content-type')\r\n  } else if (typeof obj.headers === 'object') {\r\n    // req-like\r\n    header = obj.headers && obj.headers['content-type']\r\n  }\r\n\r\n  if (typeof header !== 'string') {\r\n    throw new TypeError('content-type header is missing from object')\r\n  }\r\n\r\n  return header\r\n}\r\n\r\n/**\r\n * Quote a string if necessary.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction qstring (val) {\r\n  var str = String(val)\r\n\r\n  // no need to quote tokens\r\n  if (TOKEN_REGEXP.test(str)) {\r\n    return str\r\n  }\r\n\r\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\r\n    throw new TypeError('invalid parameter value')\r\n  }\r\n\r\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\r\n}\r\n\r\n/**\r\n * Class to represent a content type.\r\n * @private\r\n */\r\nfunction ContentType (type) {\r\n  this.parameters = Object.create(null)\r\n  this.type = type\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210977
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\send\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\send\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * send\r\n * Copyright(c) 2012 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar createError = require('http-errors');\n\nvar debug = require('debug')('send');\n\nvar deprecate = require('depd')('send');\n\nvar destroy = require('destroy');\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar etag = require('etag');\n\nvar fresh = require('fresh');\n\nvar fs = require('fs');\n\nvar mime = require('mime');\n\nvar ms = require('ms');\n\nvar onFinished = require('on-finished');\n\nvar parseRange = require('range-parser');\n\nvar path = require('path');\n\nvar statuses = require('statuses');\n\nvar Stream = require('stream');\n\nvar util = require('util');\n/**\r\n * Path function references.\r\n * @private\r\n */\n\n\nvar extname = path.extname;\nvar join = path.join;\nvar normalize = path.normalize;\nvar resolve = path.resolve;\nvar sep = path.sep;\n/**\r\n * Regular expression for identifying a bytes Range header.\r\n * @private\r\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/;\n/**\r\n * Maximum value allowed for the max age.\r\n * @private\r\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000; // 1 year\n\n/**\r\n * Regular expression to match a path with a directory up component.\r\n * @private\r\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = send;\nmodule.exports.mime = mime;\n/**\r\n * Return a `SendStream` for `req` and `path`.\r\n *\r\n * @param {object} req\r\n * @param {string} path\r\n * @param {object} [options]\r\n * @return {SendStream}\r\n * @public\r\n */\n\nfunction send(req, path, options) {\n  return new SendStream(req, path, options);\n}\n/**\r\n * Initialize a `SendStream` with the given `path`.\r\n *\r\n * @param {Request} req\r\n * @param {String} path\r\n * @param {object} [options]\r\n * @private\r\n */\n\n\nfunction SendStream(req, path, options) {\n  Stream.call(this);\n  var opts = options || {};\n  this.options = opts;\n  this.path = path;\n  this.req = req;\n  this._acceptRanges = opts.acceptRanges !== undefined ? Boolean(opts.acceptRanges) : true;\n  this._cacheControl = opts.cacheControl !== undefined ? Boolean(opts.cacheControl) : true;\n  this._etag = opts.etag !== undefined ? Boolean(opts.etag) : true;\n  this._dotfiles = opts.dotfiles !== undefined ? opts.dotfiles : 'ignore';\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"');\n  }\n\n  this._hidden = Boolean(opts.hidden);\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead');\n  } // legacy support\n\n\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined;\n  }\n\n  this._extensions = opts.extensions !== undefined ? normalizeList(opts.extensions, 'extensions option') : [];\n  this._immutable = opts.immutable !== undefined ? Boolean(opts.immutable) : false;\n  this._index = opts.index !== undefined ? normalizeList(opts.index, 'index option') : ['index.html'];\n  this._lastModified = opts.lastModified !== undefined ? Boolean(opts.lastModified) : true;\n  this._maxage = opts.maxAge || opts.maxage;\n  this._maxage = typeof this._maxage === 'string' ? ms(this._maxage) : Number(this._maxage);\n  this._maxage = !isNaN(this._maxage) ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE) : 0;\n  this._root = opts.root ? resolve(opts.root) : null;\n\n  if (!this._root && opts.from) {\n    this.from(opts.from);\n  }\n}\n/**\r\n * Inherits from `Stream`.\r\n */\n\n\nutil.inherits(SendStream, Stream);\n/**\r\n * Enable or disable etag generation.\r\n *\r\n * @param {Boolean} val\r\n * @return {SendStream}\r\n * @api public\r\n */\n\nSendStream.prototype.etag = deprecate.function(function etag(val) {\n  this._etag = Boolean(val);\n  debug('etag %s', this._etag);\n  return this;\n}, 'send.etag: pass etag as option');\n/**\r\n * Enable or disable \"hidden\" (dot) files.\r\n *\r\n * @param {Boolean} path\r\n * @return {SendStream}\r\n * @api public\r\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden(val) {\n  this._hidden = Boolean(val);\n  this._dotfiles = undefined;\n  debug('hidden %s', this._hidden);\n  return this;\n}, 'send.hidden: use dotfiles option');\n/**\r\n * Set index `paths`, set to a falsy\r\n * value to disable index support.\r\n *\r\n * @param {String|Boolean|Array} paths\r\n * @return {SendStream}\r\n * @api public\r\n */\n\nSendStream.prototype.index = deprecate.function(function index(paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument');\n  debug('index %o', paths);\n  this._index = index;\n  return this;\n}, 'send.index: pass index as option');\n/**\r\n * Set root `path`.\r\n *\r\n * @param {String} path\r\n * @return {SendStream}\r\n * @api public\r\n */\n\nSendStream.prototype.root = function root(path) {\n  this._root = resolve(String(path));\n  debug('root %s', this._root);\n  return this;\n};\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root, 'send.from: pass root as option');\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root, 'send.root: pass root as option');\n/**\r\n * Set max-age to `maxAge`.\r\n *\r\n * @param {Number} maxAge\r\n * @return {SendStream}\r\n * @api public\r\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage(maxAge) {\n  this._maxage = typeof maxAge === 'string' ? ms(maxAge) : Number(maxAge);\n  this._maxage = !isNaN(this._maxage) ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE) : 0;\n  debug('max-age %d', this._maxage);\n  return this;\n}, 'send.maxage: pass maxAge as option');\n/**\r\n * Emit error with `status`.\r\n *\r\n * @param {number} status\r\n * @param {Error} [err]\r\n * @private\r\n */\n\nSendStream.prototype.error = function error(status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createError(status, err, {\n      expose: false\n    }));\n  }\n\n  var res = this.res;\n  var msg = statuses[status] || String(status);\n  var doc = createHtmlDocument('Error', escapeHtml(msg)); // clear existing headers\n\n  clearHeaders(res); // add error headers\n\n  if (err && err.headers) {\n    setHeaders(res, err.headers);\n  } // send basic response\n\n\n  res.statusCode = status;\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n  res.setHeader('Content-Length', Buffer.byteLength(doc));\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.end(doc);\n};\n/**\r\n * Check if the pathname ends with \"/\".\r\n *\r\n * @return {boolean}\r\n * @private\r\n */\n\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash() {\n  return this.path[this.path.length - 1] === '/';\n};\n/**\r\n * Check if this is a conditional GET request.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\n\n\nSendStream.prototype.isConditionalGET = function isConditionalGET() {\n  return this.req.headers['if-match'] || this.req.headers['if-unmodified-since'] || this.req.headers['if-none-match'] || this.req.headers['if-modified-since'];\n};\n/**\r\n * Check if the request preconditions failed.\r\n *\r\n * @return {boolean}\r\n * @private\r\n */\n\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure() {\n  var req = this.req;\n  var res = this.res; // if-match\n\n  var match = req.headers['if-match'];\n\n  if (match) {\n    var etag = res.getHeader('ETag');\n    return !etag || match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag;\n    });\n  } // if-unmodified-since\n\n\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since']);\n\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'));\n    return isNaN(lastModified) || lastModified > unmodifiedSince;\n  }\n\n  return false;\n};\n/**\r\n * Strip content-* header fields.\r\n *\r\n * @private\r\n */\n\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields() {\n  var res = this.res;\n  var headers = getHeaderNames(res);\n\n  for (var i = 0; i < headers.length; i++) {\n    var header = headers[i];\n\n    if (header.substr(0, 8) === 'content-' && header !== 'content-location') {\n      res.removeHeader(header);\n    }\n  }\n};\n/**\r\n * Respond with 304 not modified.\r\n *\r\n * @api private\r\n */\n\n\nSendStream.prototype.notModified = function notModified() {\n  var res = this.res;\n  debug('not modified');\n  this.removeContentHeaderFields();\n  res.statusCode = 304;\n  res.end();\n};\n/**\r\n * Raise error that headers already sent.\r\n *\r\n * @api private\r\n */\n\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent() {\n  var err = new Error('Can\\'t set headers after they are sent.');\n  debug('headers already sent');\n  this.error(500, err);\n};\n/**\r\n * Check if the request is cacheable, aka\r\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\n\n\nSendStream.prototype.isCachable = function isCachable() {\n  var statusCode = this.res.statusCode;\n  return statusCode >= 200 && statusCode < 300 || statusCode === 304;\n};\n/**\r\n * Handle stat() error.\r\n *\r\n * @param {Error} error\r\n * @private\r\n */\n\n\nSendStream.prototype.onStatError = function onStatError(error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error);\n      break;\n\n    default:\n      this.error(500, error);\n      break;\n  }\n};\n/**\r\n * Check if the cache is fresh.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\n\n\nSendStream.prototype.isFresh = function isFresh() {\n  return fresh(this.req.headers, {\n    'etag': this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  });\n};\n/**\r\n * Check if the range is fresh.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\n\n\nSendStream.prototype.isRangeFresh = function isRangeFresh() {\n  var ifRange = this.req.headers['if-range'];\n\n  if (!ifRange) {\n    return true;\n  } // if-range as etag\n\n\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag');\n    return Boolean(etag && ifRange.indexOf(etag) !== -1);\n  } // if-range as modified date\n\n\n  var lastModified = this.res.getHeader('Last-Modified');\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange);\n};\n/**\r\n * Redirect to path.\r\n *\r\n * @param {string} path\r\n * @private\r\n */\n\n\nSendStream.prototype.redirect = function redirect(path) {\n  var res = this.res;\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path);\n    return;\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403);\n    return;\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'));\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' + escapeHtml(loc) + '</a>'); // redirect\n\n  res.statusCode = 301;\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n  res.setHeader('Content-Length', Buffer.byteLength(doc));\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('Location', loc);\n  res.end(doc);\n};\n/**\r\n * Pipe to `res.\r\n *\r\n * @param {Stream} res\r\n * @return {Stream} res\r\n * @api public\r\n */\n\n\nSendStream.prototype.pipe = function pipe(res) {\n  // root path\n  var root = this._root; // references\n\n  this.res = res; // decode the path\n\n  var path = decode(this.path);\n\n  if (path === -1) {\n    this.error(400);\n    return res;\n  } // null byte(s)\n\n\n  if (~path.indexOf('\\0')) {\n    this.error(400);\n    return res;\n  }\n\n  var parts;\n\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path);\n    } // malicious path\n\n\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path);\n      this.error(403);\n      return res;\n    } // explode path parts\n\n\n    parts = path.split(sep); // join / normalize from optional root dir\n\n    path = normalize(join(root, path));\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path);\n      this.error(403);\n      return res;\n    } // explode path parts\n\n\n    parts = normalize(path).split(sep); // resolve the path\n\n    path = resolve(path);\n  } // dotfile handling\n\n\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles; // legacy support\n\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.' ? this._hidden ? 'allow' : 'ignore' : 'allow';\n    }\n\n    debug('%s dotfile \"%s\"', access, path);\n\n    switch (access) {\n      case 'allow':\n        break;\n\n      case 'deny':\n        this.error(403);\n        return res;\n\n      case 'ignore':\n      default:\n        this.error(404);\n        return res;\n    }\n  } // index file support\n\n\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path);\n    return res;\n  }\n\n  this.sendFile(path);\n  return res;\n};\n/**\r\n * Transfer `path`.\r\n *\r\n * @param {String} path\r\n * @api public\r\n */\n\n\nSendStream.prototype.send = function send(path, stat) {\n  var len = stat.size;\n  var options = this.options;\n  var opts = {};\n  var res = this.res;\n  var req = this.req;\n  var ranges = req.headers.range;\n  var offset = options.start || 0;\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent();\n    return;\n  }\n\n  debug('pipe \"%s\"', path); // set header fields\n\n  this.setHeader(path, stat); // set content-type\n\n  this.type(path); // conditional GET support\n\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412);\n      return;\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified();\n      return;\n    }\n  } // adjust len to start/end options\n\n\n  len = Math.max(0, len - offset);\n\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1;\n    if (len > bytes) len = bytes;\n  } // Range support\n\n\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    }); // If-Range support\n\n    if (!this.isRangeFresh()) {\n      debug('range stale');\n      ranges = -2;\n    } // unsatisfiable\n\n\n    if (ranges === -1) {\n      debug('range unsatisfiable'); // Content-Range\n\n      res.setHeader('Content-Range', contentRange('bytes', len)); // 416 Requested Range Not Satisfiable\n\n      return this.error(416, {\n        headers: {\n          'Content-Range': res.getHeader('Content-Range')\n        }\n      });\n    } // valid (syntactically invalid/multiple ranges are treated as a regular response)\n\n\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges); // Content-Range\n\n      res.statusCode = 206;\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0])); // adjust for requested range\n\n      offset += ranges[0].start;\n      len = ranges[0].end - ranges[0].start + 1;\n    }\n  } // clone options\n\n\n  for (var prop in options) {\n    opts[prop] = options[prop];\n  } // set read options\n\n\n  opts.start = offset;\n  opts.end = Math.max(offset, offset + len - 1); // content-length\n\n  res.setHeader('Content-Length', len); // HEAD support\n\n  if (req.method === 'HEAD') {\n    res.end();\n    return;\n  }\n\n  this.stream(path, opts);\n};\n/**\r\n * Transfer file for `path`.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\n\n\nSendStream.prototype.sendFile = function sendFile(path) {\n  var i = 0;\n  var self = this;\n  debug('stat \"%s\"', path);\n  fs.stat(path, function onstat(err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err);\n    }\n\n    if (err) return self.onStatError(err);\n    if (stat.isDirectory()) return self.redirect(path);\n    self.emit('file', path, stat);\n    self.send(path, stat);\n  });\n\n  function next(err) {\n    if (self._extensions.length <= i) {\n      return err ? self.onStatError(err) : self.error(404);\n    }\n\n    var p = path + '.' + self._extensions[i++];\n    debug('stat \"%s\"', p);\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err);\n      if (stat.isDirectory()) return next();\n      self.emit('file', p, stat);\n      self.send(p, stat);\n    });\n  }\n};\n/**\r\n * Transfer index for `path`.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\n\n\nSendStream.prototype.sendIndex = function sendIndex(path) {\n  var i = -1;\n  var self = this;\n\n  function next(err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err);\n      return self.error(404);\n    }\n\n    var p = join(path, self._index[i]);\n    debug('stat \"%s\"', p);\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err);\n      if (stat.isDirectory()) return next();\n      self.emit('file', p, stat);\n      self.send(p, stat);\n    });\n  }\n\n  next();\n};\n/**\r\n * Stream `path` to the response.\r\n *\r\n * @param {String} path\r\n * @param {Object} options\r\n * @api private\r\n */\n\n\nSendStream.prototype.stream = function stream(path, options) {\n  // TODO: this is all lame, refactor meeee\n  var finished = false;\n  var self = this;\n  var res = this.res; // pipe\n\n  var stream = fs.createReadStream(path, options);\n  this.emit('stream', stream);\n  stream.pipe(res); // response finished, done with the fd\n\n  onFinished(res, function onfinished() {\n    finished = true;\n    destroy(stream);\n  }); // error handling code-smell\n\n  stream.on('error', function onerror(err) {\n    // request already finished\n    if (finished) return; // clean up stream\n\n    finished = true;\n    destroy(stream); // error\n\n    self.onStatError(err);\n  }); // end\n\n  stream.on('end', function onend() {\n    self.emit('end');\n  });\n};\n/**\r\n * Set content-type based on `path`\r\n * if it hasn't been explicitly set.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\n\n\nSendStream.prototype.type = function type(path) {\n  var res = this.res;\n  if (res.getHeader('Content-Type')) return;\n  var type = mime.lookup(path);\n\n  if (!type) {\n    debug('no content-type');\n    return;\n  }\n\n  var charset = mime.charsets.lookup(type);\n  debug('content-type %s', type);\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''));\n};\n/**\r\n * Set response header fields, most\r\n * fields may be pre-defined.\r\n *\r\n * @param {String} path\r\n * @param {Object} stat\r\n * @api private\r\n */\n\n\nSendStream.prototype.setHeader = function setHeader(path, stat) {\n  var res = this.res;\n  this.emit('headers', res, path, stat);\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges');\n    res.setHeader('Accept-Ranges', 'bytes');\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000);\n\n    if (this._immutable) {\n      cacheControl += ', immutable';\n    }\n\n    debug('cache-control %s', cacheControl);\n    res.setHeader('Cache-Control', cacheControl);\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString();\n    debug('modified %s', modified);\n    res.setHeader('Last-Modified', modified);\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat);\n    debug('etag %s', val);\n    res.setHeader('ETag', val);\n  }\n};\n/**\r\n * Clear all headers from a response.\r\n *\r\n * @param {object} res\r\n * @private\r\n */\n\n\nfunction clearHeaders(res) {\n  var headers = getHeaderNames(res);\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i]);\n  }\n}\n/**\r\n * Collapse all leading slashes into a single slash\r\n *\r\n * @param {string} str\r\n * @private\r\n */\n\n\nfunction collapseLeadingSlashes(str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break;\n    }\n  }\n\n  return i > 1 ? '/' + str.substr(i) : str;\n}\n/**\r\n * Determine if path parts contain a dotfile.\r\n *\r\n * @api private\r\n */\n\n\nfunction containsDotFile(parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part.length > 1 && part[0] === '.') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Create a Content-Range header.\r\n *\r\n * @param {string} type\r\n * @param {number} size\r\n * @param {array} [range]\r\n */\n\n\nfunction contentRange(type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size;\n}\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\n\n\nfunction createHtmlDocument(title, body) {\n  return '<!DOCTYPE html>\\n' + '<html lang=\"en\">\\n' + '<head>\\n' + '<meta charset=\"utf-8\">\\n' + '<title>' + title + '</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>' + body + '</pre>\\n' + '</body>\\n' + '</html>\\n';\n}\n/**\r\n * decodeURIComponent.\r\n *\r\n * Allows V8 to only deoptimize this fn instead of all\r\n * of send().\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\n\n\nfunction decode(path) {\n  try {\n    return decodeURIComponent(path);\n  } catch (err) {\n    return -1;\n  }\n}\n/**\r\n * Get the header names on a respnse.\r\n *\r\n * @param {object} res\r\n * @returns {array[string]}\r\n * @private\r\n */\n\n\nfunction getHeaderNames(res) {\n  return typeof res.getHeaderNames !== 'function' ? Object.keys(res._headers || {}) : res.getHeaderNames();\n}\n/**\r\n * Determine if emitter has listeners of a given type.\r\n *\r\n * The way to do this check is done three different ways in Node.js >= 0.8\r\n * so this consolidates them into a minimal set using instance methods.\r\n *\r\n * @param {EventEmitter} emitter\r\n * @param {string} type\r\n * @returns {boolean}\r\n * @private\r\n */\n\n\nfunction hasListeners(emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function' ? emitter.listeners(type).length : emitter.listenerCount(type);\n  return count > 0;\n}\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\n\n\nfunction headersSent(res) {\n  return typeof res.headersSent !== 'boolean' ? Boolean(res._header) : res.headersSent;\n}\n/**\r\n * Normalize the index option into an array.\r\n *\r\n * @param {boolean|string|array} val\r\n * @param {string} name\r\n * @private\r\n */\n\n\nfunction normalizeList(val, name) {\n  var list = [].concat(val || []);\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false');\n    }\n  }\n\n  return list;\n}\n/**\r\n * Parse an HTTP Date into a number.\r\n *\r\n * @param {string} date\r\n * @private\r\n */\n\n\nfunction parseHttpDate(date) {\n  var timestamp = date && Date.parse(date);\n  return typeof timestamp === 'number' ? timestamp : NaN;\n}\n/**\r\n * Parse a HTTP token list.\r\n *\r\n * @param {string} str\r\n * @private\r\n */\n\n\nfunction parseTokenList(str) {\n  var end = 0;\n  var list = [];\n  var start = 0; // gather tokens\n\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i + 1;\n        }\n\n        break;\n\n      case 0x2c:\n        /* , */\n        list.push(str.substring(start, end));\n        start = end = i + 1;\n        break;\n\n      default:\n        end = i + 1;\n        break;\n    }\n  } // final token\n\n\n  list.push(str.substring(start, end));\n  return list;\n}\n/**\r\n * Set an object of headers on a response.\r\n *\r\n * @param {object} res\r\n * @param {object} headers\r\n * @private\r\n */\n\n\nfunction setHeaders(res, headers) {\n  var keys = Object.keys(headers);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    res.setHeader(key, headers[key]);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "createError",
        "require",
        "debug",
        "deprecate",
        "destroy",
        "encodeUrl",
        "escapeHtml",
        "etag",
        "fresh",
        "fs",
        "mime",
        "ms",
        "onFinished",
        "parseRange",
        "path",
        "statuses",
        "Stream",
        "util",
        "extname",
        "join",
        "normalize",
        "resolve",
        "sep",
        "BYTES_RANGE_REGEXP",
        "MAX_MAXAGE",
        "UP_PATH_REGEXP",
        "module",
        "exports",
        "send",
        "req",
        "options",
        "SendStream",
        "call",
        "opts",
        "_acceptRanges",
        "acceptRanges",
        "undefined",
        "Boolean",
        "_cacheControl",
        "cacheControl",
        "_etag",
        "_dotfiles",
        "dotfiles",
        "TypeError",
        "_hidden",
        "hidden",
        "_extensions",
        "extensions",
        "normalizeList",
        "_immutable",
        "immutable",
        "_index",
        "index",
        "_lastModified",
        "lastModified",
        "_maxage",
        "maxAge",
        "maxage",
        "Number",
        "isNaN",
        "Math",
        "min",
        "max",
        "_root",
        "root",
        "from",
        "inherits",
        "prototype",
        "function",
        "val",
        "paths",
        "String",
        "error",
        "status",
        "err",
        "hasListeners",
        "emit",
        "expose",
        "res",
        "msg",
        "doc",
        "createHtmlDocument",
        "clearHeaders",
        "headers",
        "setHeaders",
        "statusCode",
        "setHeader",
        "Buffer",
        "byteLength",
        "end",
        "hasTrailingSlash",
        "length",
        "isConditionalGET",
        "isPreconditionFailure",
        "match",
        "getHeader",
        "parseTokenList",
        "every",
        "unmodifiedSince",
        "parseHttpDate",
        "removeContentHeaderFields",
        "getHeaderNames",
        "i",
        "header",
        "substr",
        "removeHeader",
        "notModified",
        "headersAlreadySent",
        "Error",
        "isCachable",
        "onStatError",
        "code",
        "isFresh",
        "isRangeFresh",
        "ifRange",
        "indexOf",
        "redirect",
        "loc",
        "collapseLeadingSlashes",
        "pipe",
        "decode",
        "parts",
        "test",
        "split",
        "containsDotFile",
        "access",
        "sendIndex",
        "sendFile",
        "stat",
        "len",
        "size",
        "ranges",
        "range",
        "offset",
        "start",
        "headersSent",
        "type",
        "bytes",
        "combine",
        "contentRange",
        "prop",
        "method",
        "stream",
        "self",
        "onstat",
        "next",
        "isDirectory",
        "p",
        "finished",
        "createReadStream",
        "onfinished",
        "on",
        "onerror",
        "onend",
        "lookup",
        "charset",
        "charsets",
        "floor",
        "modified",
        "mtime",
        "toUTCString",
        "str",
        "part",
        "title",
        "body",
        "decodeURIComponent",
        "Object",
        "keys",
        "_headers",
        "emitter",
        "count",
        "listenerCount",
        "listeners",
        "_header",
        "name",
        "list",
        "concat",
        "date",
        "timestamp",
        "Date",
        "parse",
        "NaN",
        "charCodeAt",
        "push",
        "substring",
        "key"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\",
      "sourcesContent": [
        "/*!\r\n * send\r\n * Copyright(c) 2012 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar createError = require('http-errors')\r\nvar debug = require('debug')('send')\r\nvar deprecate = require('depd')('send')\r\nvar destroy = require('destroy')\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar etag = require('etag')\r\nvar fresh = require('fresh')\r\nvar fs = require('fs')\r\nvar mime = require('mime')\r\nvar ms = require('ms')\r\nvar onFinished = require('on-finished')\r\nvar parseRange = require('range-parser')\r\nvar path = require('path')\r\nvar statuses = require('statuses')\r\nvar Stream = require('stream')\r\nvar util = require('util')\r\n\r\n/**\r\n * Path function references.\r\n * @private\r\n */\r\n\r\nvar extname = path.extname\r\nvar join = path.join\r\nvar normalize = path.normalize\r\nvar resolve = path.resolve\r\nvar sep = path.sep\r\n\r\n/**\r\n * Regular expression for identifying a bytes Range header.\r\n * @private\r\n */\r\n\r\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\r\n\r\n/**\r\n * Maximum value allowed for the max age.\r\n * @private\r\n */\r\n\r\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\r\n\r\n/**\r\n * Regular expression to match a path with a directory up component.\r\n * @private\r\n */\r\n\r\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = send\r\nmodule.exports.mime = mime\r\n\r\n/**\r\n * Return a `SendStream` for `req` and `path`.\r\n *\r\n * @param {object} req\r\n * @param {string} path\r\n * @param {object} [options]\r\n * @return {SendStream}\r\n * @public\r\n */\r\n\r\nfunction send (req, path, options) {\r\n  return new SendStream(req, path, options)\r\n}\r\n\r\n/**\r\n * Initialize a `SendStream` with the given `path`.\r\n *\r\n * @param {Request} req\r\n * @param {String} path\r\n * @param {object} [options]\r\n * @private\r\n */\r\n\r\nfunction SendStream (req, path, options) {\r\n  Stream.call(this)\r\n\r\n  var opts = options || {}\r\n\r\n  this.options = opts\r\n  this.path = path\r\n  this.req = req\r\n\r\n  this._acceptRanges = opts.acceptRanges !== undefined\r\n    ? Boolean(opts.acceptRanges)\r\n    : true\r\n\r\n  this._cacheControl = opts.cacheControl !== undefined\r\n    ? Boolean(opts.cacheControl)\r\n    : true\r\n\r\n  this._etag = opts.etag !== undefined\r\n    ? Boolean(opts.etag)\r\n    : true\r\n\r\n  this._dotfiles = opts.dotfiles !== undefined\r\n    ? opts.dotfiles\r\n    : 'ignore'\r\n\r\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\r\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\r\n  }\r\n\r\n  this._hidden = Boolean(opts.hidden)\r\n\r\n  if (opts.hidden !== undefined) {\r\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\r\n  }\r\n\r\n  // legacy support\r\n  if (opts.dotfiles === undefined) {\r\n    this._dotfiles = undefined\r\n  }\r\n\r\n  this._extensions = opts.extensions !== undefined\r\n    ? normalizeList(opts.extensions, 'extensions option')\r\n    : []\r\n\r\n  this._immutable = opts.immutable !== undefined\r\n    ? Boolean(opts.immutable)\r\n    : false\r\n\r\n  this._index = opts.index !== undefined\r\n    ? normalizeList(opts.index, 'index option')\r\n    : ['index.html']\r\n\r\n  this._lastModified = opts.lastModified !== undefined\r\n    ? Boolean(opts.lastModified)\r\n    : true\r\n\r\n  this._maxage = opts.maxAge || opts.maxage\r\n  this._maxage = typeof this._maxage === 'string'\r\n    ? ms(this._maxage)\r\n    : Number(this._maxage)\r\n  this._maxage = !isNaN(this._maxage)\r\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\r\n    : 0\r\n\r\n  this._root = opts.root\r\n    ? resolve(opts.root)\r\n    : null\r\n\r\n  if (!this._root && opts.from) {\r\n    this.from(opts.from)\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from `Stream`.\r\n */\r\n\r\nutil.inherits(SendStream, Stream)\r\n\r\n/**\r\n * Enable or disable etag generation.\r\n *\r\n * @param {Boolean} val\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.etag = deprecate.function(function etag (val) {\r\n  this._etag = Boolean(val)\r\n  debug('etag %s', this._etag)\r\n  return this\r\n}, 'send.etag: pass etag as option')\r\n\r\n/**\r\n * Enable or disable \"hidden\" (dot) files.\r\n *\r\n * @param {Boolean} path\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\r\n  this._hidden = Boolean(val)\r\n  this._dotfiles = undefined\r\n  debug('hidden %s', this._hidden)\r\n  return this\r\n}, 'send.hidden: use dotfiles option')\r\n\r\n/**\r\n * Set index `paths`, set to a falsy\r\n * value to disable index support.\r\n *\r\n * @param {String|Boolean|Array} paths\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.index = deprecate.function(function index (paths) {\r\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\r\n  debug('index %o', paths)\r\n  this._index = index\r\n  return this\r\n}, 'send.index: pass index as option')\r\n\r\n/**\r\n * Set root `path`.\r\n *\r\n * @param {String} path\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.root = function root (path) {\r\n  this._root = resolve(String(path))\r\n  debug('root %s', this._root)\r\n  return this\r\n}\r\n\r\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\r\n  'send.from: pass root as option')\r\n\r\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\r\n  'send.root: pass root as option')\r\n\r\n/**\r\n * Set max-age to `maxAge`.\r\n *\r\n * @param {Number} maxAge\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\r\n  this._maxage = typeof maxAge === 'string'\r\n    ? ms(maxAge)\r\n    : Number(maxAge)\r\n  this._maxage = !isNaN(this._maxage)\r\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\r\n    : 0\r\n  debug('max-age %d', this._maxage)\r\n  return this\r\n}, 'send.maxage: pass maxAge as option')\r\n\r\n/**\r\n * Emit error with `status`.\r\n *\r\n * @param {number} status\r\n * @param {Error} [err]\r\n * @private\r\n */\r\n\r\nSendStream.prototype.error = function error (status, err) {\r\n  // emit if listeners instead of responding\r\n  if (hasListeners(this, 'error')) {\r\n    return this.emit('error', createError(status, err, {\r\n      expose: false\r\n    }))\r\n  }\r\n\r\n  var res = this.res\r\n  var msg = statuses[status] || String(status)\r\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\r\n\r\n  // clear existing headers\r\n  clearHeaders(res)\r\n\r\n  // add error headers\r\n  if (err && err.headers) {\r\n    setHeaders(res, err.headers)\r\n  }\r\n\r\n  // send basic response\r\n  res.statusCode = status\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n  res.setHeader('X-Content-Type-Options', 'nosniff')\r\n  res.end(doc)\r\n}\r\n\r\n/**\r\n * Check if the pathname ends with \"/\".\r\n *\r\n * @return {boolean}\r\n * @private\r\n */\r\n\r\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\r\n  return this.path[this.path.length - 1] === '/'\r\n}\r\n\r\n/**\r\n * Check if this is a conditional GET request.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\r\n  return this.req.headers['if-match'] ||\r\n    this.req.headers['if-unmodified-since'] ||\r\n    this.req.headers['if-none-match'] ||\r\n    this.req.headers['if-modified-since']\r\n}\r\n\r\n/**\r\n * Check if the request preconditions failed.\r\n *\r\n * @return {boolean}\r\n * @private\r\n */\r\n\r\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\r\n  var req = this.req\r\n  var res = this.res\r\n\r\n  // if-match\r\n  var match = req.headers['if-match']\r\n  if (match) {\r\n    var etag = res.getHeader('ETag')\r\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\r\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\r\n    }))\r\n  }\r\n\r\n  // if-unmodified-since\r\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\r\n  if (!isNaN(unmodifiedSince)) {\r\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\r\n    return isNaN(lastModified) || lastModified > unmodifiedSince\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Strip content-* header fields.\r\n *\r\n * @private\r\n */\r\n\r\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\r\n  var res = this.res\r\n  var headers = getHeaderNames(res)\r\n\r\n  for (var i = 0; i < headers.length; i++) {\r\n    var header = headers[i]\r\n    if (header.substr(0, 8) === 'content-' && header !== 'content-location') {\r\n      res.removeHeader(header)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Respond with 304 not modified.\r\n *\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.notModified = function notModified () {\r\n  var res = this.res\r\n  debug('not modified')\r\n  this.removeContentHeaderFields()\r\n  res.statusCode = 304\r\n  res.end()\r\n}\r\n\r\n/**\r\n * Raise error that headers already sent.\r\n *\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\r\n  var err = new Error('Can\\'t set headers after they are sent.')\r\n  debug('headers already sent')\r\n  this.error(500, err)\r\n}\r\n\r\n/**\r\n * Check if the request is cacheable, aka\r\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isCachable = function isCachable () {\r\n  var statusCode = this.res.statusCode\r\n  return (statusCode >= 200 && statusCode < 300) ||\r\n    statusCode === 304\r\n}\r\n\r\n/**\r\n * Handle stat() error.\r\n *\r\n * @param {Error} error\r\n * @private\r\n */\r\n\r\nSendStream.prototype.onStatError = function onStatError (error) {\r\n  switch (error.code) {\r\n    case 'ENAMETOOLONG':\r\n    case 'ENOENT':\r\n    case 'ENOTDIR':\r\n      this.error(404, error)\r\n      break\r\n    default:\r\n      this.error(500, error)\r\n      break\r\n  }\r\n}\r\n\r\n/**\r\n * Check if the cache is fresh.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isFresh = function isFresh () {\r\n  return fresh(this.req.headers, {\r\n    'etag': this.res.getHeader('ETag'),\r\n    'last-modified': this.res.getHeader('Last-Modified')\r\n  })\r\n}\r\n\r\n/**\r\n * Check if the range is fresh.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\r\n  var ifRange = this.req.headers['if-range']\r\n\r\n  if (!ifRange) {\r\n    return true\r\n  }\r\n\r\n  // if-range as etag\r\n  if (ifRange.indexOf('\"') !== -1) {\r\n    var etag = this.res.getHeader('ETag')\r\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\r\n  }\r\n\r\n  // if-range as modified date\r\n  var lastModified = this.res.getHeader('Last-Modified')\r\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\r\n}\r\n\r\n/**\r\n * Redirect to path.\r\n *\r\n * @param {string} path\r\n * @private\r\n */\r\n\r\nSendStream.prototype.redirect = function redirect (path) {\r\n  var res = this.res\r\n\r\n  if (hasListeners(this, 'directory')) {\r\n    this.emit('directory', res, path)\r\n    return\r\n  }\r\n\r\n  if (this.hasTrailingSlash()) {\r\n    this.error(403)\r\n    return\r\n  }\r\n\r\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\r\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\r\n    escapeHtml(loc) + '</a>')\r\n\r\n  // redirect\r\n  res.statusCode = 301\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n  res.setHeader('X-Content-Type-Options', 'nosniff')\r\n  res.setHeader('Location', loc)\r\n  res.end(doc)\r\n}\r\n\r\n/**\r\n * Pipe to `res.\r\n *\r\n * @param {Stream} res\r\n * @return {Stream} res\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.pipe = function pipe (res) {\r\n  // root path\r\n  var root = this._root\r\n\r\n  // references\r\n  this.res = res\r\n\r\n  // decode the path\r\n  var path = decode(this.path)\r\n  if (path === -1) {\r\n    this.error(400)\r\n    return res\r\n  }\r\n\r\n  // null byte(s)\r\n  if (~path.indexOf('\\0')) {\r\n    this.error(400)\r\n    return res\r\n  }\r\n\r\n  var parts\r\n  if (root !== null) {\r\n    // normalize\r\n    if (path) {\r\n      path = normalize('.' + sep + path)\r\n    }\r\n\r\n    // malicious path\r\n    if (UP_PATH_REGEXP.test(path)) {\r\n      debug('malicious path \"%s\"', path)\r\n      this.error(403)\r\n      return res\r\n    }\r\n\r\n    // explode path parts\r\n    parts = path.split(sep)\r\n\r\n    // join / normalize from optional root dir\r\n    path = normalize(join(root, path))\r\n  } else {\r\n    // \"..\" is malicious without \"root\"\r\n    if (UP_PATH_REGEXP.test(path)) {\r\n      debug('malicious path \"%s\"', path)\r\n      this.error(403)\r\n      return res\r\n    }\r\n\r\n    // explode path parts\r\n    parts = normalize(path).split(sep)\r\n\r\n    // resolve the path\r\n    path = resolve(path)\r\n  }\r\n\r\n  // dotfile handling\r\n  if (containsDotFile(parts)) {\r\n    var access = this._dotfiles\r\n\r\n    // legacy support\r\n    if (access === undefined) {\r\n      access = parts[parts.length - 1][0] === '.'\r\n        ? (this._hidden ? 'allow' : 'ignore')\r\n        : 'allow'\r\n    }\r\n\r\n    debug('%s dotfile \"%s\"', access, path)\r\n    switch (access) {\r\n      case 'allow':\r\n        break\r\n      case 'deny':\r\n        this.error(403)\r\n        return res\r\n      case 'ignore':\r\n      default:\r\n        this.error(404)\r\n        return res\r\n    }\r\n  }\r\n\r\n  // index file support\r\n  if (this._index.length && this.hasTrailingSlash()) {\r\n    this.sendIndex(path)\r\n    return res\r\n  }\r\n\r\n  this.sendFile(path)\r\n  return res\r\n}\r\n\r\n/**\r\n * Transfer `path`.\r\n *\r\n * @param {String} path\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.send = function send (path, stat) {\r\n  var len = stat.size\r\n  var options = this.options\r\n  var opts = {}\r\n  var res = this.res\r\n  var req = this.req\r\n  var ranges = req.headers.range\r\n  var offset = options.start || 0\r\n\r\n  if (headersSent(res)) {\r\n    // impossible to send now\r\n    this.headersAlreadySent()\r\n    return\r\n  }\r\n\r\n  debug('pipe \"%s\"', path)\r\n\r\n  // set header fields\r\n  this.setHeader(path, stat)\r\n\r\n  // set content-type\r\n  this.type(path)\r\n\r\n  // conditional GET support\r\n  if (this.isConditionalGET()) {\r\n    if (this.isPreconditionFailure()) {\r\n      this.error(412)\r\n      return\r\n    }\r\n\r\n    if (this.isCachable() && this.isFresh()) {\r\n      this.notModified()\r\n      return\r\n    }\r\n  }\r\n\r\n  // adjust len to start/end options\r\n  len = Math.max(0, len - offset)\r\n  if (options.end !== undefined) {\r\n    var bytes = options.end - offset + 1\r\n    if (len > bytes) len = bytes\r\n  }\r\n\r\n  // Range support\r\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\r\n    // parse\r\n    ranges = parseRange(len, ranges, {\r\n      combine: true\r\n    })\r\n\r\n    // If-Range support\r\n    if (!this.isRangeFresh()) {\r\n      debug('range stale')\r\n      ranges = -2\r\n    }\r\n\r\n    // unsatisfiable\r\n    if (ranges === -1) {\r\n      debug('range unsatisfiable')\r\n\r\n      // Content-Range\r\n      res.setHeader('Content-Range', contentRange('bytes', len))\r\n\r\n      // 416 Requested Range Not Satisfiable\r\n      return this.error(416, {\r\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\r\n      })\r\n    }\r\n\r\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\r\n    if (ranges !== -2 && ranges.length === 1) {\r\n      debug('range %j', ranges)\r\n\r\n      // Content-Range\r\n      res.statusCode = 206\r\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\r\n\r\n      // adjust for requested range\r\n      offset += ranges[0].start\r\n      len = ranges[0].end - ranges[0].start + 1\r\n    }\r\n  }\r\n\r\n  // clone options\r\n  for (var prop in options) {\r\n    opts[prop] = options[prop]\r\n  }\r\n\r\n  // set read options\r\n  opts.start = offset\r\n  opts.end = Math.max(offset, offset + len - 1)\r\n\r\n  // content-length\r\n  res.setHeader('Content-Length', len)\r\n\r\n  // HEAD support\r\n  if (req.method === 'HEAD') {\r\n    res.end()\r\n    return\r\n  }\r\n\r\n  this.stream(path, opts)\r\n}\r\n\r\n/**\r\n * Transfer file for `path`.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\nSendStream.prototype.sendFile = function sendFile (path) {\r\n  var i = 0\r\n  var self = this\r\n\r\n  debug('stat \"%s\"', path)\r\n  fs.stat(path, function onstat (err, stat) {\r\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\r\n      // not found, check extensions\r\n      return next(err)\r\n    }\r\n    if (err) return self.onStatError(err)\r\n    if (stat.isDirectory()) return self.redirect(path)\r\n    self.emit('file', path, stat)\r\n    self.send(path, stat)\r\n  })\r\n\r\n  function next (err) {\r\n    if (self._extensions.length <= i) {\r\n      return err\r\n        ? self.onStatError(err)\r\n        : self.error(404)\r\n    }\r\n\r\n    var p = path + '.' + self._extensions[i++]\r\n\r\n    debug('stat \"%s\"', p)\r\n    fs.stat(p, function (err, stat) {\r\n      if (err) return next(err)\r\n      if (stat.isDirectory()) return next()\r\n      self.emit('file', p, stat)\r\n      self.send(p, stat)\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Transfer index for `path`.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\nSendStream.prototype.sendIndex = function sendIndex (path) {\r\n  var i = -1\r\n  var self = this\r\n\r\n  function next (err) {\r\n    if (++i >= self._index.length) {\r\n      if (err) return self.onStatError(err)\r\n      return self.error(404)\r\n    }\r\n\r\n    var p = join(path, self._index[i])\r\n\r\n    debug('stat \"%s\"', p)\r\n    fs.stat(p, function (err, stat) {\r\n      if (err) return next(err)\r\n      if (stat.isDirectory()) return next()\r\n      self.emit('file', p, stat)\r\n      self.send(p, stat)\r\n    })\r\n  }\r\n\r\n  next()\r\n}\r\n\r\n/**\r\n * Stream `path` to the response.\r\n *\r\n * @param {String} path\r\n * @param {Object} options\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.stream = function stream (path, options) {\r\n  // TODO: this is all lame, refactor meeee\r\n  var finished = false\r\n  var self = this\r\n  var res = this.res\r\n\r\n  // pipe\r\n  var stream = fs.createReadStream(path, options)\r\n  this.emit('stream', stream)\r\n  stream.pipe(res)\r\n\r\n  // response finished, done with the fd\r\n  onFinished(res, function onfinished () {\r\n    finished = true\r\n    destroy(stream)\r\n  })\r\n\r\n  // error handling code-smell\r\n  stream.on('error', function onerror (err) {\r\n    // request already finished\r\n    if (finished) return\r\n\r\n    // clean up stream\r\n    finished = true\r\n    destroy(stream)\r\n\r\n    // error\r\n    self.onStatError(err)\r\n  })\r\n\r\n  // end\r\n  stream.on('end', function onend () {\r\n    self.emit('end')\r\n  })\r\n}\r\n\r\n/**\r\n * Set content-type based on `path`\r\n * if it hasn't been explicitly set.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.type = function type (path) {\r\n  var res = this.res\r\n\r\n  if (res.getHeader('Content-Type')) return\r\n\r\n  var type = mime.lookup(path)\r\n\r\n  if (!type) {\r\n    debug('no content-type')\r\n    return\r\n  }\r\n\r\n  var charset = mime.charsets.lookup(type)\r\n\r\n  debug('content-type %s', type)\r\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\r\n}\r\n\r\n/**\r\n * Set response header fields, most\r\n * fields may be pre-defined.\r\n *\r\n * @param {String} path\r\n * @param {Object} stat\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.setHeader = function setHeader (path, stat) {\r\n  var res = this.res\r\n\r\n  this.emit('headers', res, path, stat)\r\n\r\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\r\n    debug('accept ranges')\r\n    res.setHeader('Accept-Ranges', 'bytes')\r\n  }\r\n\r\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\r\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\r\n\r\n    if (this._immutable) {\r\n      cacheControl += ', immutable'\r\n    }\r\n\r\n    debug('cache-control %s', cacheControl)\r\n    res.setHeader('Cache-Control', cacheControl)\r\n  }\r\n\r\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\r\n    var modified = stat.mtime.toUTCString()\r\n    debug('modified %s', modified)\r\n    res.setHeader('Last-Modified', modified)\r\n  }\r\n\r\n  if (this._etag && !res.getHeader('ETag')) {\r\n    var val = etag(stat)\r\n    debug('etag %s', val)\r\n    res.setHeader('ETag', val)\r\n  }\r\n}\r\n\r\n/**\r\n * Clear all headers from a response.\r\n *\r\n * @param {object} res\r\n * @private\r\n */\r\n\r\nfunction clearHeaders (res) {\r\n  var headers = getHeaderNames(res)\r\n\r\n  for (var i = 0; i < headers.length; i++) {\r\n    res.removeHeader(headers[i])\r\n  }\r\n}\r\n\r\n/**\r\n * Collapse all leading slashes into a single slash\r\n *\r\n * @param {string} str\r\n * @private\r\n */\r\nfunction collapseLeadingSlashes (str) {\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str[i] !== '/') {\r\n      break\r\n    }\r\n  }\r\n\r\n  return i > 1\r\n    ? '/' + str.substr(i)\r\n    : str\r\n}\r\n\r\n/**\r\n * Determine if path parts contain a dotfile.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction containsDotFile (parts) {\r\n  for (var i = 0; i < parts.length; i++) {\r\n    var part = parts[i]\r\n    if (part.length > 1 && part[0] === '.') {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Create a Content-Range header.\r\n *\r\n * @param {string} type\r\n * @param {number} size\r\n * @param {array} [range]\r\n */\r\n\r\nfunction contentRange (type, size, range) {\r\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\r\n}\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (title, body) {\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>' + title + '</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * decodeURIComponent.\r\n *\r\n * Allows V8 to only deoptimize this fn instead of all\r\n * of send().\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\n\r\nfunction decode (path) {\r\n  try {\r\n    return decodeURIComponent(path)\r\n  } catch (err) {\r\n    return -1\r\n  }\r\n}\r\n\r\n/**\r\n * Get the header names on a respnse.\r\n *\r\n * @param {object} res\r\n * @returns {array[string]}\r\n * @private\r\n */\r\n\r\nfunction getHeaderNames (res) {\r\n  return typeof res.getHeaderNames !== 'function'\r\n    ? Object.keys(res._headers || {})\r\n    : res.getHeaderNames()\r\n}\r\n\r\n/**\r\n * Determine if emitter has listeners of a given type.\r\n *\r\n * The way to do this check is done three different ways in Node.js >= 0.8\r\n * so this consolidates them into a minimal set using instance methods.\r\n *\r\n * @param {EventEmitter} emitter\r\n * @param {string} type\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction hasListeners (emitter, type) {\r\n  var count = typeof emitter.listenerCount !== 'function'\r\n    ? emitter.listeners(type).length\r\n    : emitter.listenerCount(type)\r\n\r\n  return count > 0\r\n}\r\n\r\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction headersSent (res) {\r\n  return typeof res.headersSent !== 'boolean'\r\n    ? Boolean(res._header)\r\n    : res.headersSent\r\n}\r\n\r\n/**\r\n * Normalize the index option into an array.\r\n *\r\n * @param {boolean|string|array} val\r\n * @param {string} name\r\n * @private\r\n */\r\n\r\nfunction normalizeList (val, name) {\r\n  var list = [].concat(val || [])\r\n\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (typeof list[i] !== 'string') {\r\n      throw new TypeError(name + ' must be array of strings or false')\r\n    }\r\n  }\r\n\r\n  return list\r\n}\r\n\r\n/**\r\n * Parse an HTTP Date into a number.\r\n *\r\n * @param {string} date\r\n * @private\r\n */\r\n\r\nfunction parseHttpDate (date) {\r\n  var timestamp = date && Date.parse(date)\r\n\r\n  return typeof timestamp === 'number'\r\n    ? timestamp\r\n    : NaN\r\n}\r\n\r\n/**\r\n * Parse a HTTP token list.\r\n *\r\n * @param {string} str\r\n * @private\r\n */\r\n\r\nfunction parseTokenList (str) {\r\n  var end = 0\r\n  var list = []\r\n  var start = 0\r\n\r\n  // gather tokens\r\n  for (var i = 0, len = str.length; i < len; i++) {\r\n    switch (str.charCodeAt(i)) {\r\n      case 0x20: /*   */\r\n        if (start === end) {\r\n          start = end = i + 1\r\n        }\r\n        break\r\n      case 0x2c: /* , */\r\n        list.push(str.substring(start, end))\r\n        start = end = i + 1\r\n        break\r\n      default:\r\n        end = i + 1\r\n        break\r\n    }\r\n  }\r\n\r\n  // final token\r\n  list.push(str.substring(start, end))\r\n\r\n  return list\r\n}\r\n\r\n/**\r\n * Set an object of headers on a response.\r\n *\r\n * @param {object} res\r\n * @param {object} headers\r\n * @private\r\n */\r\n\r\nfunction setHeaders (res, headers) {\r\n  var keys = Object.keys(headers)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    res.setHeader(key, headers[key])\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211913
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\http-errors\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\http-errors\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\http-errors\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\http-errors\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\http-errors\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\http-errors\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\http-errors\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * http-errors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar deprecate = require('depd')('http-errors');\n\nvar setPrototypeOf = require('setprototypeof');\n\nvar statuses = require('statuses');\n\nvar inherits = require('inherits');\n\nvar toIdentifier = require('toidentifier');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = createError;\nmodule.exports.HttpError = createHttpErrorConstructor(); // Populate exports for all constructors\n\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError);\n/**\r\n * Get the code class of a status code.\r\n * @private\r\n */\n\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00');\n}\n/**\r\n * Create a new HTTP Error.\r\n *\r\n * @returns {Error}\r\n * @public\r\n */\n\n\nfunction createError() {\n  // so much arity going on ~_~\n  var err;\n  var msg;\n  var status = 500;\n  var props = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error) {\n      err = arg;\n      status = err.status || err.statusCode || status;\n      continue;\n    }\n\n    switch (typeof arg) {\n      case 'string':\n        msg = arg;\n        break;\n\n      case 'number':\n        status = arg;\n\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)');\n        }\n\n        break;\n\n      case 'object':\n        props = arg;\n        break;\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes');\n  }\n\n  if (typeof status !== 'number' || !statuses[status] && (status < 400 || status >= 600)) {\n    status = 500;\n  } // constructor\n\n\n  var HttpError = createError[status] || createError[codeClass(status)];\n\n  if (!err) {\n    // create error\n    err = HttpError ? new HttpError(msg) : new Error(msg || statuses[status]);\n    Error.captureStackTrace(err, createError);\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500;\n    err.status = err.statusCode = status;\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key];\n    }\n  }\n\n  return err;\n}\n/**\r\n * Create HTTP error abstract base class.\r\n * @private\r\n */\n\n\nfunction createHttpErrorConstructor() {\n  function HttpError() {\n    throw new TypeError('cannot construct abstract class');\n  }\n\n  inherits(HttpError, Error);\n  return HttpError;\n}\n/**\r\n * Create a constructor for a client error.\r\n * @private\r\n */\n\n\nfunction createClientErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ClientError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ClientError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ClientError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ClientError, HttpError);\n  nameFunc(ClientError, className);\n  ClientError.prototype.status = code;\n  ClientError.prototype.statusCode = code;\n  ClientError.prototype.expose = true;\n  return ClientError;\n}\n/**\r\n * Create a constructor for a server error.\r\n * @private\r\n */\n\n\nfunction createServerErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ServerError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ServerError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ServerError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ServerError, HttpError);\n  nameFunc(ServerError, className);\n  ServerError.prototype.status = code;\n  ServerError.prototype.statusCode = code;\n  ServerError.prototype.expose = false;\n  return ServerError;\n}\n/**\r\n * Set the name of a function, if possible.\r\n * @private\r\n */\n\n\nfunction nameFunc(func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name');\n\n  if (desc && desc.configurable) {\n    desc.value = name;\n    Object.defineProperty(func, 'name', desc);\n  }\n}\n/**\r\n * Populate the exports object with constructors for every error class.\r\n * @private\r\n */\n\n\nfunction populateConstructorExports(exports, codes, HttpError) {\n  codes.forEach(function forEachCode(code) {\n    var CodeError;\n    var name = toIdentifier(statuses[code]);\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code);\n        break;\n\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code);\n        break;\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError;\n      exports[name] = CodeError;\n    }\n  }); // backwards-compatibility\n\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot, '\"I\\'mateapot\"; use \"ImATeapot\" instead');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "deprecate",
        "require",
        "setPrototypeOf",
        "statuses",
        "inherits",
        "toIdentifier",
        "module",
        "exports",
        "createError",
        "HttpError",
        "createHttpErrorConstructor",
        "populateConstructorExports",
        "codes",
        "codeClass",
        "status",
        "Number",
        "String",
        "charAt",
        "err",
        "msg",
        "props",
        "i",
        "arguments",
        "length",
        "arg",
        "Error",
        "statusCode",
        "captureStackTrace",
        "expose",
        "key",
        "TypeError",
        "createClientErrorConstructor",
        "name",
        "code",
        "className",
        "match",
        "ClientError",
        "message",
        "prototype",
        "Object",
        "defineProperty",
        "enumerable",
        "configurable",
        "value",
        "writable",
        "nameFunc",
        "createServerErrorConstructor",
        "ServerError",
        "func",
        "desc",
        "getOwnPropertyDescriptor",
        "forEach",
        "forEachCode",
        "CodeError",
        "function",
        "ImATeapot"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\http-errors\\",
      "sourcesContent": [
        "/*!\r\n * http-errors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar deprecate = require('depd')('http-errors')\r\nvar setPrototypeOf = require('setprototypeof')\r\nvar statuses = require('statuses')\r\nvar inherits = require('inherits')\r\nvar toIdentifier = require('toidentifier')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = createError\r\nmodule.exports.HttpError = createHttpErrorConstructor()\r\n\r\n// Populate exports for all constructors\r\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\r\n\r\n/**\r\n * Get the code class of a status code.\r\n * @private\r\n */\r\n\r\nfunction codeClass (status) {\r\n  return Number(String(status).charAt(0) + '00')\r\n}\r\n\r\n/**\r\n * Create a new HTTP Error.\r\n *\r\n * @returns {Error}\r\n * @public\r\n */\r\n\r\nfunction createError () {\r\n  // so much arity going on ~_~\r\n  var err\r\n  var msg\r\n  var status = 500\r\n  var props = {}\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    var arg = arguments[i]\r\n    if (arg instanceof Error) {\r\n      err = arg\r\n      status = err.status || err.statusCode || status\r\n      continue\r\n    }\r\n    switch (typeof arg) {\r\n      case 'string':\r\n        msg = arg\r\n        break\r\n      case 'number':\r\n        status = arg\r\n        if (i !== 0) {\r\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\r\n        }\r\n        break\r\n      case 'object':\r\n        props = arg\r\n        break\r\n    }\r\n  }\r\n\r\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\r\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\r\n  }\r\n\r\n  if (typeof status !== 'number' ||\r\n    (!statuses[status] && (status < 400 || status >= 600))) {\r\n    status = 500\r\n  }\r\n\r\n  // constructor\r\n  var HttpError = createError[status] || createError[codeClass(status)]\r\n\r\n  if (!err) {\r\n    // create error\r\n    err = HttpError\r\n      ? new HttpError(msg)\r\n      : new Error(msg || statuses[status])\r\n    Error.captureStackTrace(err, createError)\r\n  }\r\n\r\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\r\n    // add properties to generic error\r\n    err.expose = status < 500\r\n    err.status = err.statusCode = status\r\n  }\r\n\r\n  for (var key in props) {\r\n    if (key !== 'status' && key !== 'statusCode') {\r\n      err[key] = props[key]\r\n    }\r\n  }\r\n\r\n  return err\r\n}\r\n\r\n/**\r\n * Create HTTP error abstract base class.\r\n * @private\r\n */\r\n\r\nfunction createHttpErrorConstructor () {\r\n  function HttpError () {\r\n    throw new TypeError('cannot construct abstract class')\r\n  }\r\n\r\n  inherits(HttpError, Error)\r\n\r\n  return HttpError\r\n}\r\n\r\n/**\r\n * Create a constructor for a client error.\r\n * @private\r\n */\r\n\r\nfunction createClientErrorConstructor (HttpError, name, code) {\r\n  var className = name.match(/Error$/) ? name : name + 'Error'\r\n\r\n  function ClientError (message) {\r\n    // create the error object\r\n    var msg = message != null ? message : statuses[code]\r\n    var err = new Error(msg)\r\n\r\n    // capture a stack trace to the construction point\r\n    Error.captureStackTrace(err, ClientError)\r\n\r\n    // adjust the [[Prototype]]\r\n    setPrototypeOf(err, ClientError.prototype)\r\n\r\n    // redefine the error message\r\n    Object.defineProperty(err, 'message', {\r\n      enumerable: true,\r\n      configurable: true,\r\n      value: msg,\r\n      writable: true\r\n    })\r\n\r\n    // redefine the error name\r\n    Object.defineProperty(err, 'name', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      value: className,\r\n      writable: true\r\n    })\r\n\r\n    return err\r\n  }\r\n\r\n  inherits(ClientError, HttpError)\r\n  nameFunc(ClientError, className)\r\n\r\n  ClientError.prototype.status = code\r\n  ClientError.prototype.statusCode = code\r\n  ClientError.prototype.expose = true\r\n\r\n  return ClientError\r\n}\r\n\r\n/**\r\n * Create a constructor for a server error.\r\n * @private\r\n */\r\n\r\nfunction createServerErrorConstructor (HttpError, name, code) {\r\n  var className = name.match(/Error$/) ? name : name + 'Error'\r\n\r\n  function ServerError (message) {\r\n    // create the error object\r\n    var msg = message != null ? message : statuses[code]\r\n    var err = new Error(msg)\r\n\r\n    // capture a stack trace to the construction point\r\n    Error.captureStackTrace(err, ServerError)\r\n\r\n    // adjust the [[Prototype]]\r\n    setPrototypeOf(err, ServerError.prototype)\r\n\r\n    // redefine the error message\r\n    Object.defineProperty(err, 'message', {\r\n      enumerable: true,\r\n      configurable: true,\r\n      value: msg,\r\n      writable: true\r\n    })\r\n\r\n    // redefine the error name\r\n    Object.defineProperty(err, 'name', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      value: className,\r\n      writable: true\r\n    })\r\n\r\n    return err\r\n  }\r\n\r\n  inherits(ServerError, HttpError)\r\n  nameFunc(ServerError, className)\r\n\r\n  ServerError.prototype.status = code\r\n  ServerError.prototype.statusCode = code\r\n  ServerError.prototype.expose = false\r\n\r\n  return ServerError\r\n}\r\n\r\n/**\r\n * Set the name of a function, if possible.\r\n * @private\r\n */\r\n\r\nfunction nameFunc (func, name) {\r\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\r\n\r\n  if (desc && desc.configurable) {\r\n    desc.value = name\r\n    Object.defineProperty(func, 'name', desc)\r\n  }\r\n}\r\n\r\n/**\r\n * Populate the exports object with constructors for every error class.\r\n * @private\r\n */\r\n\r\nfunction populateConstructorExports (exports, codes, HttpError) {\r\n  codes.forEach(function forEachCode (code) {\r\n    var CodeError\r\n    var name = toIdentifier(statuses[code])\r\n\r\n    switch (codeClass(code)) {\r\n      case 400:\r\n        CodeError = createClientErrorConstructor(HttpError, name, code)\r\n        break\r\n      case 500:\r\n        CodeError = createServerErrorConstructor(HttpError, name, code)\r\n        break\r\n    }\r\n\r\n    if (CodeError) {\r\n      // export the constructor\r\n      exports[code] = CodeError\r\n      exports[name] = CodeError\r\n    }\r\n  })\r\n\r\n  // backwards-compatibility\r\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\r\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211243
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\inherits\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\inherits\\\\inherits.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\inherits\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\inherits\\inherits.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\inherits\\inherits.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\inherits\\inherits.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\inherits\\",
        "sourceFileName": "inherits.js"
      }
    },
    "ast": null,
    "code": "try {\n  var util = require('util');\n\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaGVyaXRzLmpzIl0sIm5hbWVzIjpbInV0aWwiLCJyZXF1aXJlIiwiaW5oZXJpdHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSTtBQUNGLE1BQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsTUFBSSxPQUFPRCxJQUFJLENBQUNFLFFBQVosS0FBeUIsVUFBN0IsRUFBeUMsTUFBTSxFQUFOO0FBQ3pDQyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLElBQUksQ0FBQ0UsUUFBdEI7QUFDRCxDQUpELENBSUUsT0FBT0csQ0FBUCxFQUFVO0FBQ1ZGLEVBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsT0FBTyxDQUFDLHVCQUFELENBQXhCO0FBQ0QiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFxub2RlX21vZHVsZXNcXGluaGVyaXRzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ0cnkge1xyXG4gIHZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xyXG4gIGlmICh0eXBlb2YgdXRpbC5pbmhlcml0cyAhPT0gJ2Z1bmN0aW9uJykgdGhyb3cgJyc7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSB1dGlsLmluaGVyaXRzO1xyXG59IGNhdGNoIChlKSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2luaGVyaXRzX2Jyb3dzZXIuanMnKTtcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "inherits.js"
      ],
      "names": [
        "util",
        "require",
        "inherits",
        "module",
        "exports",
        "e"
      ],
      "mappings": "AAAA,IAAI;AACF,MAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAI,OAAOD,IAAI,CAACE,QAAZ,KAAyB,UAA7B,EAAyC,MAAM,EAAN;AACzCC,EAAAA,MAAM,CAACC,OAAP,GAAiBJ,IAAI,CAACE,QAAtB;AACD,CAJD,CAIE,OAAOG,CAAP,EAAU;AACVF,EAAAA,MAAM,CAACC,OAAP,GAAiBH,OAAO,CAAC,uBAAD,CAAxB;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\inherits\\",
      "sourcesContent": [
        "try {\r\n  var util = require('util');\r\n  if (typeof util.inherits !== 'function') throw '';\r\n  module.exports = util.inherits;\r\n} catch (e) {\r\n  module.exports = require('./inherits_browser.js');\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211430
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\toidentifier\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\toidentifier\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\toidentifier\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\toidentifier\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\toidentifier\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\toidentifier\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\toidentifier\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * toidentifier\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n/**\r\n * Module exports.\r\n * @public\r\n */\nmodule.exports = toIdentifier;\n/**\r\n * Trasform the given string into a JavaScript identifier\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n * @public\r\n */\n\nfunction toIdentifier(str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1);\n  }).join('').replace(/[^ _0-9a-z]/gi, '');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0b0lkZW50aWZpZXIiLCJzdHIiLCJzcGxpdCIsIm1hcCIsInRva2VuIiwic2xpY2UiLCJ0b1VwcGVyQ2FzZSIsImpvaW4iLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsWUFBakI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxZQUFULENBQXVCQyxHQUF2QixFQUE0QjtBQUMxQixTQUFPQSxHQUFHLENBQ1BDLEtBREksQ0FDRSxHQURGLEVBRUpDLEdBRkksQ0FFQSxVQUFVQyxLQUFWLEVBQWlCO0FBQ3BCLFdBQU9BLEtBQUssQ0FBQ0MsS0FBTixDQUFZLENBQVosRUFBZSxDQUFmLEVBQWtCQyxXQUFsQixLQUFrQ0YsS0FBSyxDQUFDQyxLQUFOLENBQVksQ0FBWixDQUF6QztBQUNELEdBSkksRUFLSkUsSUFMSSxDQUtDLEVBTEQsRUFNSkMsT0FOSSxDQU1JLGVBTkosRUFNcUIsRUFOckIsQ0FBUDtBQU9EIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFx0b2lkZW50aWZpZXJcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiB0b2lkZW50aWZpZXJcclxuICogQ29weXJpZ2h0KGMpIDIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB0b0lkZW50aWZpZXJcclxuXHJcbi8qKlxyXG4gKiBUcmFzZm9ybSB0aGUgZ2l2ZW4gc3RyaW5nIGludG8gYSBKYXZhU2NyaXB0IGlkZW50aWZpZXJcclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gdG9JZGVudGlmaWVyIChzdHIpIHtcclxuICByZXR1cm4gc3RyXHJcbiAgICAuc3BsaXQoJyAnKVxyXG4gICAgLm1hcChmdW5jdGlvbiAodG9rZW4pIHtcclxuICAgICAgcmV0dXJuIHRva2VuLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCkgKyB0b2tlbi5zbGljZSgxKVxyXG4gICAgfSlcclxuICAgIC5qb2luKCcnKVxyXG4gICAgLnJlcGxhY2UoL1teIF8wLTlhLXpdL2dpLCAnJylcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "toIdentifier",
        "str",
        "split",
        "map",
        "token",
        "slice",
        "toUpperCase",
        "join",
        "replace"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAT,CAAuBC,GAAvB,EAA4B;AAC1B,SAAOA,GAAG,CACPC,KADI,CACE,GADF,EAEJC,GAFI,CAEA,UAAUC,KAAV,EAAiB;AACpB,WAAOA,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,WAAlB,KAAkCF,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAzC;AACD,GAJI,EAKJE,IALI,CAKC,EALD,EAMJC,OANI,CAMI,eANJ,EAMqB,EANrB,CAAP;AAOD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\toidentifier\\",
      "sourcesContent": [
        "/*!\r\n * toidentifier\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = toIdentifier\r\n\r\n/**\r\n * Trasform the given string into a JavaScript identifier\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n * @public\r\n */\r\n\r\nfunction toIdentifier (str) {\r\n  return str\r\n    .split(' ')\r\n    .map(function (token) {\r\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\r\n    })\r\n    .join('')\r\n    .replace(/[^ _0-9a-z]/gi, '')\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211976
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\destroy\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\destroy\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\destroy\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\destroy\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\destroy\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\destroy\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\destroy\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * destroy\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar ReadStream = require('fs').ReadStream;\n\nvar Stream = require('stream');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = destroy;\n/**\r\n * Destroy a stream.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\n\nfunction destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream);\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream;\n  }\n\n  if (typeof stream.destroy === 'function') {\n    stream.destroy();\n  }\n\n  return stream;\n}\n/**\r\n * Destroy a ReadStream.\r\n *\r\n * @param {object} stream\r\n * @private\r\n */\n\n\nfunction destroyReadStream(stream) {\n  stream.destroy();\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose);\n  }\n\n  return stream;\n}\n/**\r\n * On open handler to close stream.\r\n * @private\r\n */\n\n\nfunction onOpenClose() {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close();\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlJlYWRTdHJlYW0iLCJyZXF1aXJlIiwiU3RyZWFtIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlc3Ryb3kiLCJzdHJlYW0iLCJkZXN0cm95UmVhZFN0cmVhbSIsImNsb3NlIiwib24iLCJvbk9wZW5DbG9zZSIsImZkIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY0QsVUFBL0I7O0FBQ0EsSUFBSUUsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFwQjtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxPQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxPQUFULENBQWlCQyxNQUFqQixFQUF5QjtBQUN2QixNQUFJQSxNQUFNLFlBQVlOLFVBQXRCLEVBQWtDO0FBQ2hDLFdBQU9PLGlCQUFpQixDQUFDRCxNQUFELENBQXhCO0FBQ0Q7O0FBRUQsTUFBSSxFQUFFQSxNQUFNLFlBQVlKLE1BQXBCLENBQUosRUFBaUM7QUFDL0IsV0FBT0ksTUFBUDtBQUNEOztBQUVELE1BQUksT0FBT0EsTUFBTSxDQUFDRCxPQUFkLEtBQTBCLFVBQTlCLEVBQTBDO0FBQ3hDQyxJQUFBQSxNQUFNLENBQUNELE9BQVA7QUFDRDs7QUFFRCxTQUFPQyxNQUFQO0FBQ0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNDLGlCQUFULENBQTJCRCxNQUEzQixFQUFtQztBQUNqQ0EsRUFBQUEsTUFBTSxDQUFDRCxPQUFQOztBQUVBLE1BQUksT0FBT0MsTUFBTSxDQUFDRSxLQUFkLEtBQXdCLFVBQTVCLEVBQXdDO0FBQ3RDO0FBQ0FGLElBQUFBLE1BQU0sQ0FBQ0csRUFBUCxDQUFVLE1BQVYsRUFBa0JDLFdBQWxCO0FBQ0Q7O0FBRUQsU0FBT0osTUFBUDtBQUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNJLFdBQVQsR0FBdUI7QUFDckIsTUFBSSxPQUFPLEtBQUtDLEVBQVosS0FBbUIsUUFBdkIsRUFBaUM7QUFDL0I7QUFDQSxTQUFLSCxLQUFMO0FBQ0Q7QUFDRiIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcZGVzdHJveVxcIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRlc3Ryb3lcclxuICogQ29weXJpZ2h0KGMpIDIwMTQgSm9uYXRoYW4gT25nXHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIFJlYWRTdHJlYW0gPSByZXF1aXJlKCdmcycpLlJlYWRTdHJlYW1cclxudmFyIFN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpXHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGRlc3Ryb3lcclxuXHJcbi8qKlxyXG4gKiBEZXN0cm95IGEgc3RyZWFtLlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gc3RyZWFtXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBkZXN0cm95KHN0cmVhbSkge1xyXG4gIGlmIChzdHJlYW0gaW5zdGFuY2VvZiBSZWFkU3RyZWFtKSB7XHJcbiAgICByZXR1cm4gZGVzdHJveVJlYWRTdHJlYW0oc3RyZWFtKVxyXG4gIH1cclxuXHJcbiAgaWYgKCEoc3RyZWFtIGluc3RhbmNlb2YgU3RyZWFtKSkge1xyXG4gICAgcmV0dXJuIHN0cmVhbVxyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBzdHJlYW0uZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgc3RyZWFtLmRlc3Ryb3koKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHN0cmVhbVxyXG59XHJcblxyXG4vKipcclxuICogRGVzdHJveSBhIFJlYWRTdHJlYW0uXHJcbiAqXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdHJlYW1cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBkZXN0cm95UmVhZFN0cmVhbShzdHJlYW0pIHtcclxuICBzdHJlYW0uZGVzdHJveSgpXHJcblxyXG4gIGlmICh0eXBlb2Ygc3RyZWFtLmNsb3NlID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAvLyBub2RlLmpzIGNvcmUgYnVnIHdvcmstYXJvdW5kXHJcbiAgICBzdHJlYW0ub24oJ29wZW4nLCBvbk9wZW5DbG9zZSlcclxuICB9XHJcblxyXG4gIHJldHVybiBzdHJlYW1cclxufVxyXG5cclxuLyoqXHJcbiAqIE9uIG9wZW4gaGFuZGxlciB0byBjbG9zZSBzdHJlYW0uXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gb25PcGVuQ2xvc2UoKSB7XHJcbiAgaWYgKHR5cGVvZiB0aGlzLmZkID09PSAnbnVtYmVyJykge1xyXG4gICAgLy8gYWN0dWFsbHkgY2xvc2UgZG93biB0aGUgZmRcclxuICAgIHRoaXMuY2xvc2UoKVxyXG4gIH1cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ReadStream",
        "require",
        "Stream",
        "module",
        "exports",
        "destroy",
        "stream",
        "destroyReadStream",
        "close",
        "on",
        "onOpenClose",
        "fd"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,UAA/B;;AACA,IAAIE,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAIA,MAAM,YAAYN,UAAtB,EAAkC;AAChC,WAAOO,iBAAiB,CAACD,MAAD,CAAxB;AACD;;AAED,MAAI,EAAEA,MAAM,YAAYJ,MAApB,CAAJ,EAAiC;AAC/B,WAAOI,MAAP;AACD;;AAED,MAAI,OAAOA,MAAM,CAACD,OAAd,KAA0B,UAA9B,EAA0C;AACxCC,IAAAA,MAAM,CAACD,OAAP;AACD;;AAED,SAAOC,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,iBAAT,CAA2BD,MAA3B,EAAmC;AACjCA,EAAAA,MAAM,CAACD,OAAP;;AAEA,MAAI,OAAOC,MAAM,CAACE,KAAd,KAAwB,UAA5B,EAAwC;AACtC;AACAF,IAAAA,MAAM,CAACG,EAAP,CAAU,MAAV,EAAkBC,WAAlB;AACD;;AAED,SAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;;;AAEA,SAASI,WAAT,GAAuB;AACrB,MAAI,OAAO,KAAKC,EAAZ,KAAmB,QAAvB,EAAiC;AAC/B;AACA,SAAKH,KAAL;AACD;AACF",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\destroy\\",
      "sourcesContent": [
        "/*!\r\n * destroy\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar ReadStream = require('fs').ReadStream\r\nvar Stream = require('stream')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = destroy\r\n\r\n/**\r\n * Destroy a stream.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\r\n\r\nfunction destroy(stream) {\r\n  if (stream instanceof ReadStream) {\r\n    return destroyReadStream(stream)\r\n  }\r\n\r\n  if (!(stream instanceof Stream)) {\r\n    return stream\r\n  }\r\n\r\n  if (typeof stream.destroy === 'function') {\r\n    stream.destroy()\r\n  }\r\n\r\n  return stream\r\n}\r\n\r\n/**\r\n * Destroy a ReadStream.\r\n *\r\n * @param {object} stream\r\n * @private\r\n */\r\n\r\nfunction destroyReadStream(stream) {\r\n  stream.destroy()\r\n\r\n  if (typeof stream.close === 'function') {\r\n    // node.js core bug work-around\r\n    stream.on('open', onOpenClose)\r\n  }\r\n\r\n  return stream\r\n}\r\n\r\n/**\r\n * On open handler to close stream.\r\n * @private\r\n */\r\n\r\nfunction onOpenClose() {\r\n  if (typeof this.fd === 'number') {\r\n    // actually close down the fd\r\n    this.close()\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211118
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\etag\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\etag\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\etag\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\etag\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\etag\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\etag\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\etag\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * etag\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = etag;\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar crypto = require('crypto');\n\nvar Stats = require('fs').Stats;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar toString = Object.prototype.toString;\n/**\r\n * Generate an entity tag.\r\n *\r\n * @param {Buffer|string} entity\r\n * @return {string}\r\n * @private\r\n */\n\nfunction entitytag(entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"';\n  } // compute hash of entity\n\n\n  var hash = crypto.createHash('sha1').update(entity, 'utf8').digest('base64').substring(0, 27); // compute length of entity\n\n  var len = typeof entity === 'string' ? Buffer.byteLength(entity, 'utf8') : entity.length;\n  return '\"' + len.toString(16) + '-' + hash + '\"';\n}\n/**\r\n * Create a simple ETag.\r\n *\r\n * @param {string|Buffer|Stats} entity\r\n * @param {object} [options]\r\n * @param {boolean} [options.weak]\r\n * @return {String}\r\n * @public\r\n */\n\n\nfunction etag(entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required');\n  } // support fs.Stats object\n\n\n  var isStats = isstats(entity);\n  var weak = options && typeof options.weak === 'boolean' ? options.weak : isStats; // validate argument\n\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats');\n  } // generate entity tag\n\n\n  var tag = isStats ? stattag(entity) : entitytag(entity);\n  return weak ? 'W/' + tag : tag;\n}\n/**\r\n * Determine if object is a Stats object.\r\n *\r\n * @param {object} obj\r\n * @return {boolean}\r\n * @api private\r\n */\n\n\nfunction isstats(obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true;\n  } // quack quack\n\n\n  return obj && typeof obj === 'object' && 'ctime' in obj && toString.call(obj.ctime) === '[object Date]' && 'mtime' in obj && toString.call(obj.mtime) === '[object Date]' && 'ino' in obj && typeof obj.ino === 'number' && 'size' in obj && typeof obj.size === 'number';\n}\n/**\r\n * Generate a tag for a stat.\r\n *\r\n * @param {object} stat\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction stattag(stat) {\n  var mtime = stat.mtime.getTime().toString(16);\n  var size = stat.size.toString(16);\n  return '\"' + size + '-' + mtime + '\"';\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJldGFnIiwiY3J5cHRvIiwicmVxdWlyZSIsIlN0YXRzIiwidG9TdHJpbmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJlbnRpdHl0YWciLCJlbnRpdHkiLCJsZW5ndGgiLCJoYXNoIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsInN1YnN0cmluZyIsImxlbiIsIkJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJvcHRpb25zIiwiVHlwZUVycm9yIiwiaXNTdGF0cyIsImlzc3RhdHMiLCJ3ZWFrIiwiaXNCdWZmZXIiLCJ0YWciLCJzdGF0dGFnIiwib2JqIiwiY2FsbCIsImN0aW1lIiwibXRpbWUiLCJpbm8iLCJzaXplIiwic3RhdCIsImdldFRpbWUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLElBQWpCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUMsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY0MsS0FBMUI7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsSUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJGLFFBQWhDO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0csU0FBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsTUFBSUEsTUFBTSxDQUFDQyxNQUFQLEtBQWtCLENBQXRCLEVBQXlCO0FBQ3ZCO0FBQ0EsV0FBTyxpQ0FBUDtBQUNELEdBSnlCLENBTTFCOzs7QUFDQSxNQUFJQyxJQUFJLEdBQUdULE1BQU0sQ0FDZFUsVUFEUSxDQUNHLE1BREgsRUFFUkMsTUFGUSxDQUVESixNQUZDLEVBRU8sTUFGUCxFQUdSSyxNQUhRLENBR0QsUUFIQyxFQUlSQyxTQUpRLENBSUUsQ0FKRixFQUlLLEVBSkwsQ0FBWCxDQVAwQixDQWExQjs7QUFDQSxNQUFJQyxHQUFHLEdBQUcsT0FBT1AsTUFBUCxLQUFrQixRQUFsQixHQUNOUSxNQUFNLENBQUNDLFVBQVAsQ0FBa0JULE1BQWxCLEVBQTBCLE1BQTFCLENBRE0sR0FFTkEsTUFBTSxDQUFDQyxNQUZYO0FBSUEsU0FBTyxNQUFNTSxHQUFHLENBQUNYLFFBQUosQ0FBYSxFQUFiLENBQU4sR0FBeUIsR0FBekIsR0FBK0JNLElBQS9CLEdBQXNDLEdBQTdDO0FBQ0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNWLElBQVQsQ0FBZVEsTUFBZixFQUF1QlUsT0FBdkIsRUFBZ0M7QUFDOUIsTUFBSVYsTUFBTSxJQUFJLElBQWQsRUFBb0I7QUFDbEIsVUFBTSxJQUFJVyxTQUFKLENBQWMsNkJBQWQsQ0FBTjtBQUNELEdBSDZCLENBSzlCOzs7QUFDQSxNQUFJQyxPQUFPLEdBQUdDLE9BQU8sQ0FBQ2IsTUFBRCxDQUFyQjtBQUNBLE1BQUljLElBQUksR0FBR0osT0FBTyxJQUFJLE9BQU9BLE9BQU8sQ0FBQ0ksSUFBZixLQUF3QixTQUFuQyxHQUNQSixPQUFPLENBQUNJLElBREQsR0FFUEYsT0FGSixDQVA4QixDQVc5Qjs7QUFDQSxNQUFJLENBQUNBLE9BQUQsSUFBWSxPQUFPWixNQUFQLEtBQWtCLFFBQTlCLElBQTBDLENBQUNRLE1BQU0sQ0FBQ08sUUFBUCxDQUFnQmYsTUFBaEIsQ0FBL0MsRUFBd0U7QUFDdEUsVUFBTSxJQUFJVyxTQUFKLENBQWMscURBQWQsQ0FBTjtBQUNELEdBZDZCLENBZ0I5Qjs7O0FBQ0EsTUFBSUssR0FBRyxHQUFHSixPQUFPLEdBQ2JLLE9BQU8sQ0FBQ2pCLE1BQUQsQ0FETSxHQUViRCxTQUFTLENBQUNDLE1BQUQsQ0FGYjtBQUlBLFNBQU9jLElBQUksR0FDUCxPQUFPRSxHQURBLEdBRVBBLEdBRko7QUFHRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxTQUFTSCxPQUFULENBQWtCSyxHQUFsQixFQUF1QjtBQUNyQjtBQUNBLE1BQUksT0FBT3ZCLEtBQVAsS0FBaUIsVUFBakIsSUFBK0J1QixHQUFHLFlBQVl2QixLQUFsRCxFQUF5RDtBQUN2RCxXQUFPLElBQVA7QUFDRCxHQUpvQixDQU1yQjs7O0FBQ0EsU0FBT3VCLEdBQUcsSUFBSSxPQUFPQSxHQUFQLEtBQWUsUUFBdEIsSUFDTCxXQUFXQSxHQUROLElBQ2F0QixRQUFRLENBQUN1QixJQUFULENBQWNELEdBQUcsQ0FBQ0UsS0FBbEIsTUFBNkIsZUFEMUMsSUFFTCxXQUFXRixHQUZOLElBRWF0QixRQUFRLENBQUN1QixJQUFULENBQWNELEdBQUcsQ0FBQ0csS0FBbEIsTUFBNkIsZUFGMUMsSUFHTCxTQUFTSCxHQUhKLElBR1csT0FBT0EsR0FBRyxDQUFDSSxHQUFYLEtBQW1CLFFBSDlCLElBSUwsVUFBVUosR0FKTCxJQUlZLE9BQU9BLEdBQUcsQ0FBQ0ssSUFBWCxLQUFvQixRQUp2QztBQUtEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNOLE9BQVQsQ0FBa0JPLElBQWxCLEVBQXdCO0FBQ3RCLE1BQUlILEtBQUssR0FBR0csSUFBSSxDQUFDSCxLQUFMLENBQVdJLE9BQVgsR0FBcUI3QixRQUFyQixDQUE4QixFQUE5QixDQUFaO0FBQ0EsTUFBSTJCLElBQUksR0FBR0MsSUFBSSxDQUFDRCxJQUFMLENBQVUzQixRQUFWLENBQW1CLEVBQW5CLENBQVg7QUFFQSxTQUFPLE1BQU0yQixJQUFOLEdBQWEsR0FBYixHQUFtQkYsS0FBbkIsR0FBMkIsR0FBbEM7QUFDRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcZXRhZ1xcIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGV0YWdcclxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNiBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgZXhwb3J0cy5cclxuICogQHB1YmxpY1xyXG4gKi9cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZXRhZ1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpXHJcbnZhciBTdGF0cyA9IHJlcXVpcmUoJ2ZzJykuU3RhdHNcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcclxuXHJcbi8qKlxyXG4gKiBHZW5lcmF0ZSBhbiBlbnRpdHkgdGFnLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0J1ZmZlcnxzdHJpbmd9IGVudGl0eVxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZW50aXR5dGFnIChlbnRpdHkpIHtcclxuICBpZiAoZW50aXR5Lmxlbmd0aCA9PT0gMCkge1xyXG4gICAgLy8gZmFzdC1wYXRoIGVtcHR5XHJcbiAgICByZXR1cm4gJ1wiMC0yam1qN2w1clN3MHlWYi92bFdBWWtLL1lCd2tcIidcclxuICB9XHJcblxyXG4gIC8vIGNvbXB1dGUgaGFzaCBvZiBlbnRpdHlcclxuICB2YXIgaGFzaCA9IGNyeXB0b1xyXG4gICAgLmNyZWF0ZUhhc2goJ3NoYTEnKVxyXG4gICAgLnVwZGF0ZShlbnRpdHksICd1dGY4JylcclxuICAgIC5kaWdlc3QoJ2Jhc2U2NCcpXHJcbiAgICAuc3Vic3RyaW5nKDAsIDI3KVxyXG5cclxuICAvLyBjb21wdXRlIGxlbmd0aCBvZiBlbnRpdHlcclxuICB2YXIgbGVuID0gdHlwZW9mIGVudGl0eSA9PT0gJ3N0cmluZydcclxuICAgID8gQnVmZmVyLmJ5dGVMZW5ndGgoZW50aXR5LCAndXRmOCcpXHJcbiAgICA6IGVudGl0eS5sZW5ndGhcclxuXHJcbiAgcmV0dXJuICdcIicgKyBsZW4udG9TdHJpbmcoMTYpICsgJy0nICsgaGFzaCArICdcIidcclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIHNpbXBsZSBFVGFnLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ3xCdWZmZXJ8U3RhdHN9IGVudGl0eVxyXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMud2Vha11cclxuICogQHJldHVybiB7U3RyaW5nfVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZXRhZyAoZW50aXR5LCBvcHRpb25zKSB7XHJcbiAgaWYgKGVudGl0eSA9PSBudWxsKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBlbnRpdHkgaXMgcmVxdWlyZWQnKVxyXG4gIH1cclxuXHJcbiAgLy8gc3VwcG9ydCBmcy5TdGF0cyBvYmplY3RcclxuICB2YXIgaXNTdGF0cyA9IGlzc3RhdHMoZW50aXR5KVxyXG4gIHZhciB3ZWFrID0gb3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy53ZWFrID09PSAnYm9vbGVhbidcclxuICAgID8gb3B0aW9ucy53ZWFrXHJcbiAgICA6IGlzU3RhdHNcclxuXHJcbiAgLy8gdmFsaWRhdGUgYXJndW1lbnRcclxuICBpZiAoIWlzU3RhdHMgJiYgdHlwZW9mIGVudGl0eSAhPT0gJ3N0cmluZycgJiYgIUJ1ZmZlci5pc0J1ZmZlcihlbnRpdHkpKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBlbnRpdHkgbXVzdCBiZSBzdHJpbmcsIEJ1ZmZlciwgb3IgZnMuU3RhdHMnKVxyXG4gIH1cclxuXHJcbiAgLy8gZ2VuZXJhdGUgZW50aXR5IHRhZ1xyXG4gIHZhciB0YWcgPSBpc1N0YXRzXHJcbiAgICA/IHN0YXR0YWcoZW50aXR5KVxyXG4gICAgOiBlbnRpdHl0YWcoZW50aXR5KVxyXG5cclxuICByZXR1cm4gd2Vha1xyXG4gICAgPyAnVy8nICsgdGFnXHJcbiAgICA6IHRhZ1xyXG59XHJcblxyXG4vKipcclxuICogRGV0ZXJtaW5lIGlmIG9iamVjdCBpcyBhIFN0YXRzIG9iamVjdC5cclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IG9ialxyXG4gKiBAcmV0dXJuIHtib29sZWFufVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBpc3N0YXRzIChvYmopIHtcclxuICAvLyBnZW51aW5lIGZzLlN0YXRzXHJcbiAgaWYgKHR5cGVvZiBTdGF0cyA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmogaW5zdGFuY2VvZiBTdGF0cykge1xyXG4gICAgcmV0dXJuIHRydWVcclxuICB9XHJcblxyXG4gIC8vIHF1YWNrIHF1YWNrXHJcbiAgcmV0dXJuIG9iaiAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJlxyXG4gICAgJ2N0aW1lJyBpbiBvYmogJiYgdG9TdHJpbmcuY2FsbChvYmouY3RpbWUpID09PSAnW29iamVjdCBEYXRlXScgJiZcclxuICAgICdtdGltZScgaW4gb2JqICYmIHRvU3RyaW5nLmNhbGwob2JqLm10aW1lKSA9PT0gJ1tvYmplY3QgRGF0ZV0nICYmXHJcbiAgICAnaW5vJyBpbiBvYmogJiYgdHlwZW9mIG9iai5pbm8gPT09ICdudW1iZXInICYmXHJcbiAgICAnc2l6ZScgaW4gb2JqICYmIHR5cGVvZiBvYmouc2l6ZSA9PT0gJ251bWJlcidcclxufVxyXG5cclxuLyoqXHJcbiAqIEdlbmVyYXRlIGEgdGFnIGZvciBhIHN0YXQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdGF0XHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBzdGF0dGFnIChzdGF0KSB7XHJcbiAgdmFyIG10aW1lID0gc3RhdC5tdGltZS5nZXRUaW1lKCkudG9TdHJpbmcoMTYpXHJcbiAgdmFyIHNpemUgPSBzdGF0LnNpemUudG9TdHJpbmcoMTYpXHJcblxyXG4gIHJldHVybiAnXCInICsgc2l6ZSArICctJyArIG10aW1lICsgJ1wiJ1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "etag",
        "crypto",
        "require",
        "Stats",
        "toString",
        "Object",
        "prototype",
        "entitytag",
        "entity",
        "length",
        "hash",
        "createHash",
        "update",
        "digest",
        "substring",
        "len",
        "Buffer",
        "byteLength",
        "options",
        "TypeError",
        "isStats",
        "isstats",
        "weak",
        "isBuffer",
        "tag",
        "stattag",
        "obj",
        "call",
        "ctime",
        "mtime",
        "ino",
        "size",
        "stat",
        "getTime"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\etag\\",
      "sourcesContent": [
        "/*!\r\n * etag\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = etag\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar crypto = require('crypto')\r\nvar Stats = require('fs').Stats\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar toString = Object.prototype.toString\r\n\r\n/**\r\n * Generate an entity tag.\r\n *\r\n * @param {Buffer|string} entity\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction entitytag (entity) {\r\n  if (entity.length === 0) {\r\n    // fast-path empty\r\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\r\n  }\r\n\r\n  // compute hash of entity\r\n  var hash = crypto\r\n    .createHash('sha1')\r\n    .update(entity, 'utf8')\r\n    .digest('base64')\r\n    .substring(0, 27)\r\n\r\n  // compute length of entity\r\n  var len = typeof entity === 'string'\r\n    ? Buffer.byteLength(entity, 'utf8')\r\n    : entity.length\r\n\r\n  return '\"' + len.toString(16) + '-' + hash + '\"'\r\n}\r\n\r\n/**\r\n * Create a simple ETag.\r\n *\r\n * @param {string|Buffer|Stats} entity\r\n * @param {object} [options]\r\n * @param {boolean} [options.weak]\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nfunction etag (entity, options) {\r\n  if (entity == null) {\r\n    throw new TypeError('argument entity is required')\r\n  }\r\n\r\n  // support fs.Stats object\r\n  var isStats = isstats(entity)\r\n  var weak = options && typeof options.weak === 'boolean'\r\n    ? options.weak\r\n    : isStats\r\n\r\n  // validate argument\r\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\r\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\r\n  }\r\n\r\n  // generate entity tag\r\n  var tag = isStats\r\n    ? stattag(entity)\r\n    : entitytag(entity)\r\n\r\n  return weak\r\n    ? 'W/' + tag\r\n    : tag\r\n}\r\n\r\n/**\r\n * Determine if object is a Stats object.\r\n *\r\n * @param {object} obj\r\n * @return {boolean}\r\n * @api private\r\n */\r\n\r\nfunction isstats (obj) {\r\n  // genuine fs.Stats\r\n  if (typeof Stats === 'function' && obj instanceof Stats) {\r\n    return true\r\n  }\r\n\r\n  // quack quack\r\n  return obj && typeof obj === 'object' &&\r\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\r\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\r\n    'ino' in obj && typeof obj.ino === 'number' &&\r\n    'size' in obj && typeof obj.size === 'number'\r\n}\r\n\r\n/**\r\n * Generate a tag for a stat.\r\n *\r\n * @param {object} stat\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction stattag (stat) {\r\n  var mtime = stat.mtime.getTime().toString(16)\r\n  var size = stat.size.toString(16)\r\n\r\n  return '\"' + size + '-' + mtime + '\"'\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211180
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\fresh\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\fresh\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\fresh\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\fresh\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\fresh\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\fresh\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\fresh\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * fresh\r\n * Copyright(c) 2012 TJ Holowaychuk\r\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * RegExp to check for no-cache token in Cache-Control.\r\n * @private\r\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = fresh;\n/**\r\n * Check freshness of the response using request and response headers.\r\n *\r\n * @param {Object} reqHeaders\r\n * @param {Object} resHeaders\r\n * @return {Boolean}\r\n * @public\r\n */\n\nfunction fresh(reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since'];\n  var noneMatch = reqHeaders['if-none-match']; // unconditional request\n\n  if (!modifiedSince && !noneMatch) {\n    return false;\n  } // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n\n\n  var cacheControl = reqHeaders['cache-control'];\n\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false;\n  } // if-none-match\n\n\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag'];\n\n    if (!etag) {\n      return false;\n    }\n\n    var etagStale = true;\n    var matches = parseTokenList(noneMatch);\n\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i];\n\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false;\n        break;\n      }\n    }\n\n    if (etagStale) {\n      return false;\n    }\n  } // if-modified-since\n\n\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified'];\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince));\n\n    if (modifiedStale) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * Parse an HTTP Date into a number.\r\n *\r\n * @param {string} date\r\n * @private\r\n */\n\n\nfunction parseHttpDate(date) {\n  var timestamp = date && Date.parse(date); // istanbul ignore next: guard against date.js Date.parse patching\n\n  return typeof timestamp === 'number' ? timestamp : NaN;\n}\n/**\r\n * Parse a HTTP token list.\r\n *\r\n * @param {string} str\r\n * @private\r\n */\n\n\nfunction parseTokenList(str) {\n  var end = 0;\n  var list = [];\n  var start = 0; // gather tokens\n\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i + 1;\n        }\n\n        break;\n\n      case 0x2c:\n        /* , */\n        list.push(str.substring(start, end));\n        start = end = i + 1;\n        break;\n\n      default:\n        end = i + 1;\n        break;\n    }\n  } // final token\n\n\n  list.push(str.substring(start, end));\n  return list;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNBQ0hFX0NPTlRST0xfTk9fQ0FDSEVfUkVHRVhQIiwibW9kdWxlIiwiZXhwb3J0cyIsImZyZXNoIiwicmVxSGVhZGVycyIsInJlc0hlYWRlcnMiLCJtb2RpZmllZFNpbmNlIiwibm9uZU1hdGNoIiwiY2FjaGVDb250cm9sIiwidGVzdCIsImV0YWciLCJldGFnU3RhbGUiLCJtYXRjaGVzIiwicGFyc2VUb2tlbkxpc3QiLCJpIiwibGVuZ3RoIiwibWF0Y2giLCJsYXN0TW9kaWZpZWQiLCJtb2RpZmllZFN0YWxlIiwicGFyc2VIdHRwRGF0ZSIsImRhdGUiLCJ0aW1lc3RhbXAiLCJEYXRlIiwicGFyc2UiLCJOYU4iLCJzdHIiLCJlbmQiLCJsaXN0Iiwic3RhcnQiLCJsZW4iLCJjaGFyQ29kZUF0IiwicHVzaCIsInN1YnN0cmluZyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQSw2QkFBNkIsR0FBRyxnQ0FBcEM7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxLQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsS0FBVCxDQUFnQkMsVUFBaEIsRUFBNEJDLFVBQTVCLEVBQXdDO0FBQ3RDO0FBQ0EsTUFBSUMsYUFBYSxHQUFHRixVQUFVLENBQUMsbUJBQUQsQ0FBOUI7QUFDQSxNQUFJRyxTQUFTLEdBQUdILFVBQVUsQ0FBQyxlQUFELENBQTFCLENBSHNDLENBS3RDOztBQUNBLE1BQUksQ0FBQ0UsYUFBRCxJQUFrQixDQUFDQyxTQUF2QixFQUFrQztBQUNoQyxXQUFPLEtBQVA7QUFDRCxHQVJxQyxDQVV0QztBQUNBO0FBQ0E7OztBQUNBLE1BQUlDLFlBQVksR0FBR0osVUFBVSxDQUFDLGVBQUQsQ0FBN0I7O0FBQ0EsTUFBSUksWUFBWSxJ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LEdBQXJCLENBQVY7QUFFQSxTQUFPQyxJQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFxub2RlX21vZHVsZXNcXGZyZXNoXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZnJlc2hcclxuICogQ29weXJpZ2h0KGMpIDIwMTIgVEogSG9sb3dheWNodWtcclxuICogQ29weXJpZ2h0KGMpIDIwMTYtMjAxNyBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbi8qKlxyXG4gKiBSZWdFeHAgdG8gY2hlY2sgZm9yIG5vLWNhY2hlIHRva2VuIGluIENhY2hlLUNvbnRyb2wuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIENBQ0hFX0NPTlRST0xfTk9fQ0FDSEVfUkVHRVhQID0gLyg/Ol58LClcXHMqP25vLWNhY2hlXFxzKj8oPzosfCQpL1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmcmVzaFxyXG5cclxuLyoqXHJcbiAqIENoZWNrIGZyZXNobmVzcyBvZiB0aGUgcmVzcG9uc2UgdXNpbmcgcmVxdWVzdCBhbmQgcmVzcG9uc2UgaGVhZGVycy5cclxuICpcclxuICogQHBhcmFtIHtPYmplY3R9IHJlcUhlYWRlcnNcclxuICogQHBhcmFtIHtPYmplY3R9IHJlc0hlYWRlcnNcclxuICogQHJldHVybiB7Qm9vbGVhbn1cclxuICogQHB1YmxpY1xyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGZyZXNoIChyZXFIZWFkZXJzLCByZXNIZWFkZXJzKSB7XHJcbiAgLy8gZmllbGRzXHJcbiAgdmFyIG1vZGlmaWVkU2luY2UgPSByZXFIZWFkZXJzWydpZi1tb2RpZmllZC1zaW5jZSddXHJcbiAgdmFyIG5vbmVNYXRjaCA9IHJlcUhlYWRlcnNbJ2lmLW5vbmUtbWF0Y2gnXVxyXG5cclxuICAvLyB1bmNvbmRpdGlvbmFsIHJlcXVlc3RcclxuICBpZiAoIW1vZGlmaWVkU2luY2UgJiYgIW5vbmVNYXRjaCkge1xyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG5cclxuICAvLyBBbHdheXMgcmV0dXJuIHN0YWxlIHdoZW4gQ2FjaGUtQ29udHJvbDogbm8tY2FjaGVcclxuICAvLyB0byBzdXBwb3J0IGVuZC10by1lbmQgcmVsb2FkIHJlcXVlc3RzXHJcbiAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI2MTYjc2VjdGlvbi0xNC45LjRcclxuICB2YXIgY2FjaGVDb250cm9sID0gcmVxSGVhZGVyc1snY2FjaGUtY29udHJvbCddXHJcbiAgaWYgKGNhY2hlQ29udHJvbCAmJiBDQUNIRV9DT05UUk9MX05PX0NBQ0hFX1JFR0VYUC50ZXN0KGNhY2hlQ29udHJvbCkpIHtcclxuICAgIHJldHVybiBmYWxzZVxyXG4gIH1cclxuXHJcbiAgLy8gaWYtbm9uZS1tYXRjaFxyXG4gIGlmIChub25lTWF0Y2ggJiYgbm9uZU1hdGNoICE9PSAnKicpIHtcclxuICAgIHZhciBldGFnID0gcmVzSGVhZGVyc1snZXRhZyddXHJcblxyXG4gICAgaWYgKCFldGFnKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBldGFnU3RhbGUgPSB0cnVlXHJcbiAgICB2YXIgbWF0Y2hlcyA9IHBhcnNlVG9rZW5MaXN0KG5vbmVNYXRjaClcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWF0Y2hlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICB2YXIgbWF0Y2ggPSBtYXRjaGVzW2ldXHJcbiAgICAgIGlmIChtYXRjaCA9PT0gZXRhZyB8fCBtYXRjaCA9PT0gJ1cvJyArIGV0YWcgfHwgJ1cvJyArIG1hdGNoID09PSBldGFnKSB7XHJcbiAgICAgICAgZXRhZ1N0YWxlID0gZmFsc2VcclxuICAgICAgICBicmVha1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGV0YWdTdGFsZSkge1xyXG4gICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIGlmLW1vZGlmaWVkLXNpbmNlXHJcbiAgaWYgKG1vZGlmaWVkU2luY2UpIHtcclxuICAgIHZhciBsYXN0TW9kaWZpZWQgPSByZXNIZWFkZXJzWydsYXN0LW1vZGlmaWVkJ11cclxuICAgIHZhciBtb2RpZmllZFN0YWxlID0gIWxhc3RNb2RpZmllZCB8fCAhKHBhcnNlSHR0cERhdGUobGFzdE1vZGlmaWVkKSA8PSBwYXJzZUh0dHBEYXRlKG1vZGlmaWVkU2luY2UpKVxyXG5cclxuICAgIGlmIChtb2RpZmllZFN0YWxlKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHRydWVcclxufVxyXG5cclxuLyoqXHJcbiAqIFBhcnNlIGFuIEhUVFAgRGF0ZSBpbnRvIGEgbnVtYmVyLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0ZVxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHBhcnNlSHR0cERhdGUgKGRhdGUpIHtcclxuICB2YXIgdGltZXN0YW1wID0gZGF0ZSAmJiBEYXRlLnBhcnNlKGRhdGUpXHJcblxyXG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBndWFyZCBhZ2FpbnN0IGRhdGUuanMgRGF0ZS5wYXJzZSBwYXRjaGluZ1xyXG4gIHJldHVybiB0eXBlb2YgdGltZXN0YW1wID09PSAnbnVtYmVyJ1xyXG4gICAgPyB0aW1lc3RhbXBcclxuICAgIDogTmFOXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQYXJzZSBhIEhUVFAgdG9rZW4gbGlzdC5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHBhcnNlVG9rZW5MaXN0IChzdHIpIHtcclxuICB2YXIgZW5kID0gMFxyXG4gIHZhciBsaXN0ID0gW11cclxuICB2YXIgc3RhcnQgPSAwXHJcblxyXG4gIC8vIGdhdGhlciB0b2tlbnNcclxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gc3RyLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICBzd2l0Y2ggKHN0ci5jaGFyQ29kZUF0KGkpKSB7XHJcbiAgICAgIGNhc2UgMHgyMDogLyogICAqL1xyXG4gICAgICAgIGlmIChzdGFydCA9PT0gZW5kKSB7XHJcbiAgICAgICAgICBzdGFydCA9IGVuZCA9IGkgKyAxXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgMHgyYzogLyogLCAqL1xyXG4gICAgICAgIGxpc3QucHVzaChzdHIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxyXG4gICAgICAgIHN0YXJ0ID0gZW5kID0gaSArIDFcclxuICAgICAgICBicmVha1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIGVuZCA9IGkgKyAxXHJcbiAgICAgICAgYnJlYWtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIGZpbmFsIHRva2VuXHJcbiAgbGlzdC5wdXNoKHN0ci5zdWJzdHJpbmcoc3RhcnQsIGVuZCkpXHJcblxyXG4gIHJldHVybiBsaXN0XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "CACHE_CONTROL_NO_CACHE_REGEXP",
        "module",
        "exports",
        "fresh",
        "reqHeaders",
        "resHeaders",
        "modifiedSince",
        "noneMatch",
        "cacheControl",
        "test",
        "etag",
        "etagStale",
        "matches",
        "parseTokenList",
        "i",
        "length",
        "match",
        "lastModified",
        "modifiedStale",
        "parseHttpDate",
        "date",
        "timestamp",
        "Date",
        "parse",
        "NaN",
        "str",
        "end",
        "list",
        "start",
        "len",
        "charCodeAt",
        "push",
        "substring"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\fresh\\",
      "sourcesContent": [
        "/*!\r\n * fresh\r\n * Copyright(c) 2012 TJ Holowaychuk\r\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * RegExp to check for no-cache token in Cache-Control.\r\n * @private\r\n */\r\n\r\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = fresh\r\n\r\n/**\r\n * Check freshness of the response using request and response headers.\r\n *\r\n * @param {Object} reqHeaders\r\n * @param {Object} resHeaders\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\nfunction fresh (reqHeaders, resHeaders) {\r\n  // fields\r\n  var modifiedSince = reqHeaders['if-modified-since']\r\n  var noneMatch = reqHeaders['if-none-match']\r\n\r\n  // unconditional request\r\n  if (!modifiedSince && !noneMatch) {\r\n    return false\r\n  }\r\n\r\n  // Always return stale when Cache-Control: no-cache\r\n  // to support end-to-end reload requests\r\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\r\n  var cacheControl = reqHeaders['cache-control']\r\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\r\n    return false\r\n  }\r\n\r\n  // if-none-match\r\n  if (noneMatch && noneMatch !== '*') {\r\n    var etag = resHeaders['etag']\r\n\r\n    if (!etag) {\r\n      return false\r\n    }\r\n\r\n    var etagStale = true\r\n    var matches = parseTokenList(noneMatch)\r\n    for (var i = 0; i < matches.length; i++) {\r\n      var match = matches[i]\r\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\r\n        etagStale = false\r\n        break\r\n      }\r\n    }\r\n\r\n    if (etagStale) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // if-modified-since\r\n  if (modifiedSince) {\r\n    var lastModified = resHeaders['last-modified']\r\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\r\n\r\n    if (modifiedStale) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Parse an HTTP Date into a number.\r\n *\r\n * @param {string} date\r\n * @private\r\n */\r\n\r\nfunction parseHttpDate (date) {\r\n  var timestamp = date && Date.parse(date)\r\n\r\n  // istanbul ignore next: guard against date.js Date.parse patching\r\n  return typeof timestamp === 'number'\r\n    ? timestamp\r\n    : NaN\r\n}\r\n\r\n/**\r\n * Parse a HTTP token list.\r\n *\r\n * @param {string} str\r\n * @private\r\n */\r\n\r\nfunction parseTokenList (str) {\r\n  var end = 0\r\n  var list = []\r\n  var start = 0\r\n\r\n  // gather tokens\r\n  for (var i = 0, len = str.length; i < len; i++) {\r\n    switch (str.charCodeAt(i)) {\r\n      case 0x20: /*   */\r\n        if (start === end) {\r\n          start = end = i + 1\r\n        }\r\n        break\r\n      case 0x2c: /* , */\r\n        list.push(str.substring(start, end))\r\n        start = end = i + 1\r\n        break\r\n      default:\r\n        end = i + 1\r\n        break\r\n    }\r\n  }\r\n\r\n  // final token\r\n  list.push(str.substring(start, end))\r\n\r\n  return list\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211227
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\mime\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\mime\\\\mime.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime\\mime.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime\\mime.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime\\mime.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime\\",
        "sourceFileName": "mime.js"
      }
    },
    "ast": null,
    "code": "var path = require('path');\n\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null); // Map of mime type -> extension\n\n  this.extensions = Object.create(null);\n}\n/**\r\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\r\n * to an array of extensions associated with the type.  The first extension is\r\n * used as the default extension for the type.\r\n *\r\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\r\n *\r\n * @param map (Object) type definitions\r\n */\n\n\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' + this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    } // Default extension is the first one we encounter\n\n\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n/**\r\n * Load an Apache2-style \".types\" file\r\n *\r\n * This may be called multiple times (it's expected).  Where files declare\r\n * overlapping types/extensions, the last file wins.\r\n *\r\n * @param file (String) path of file to load.\r\n */\n\n\nMime.prototype.load = function (file) {\n  this._loading = file; // Read file and split into lines\n\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n  lines.forEach(function (line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n  this.define(map);\n  this._loading = null;\n};\n/**\r\n * Lookup a mime type based on extension\r\n */\n\n\nMime.prototype.lookup = function (path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n  return this.types[ext] || fallback || this.default_type;\n};\n/**\r\n * Return file extension associated with a mime type\r\n */\n\n\nMime.prototype.extension = function (mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n}; // Default instance\n\n\nvar mime = new Mime(); // Define built-in types\n\nmime.define(require('./types.json')); // Default type\n\nmime.default_type = mime.lookup('bin'); //\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n/**\r\n * Lookup a charset based on mime type.\r\n */\n\nmime.charsets = {\n  lookup: function (mimeType, fallback) {\n    // Assume text types are utf8\n    return /^text\\/|^application\\/(javascript|json)/.test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\nmodule.exports = mime;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "mime.js"
      ],
      "names": [
        "path",
        "require",
        "fs",
        "Mime",
        "types",
        "Object",
        "create",
        "extensions",
        "prototype",
        "define",
        "map",
        "type",
        "exts",
        "i",
        "length",
        "process",
        "env",
        "DEBUG_MIME",
        "console",
        "warn",
        "_loading",
        "replace",
        "load",
        "file",
        "content",
        "readFileSync",
        "lines",
        "split",
        "forEach",
        "line",
        "fields",
        "shift",
        "lookup",
        "fallback",
        "ext",
        "toLowerCase",
        "default_type",
        "extension",
        "mimeType",
        "match",
        "mime",
        "charsets",
        "test",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime\\",
      "sourcesContent": [
        "var path = require('path');\r\nvar fs = require('fs');\r\n\r\nfunction Mime() {\r\n  // Map of extension -> mime type\r\n  this.types = Object.create(null);\r\n\r\n  // Map of mime type -> extension\r\n  this.extensions = Object.create(null);\r\n}\r\n\r\n/**\r\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\r\n * to an array of extensions associated with the type.  The first extension is\r\n * used as the default extension for the type.\r\n *\r\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\r\n *\r\n * @param map (Object) type definitions\r\n */\r\nMime.prototype.define = function (map) {\r\n  for (var type in map) {\r\n    var exts = map[type];\r\n    for (var i = 0; i < exts.length; i++) {\r\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\r\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\r\n          this.types[exts[i]] + ' to ' + type);\r\n      }\r\n\r\n      this.types[exts[i]] = type;\r\n    }\r\n\r\n    // Default extension is the first one we encounter\r\n    if (!this.extensions[type]) {\r\n      this.extensions[type] = exts[0];\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Load an Apache2-style \".types\" file\r\n *\r\n * This may be called multiple times (it's expected).  Where files declare\r\n * overlapping types/extensions, the last file wins.\r\n *\r\n * @param file (String) path of file to load.\r\n */\r\nMime.prototype.load = function(file) {\r\n  this._loading = file;\r\n  // Read file and split into lines\r\n  var map = {},\r\n      content = fs.readFileSync(file, 'ascii'),\r\n      lines = content.split(/[\\r\\n]+/);\r\n\r\n  lines.forEach(function(line) {\r\n    // Clean up whitespace/comments, and split into fields\r\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\r\n    map[fields.shift()] = fields;\r\n  });\r\n\r\n  this.define(map);\r\n\r\n  this._loading = null;\r\n};\r\n\r\n/**\r\n * Lookup a mime type based on extension\r\n */\r\nMime.prototype.lookup = function(path, fallback) {\r\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\r\n\r\n  return this.types[ext] || fallback || this.default_type;\r\n};\r\n\r\n/**\r\n * Return file extension associated with a mime type\r\n */\r\nMime.prototype.extension = function(mimeType) {\r\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\r\n  return this.extensions[type];\r\n};\r\n\r\n// Default instance\r\nvar mime = new Mime();\r\n\r\n// Define built-in types\r\nmime.define(require('./types.json'));\r\n\r\n// Default type\r\nmime.default_type = mime.lookup('bin');\r\n\r\n//\r\n// Additional API specific to the default instance\r\n//\r\n\r\nmime.Mime = Mime;\r\n\r\n/**\r\n * Lookup a charset based on mime type.\r\n */\r\nmime.charsets = {\r\n  lookup: function(mimeType, fallback) {\r\n    // Assume text types are utf8\r\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\r\n  }\r\n};\r\n\r\nmodule.exports = mime;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211586
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\send\\\\node_modules\\\\ms\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\send\\\\node_modules\\\\ms\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\node_modules\\ms\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\node_modules\\ms\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\node_modules\\ms\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\node_modules\\ms\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\node_modules\\ms\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Helpers.\r\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\r\n * Pluralization helper.\r\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "s",
        "m",
        "h",
        "d",
        "w",
        "y",
        "module",
        "exports",
        "val",
        "options",
        "type",
        "length",
        "parse",
        "isNaN",
        "long",
        "fmtLong",
        "fmtShort",
        "Error",
        "JSON",
        "stringify",
        "str",
        "String",
        "match",
        "exec",
        "n",
        "parseFloat",
        "toLowerCase",
        "undefined",
        "ms",
        "msAbs",
        "Math",
        "abs",
        "round",
        "plural",
        "name",
        "isPlural"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\send\\node_modules\\ms\\",
      "sourcesContent": [
        "/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211929
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\range-parser\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\range-parser\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\range-parser\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\range-parser\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\range-parser\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\range-parser\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\range-parser\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * range-parser\r\n * Copyright(c) 2012-2014 TJ Holowaychuk\r\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = rangeParser;\n/**\r\n * Parse \"Range\" header `str` relative to the given file `size`.\r\n *\r\n * @param {Number} size\r\n * @param {String} str\r\n * @param {Object} [options]\r\n * @return {Array}\r\n * @public\r\n */\n\nfunction rangeParser(size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var index = str.indexOf('=');\n\n  if (index === -1) {\n    return -2;\n  } // split the range string\n\n\n  var arr = str.slice(index + 1).split(',');\n  var ranges = []; // add ranges type\n\n  ranges.type = str.slice(0, index); // parse all ranges\n\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-');\n    var start = parseInt(range[0], 10);\n    var end = parseInt(range[1], 10); // -nnn\n\n    if (isNaN(start)) {\n      start = size - end;\n      end = size - 1; // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1;\n    } // limit last-byte-pos to current length\n\n\n    if (end > size - 1) {\n      end = size - 1;\n    } // invalid or unsatisifiable\n\n\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue;\n    } // add range\n\n\n    ranges.push({\n      start: start,\n      end: end\n    });\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1;\n  }\n\n  return options && options.combine ? combineRanges(ranges) : ranges;\n}\n/**\r\n * Combine overlapping & adjacent ranges.\r\n * @private\r\n */\n\n\nfunction combineRanges(ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart);\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i];\n    var current = ordered[j];\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range;\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end;\n      current.index = Math.min(current.index, range.index);\n    }\n  } // trim ordered array\n\n\n  ordered.length = j + 1; // generate combined range\n\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex); // copy ranges type\n\n  combined.type = ranges.type;\n  return combined;\n}\n/**\r\n * Map function to add index value to ranges.\r\n * @private\r\n */\n\n\nfunction mapWithIndex(range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  };\n}\n/**\r\n * Map function to remove index value from ranges.\r\n * @private\r\n */\n\n\nfunction mapWithoutIndex(range) {\n  return {\n    start: range.start,\n    end: range.end\n  };\n}\n/**\r\n * Sort function to sort ranges by index.\r\n * @private\r\n */\n\n\nfunction sortByRangeIndex(a, b) {\n  return a.index - b.index;\n}\n/**\r\n * Sort function to sort ranges by start position.\r\n * @private\r\n */\n\n\nfunction sortByRangeStart(a, b) {\n  return a.start - b.start;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "rangeParser",
        "size",
        "str",
        "options",
        "TypeError",
        "index",
        "indexOf",
        "arr",
        "slice",
        "split",
        "ranges",
        "type",
        "i",
        "length",
        "range",
        "start",
        "parseInt",
        "end",
        "isNaN",
        "push",
        "combine",
        "combineRanges",
        "ordered",
        "map",
        "mapWithIndex",
        "sort",
        "sortByRangeStart",
        "j",
        "current",
        "Math",
        "min",
        "combined",
        "sortByRangeIndex",
        "mapWithoutIndex",
        "a",
        "b"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\range-parser\\",
      "sourcesContent": [
        "/*!\r\n * range-parser\r\n * Copyright(c) 2012-2014 TJ Holowaychuk\r\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = rangeParser\r\n\r\n/**\r\n * Parse \"Range\" header `str` relative to the given file `size`.\r\n *\r\n * @param {Number} size\r\n * @param {String} str\r\n * @param {Object} [options]\r\n * @return {Array}\r\n * @public\r\n */\r\n\r\nfunction rangeParser (size, str, options) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('argument str must be a string')\r\n  }\r\n\r\n  var index = str.indexOf('=')\r\n\r\n  if (index === -1) {\r\n    return -2\r\n  }\r\n\r\n  // split the range string\r\n  var arr = str.slice(index + 1).split(',')\r\n  var ranges = []\r\n\r\n  // add ranges type\r\n  ranges.type = str.slice(0, index)\r\n\r\n  // parse all ranges\r\n  for (var i = 0; i < arr.length; i++) {\r\n    var range = arr[i].split('-')\r\n    var start = parseInt(range[0], 10)\r\n    var end = parseInt(range[1], 10)\r\n\r\n    // -nnn\r\n    if (isNaN(start)) {\r\n      start = size - end\r\n      end = size - 1\r\n    // nnn-\r\n    } else if (isNaN(end)) {\r\n      end = size - 1\r\n    }\r\n\r\n    // limit last-byte-pos to current length\r\n    if (end > size - 1) {\r\n      end = size - 1\r\n    }\r\n\r\n    // invalid or unsatisifiable\r\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\r\n      continue\r\n    }\r\n\r\n    // add range\r\n    ranges.push({\r\n      start: start,\r\n      end: end\r\n    })\r\n  }\r\n\r\n  if (ranges.length < 1) {\r\n    // unsatisifiable\r\n    return -1\r\n  }\r\n\r\n  return options && options.combine\r\n    ? combineRanges(ranges)\r\n    : ranges\r\n}\r\n\r\n/**\r\n * Combine overlapping & adjacent ranges.\r\n * @private\r\n */\r\n\r\nfunction combineRanges (ranges) {\r\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\r\n\r\n  for (var j = 0, i = 1; i < ordered.length; i++) {\r\n    var range = ordered[i]\r\n    var current = ordered[j]\r\n\r\n    if (range.start > current.end + 1) {\r\n      // next range\r\n      ordered[++j] = range\r\n    } else if (range.end > current.end) {\r\n      // extend range\r\n      current.end = range.end\r\n      current.index = Math.min(current.index, range.index)\r\n    }\r\n  }\r\n\r\n  // trim ordered array\r\n  ordered.length = j + 1\r\n\r\n  // generate combined range\r\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\r\n\r\n  // copy ranges type\r\n  combined.type = ranges.type\r\n\r\n  return combined\r\n}\r\n\r\n/**\r\n * Map function to add index value to ranges.\r\n * @private\r\n */\r\n\r\nfunction mapWithIndex (range, index) {\r\n  return {\r\n    start: range.start,\r\n    end: range.end,\r\n    index: index\r\n  }\r\n}\r\n\r\n/**\r\n * Map function to remove index value from ranges.\r\n * @private\r\n */\r\n\r\nfunction mapWithoutIndex (range) {\r\n  return {\r\n    start: range.start,\r\n    end: range.end\r\n  }\r\n}\r\n\r\n/**\r\n * Sort function to sort ranges by index.\r\n * @private\r\n */\r\n\r\nfunction sortByRangeIndex (a, b) {\r\n  return a.index - b.index\r\n}\r\n\r\n/**\r\n * Sort function to sort ranges by start position.\r\n * @private\r\n */\r\n\r\nfunction sortByRangeStart (a, b) {\r\n  return a.start - b.start\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211742
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\proxy-addr\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\proxy-addr\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\proxy-addr\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\proxy-addr\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\proxy-addr\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\proxy-addr\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\proxy-addr\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * proxy-addr\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = proxyaddr;\nmodule.exports.all = alladdrs;\nmodule.exports.compile = compile;\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar forwarded = require('forwarded');\n\nvar ipaddr = require('ipaddr.js');\n/**\r\n * Variables.\r\n * @private\r\n */\n\n\nvar DIGIT_REGEXP = /^[0-9]+$/;\nvar isip = ipaddr.isValid;\nvar parseip = ipaddr.parse;\n/**\r\n * Pre-defined IP ranges.\r\n * @private\r\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n};\n/**\r\n * Get all addresses in the request, optionally stopping\r\n * at the first untrusted.\r\n *\r\n * @param {Object} request\r\n * @param {Function|Array|String} [trust]\r\n * @public\r\n */\n\nfunction alladdrs(req, trust) {\n  // get addresses\n  var addrs = forwarded(req);\n\n  if (!trust) {\n    // Return all addresses\n    return addrs;\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust);\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue;\n    addrs.length = i + 1;\n  }\n\n  return addrs;\n}\n/**\r\n * Compile argument into trust function.\r\n *\r\n * @param {Array|String} val\r\n * @private\r\n */\n\n\nfunction compile(val) {\n  if (!val) {\n    throw new TypeError('argument is required');\n  }\n\n  var trust;\n\n  if (typeof val === 'string') {\n    trust = [val];\n  } else if (Array.isArray(val)) {\n    trust = val.slice();\n  } else {\n    throw new TypeError('unsupported trust argument');\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i];\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue;\n    } // Splice in pre-defined range\n\n\n    val = IP_RANGES[val];\n    trust.splice.apply(trust, [i, 1].concat(val));\n    i += val.length - 1;\n  }\n\n  return compileTrust(compileRangeSubnets(trust));\n}\n/**\r\n * Compile `arr` elements into range subnets.\r\n *\r\n * @param {Array} arr\r\n * @private\r\n */\n\n\nfunction compileRangeSubnets(arr) {\n  var rangeSubnets = new Array(arr.length);\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i]);\n  }\n\n  return rangeSubnets;\n}\n/**\r\n * Compile range subnet array into trust function.\r\n *\r\n * @param {Array} rangeSubnets\r\n * @private\r\n */\n\n\nfunction compileTrust(rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length;\n  return len === 0 ? trustNone : len === 1 ? trustSingle(rangeSubnets[0]) : trustMulti(rangeSubnets);\n}\n/**\r\n * Parse IP notation string into range subnet.\r\n *\r\n * @param {String} note\r\n * @private\r\n */\n\n\nfunction parseipNotation(note) {\n  var pos = note.lastIndexOf('/');\n  var str = pos !== -1 ? note.substring(0, pos) : note;\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str);\n  }\n\n  var ip = parseip(str);\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address();\n  }\n\n  var max = ip.kind() === 'ipv6' ? 128 : 32;\n  var range = pos !== -1 ? note.substring(pos + 1, note.length) : null;\n\n  if (range === null) {\n    range = max;\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10);\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range);\n  } else {\n    range = null;\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note);\n  }\n\n  return [ip, range];\n}\n/**\r\n * Parse netmask string into CIDR range.\r\n *\r\n * @param {String} netmask\r\n * @private\r\n */\n\n\nfunction parseNetmask(netmask) {\n  var ip = parseip(netmask);\n  var kind = ip.kind();\n  return kind === 'ipv4' ? ip.prefixLengthFromSubnetMask() : null;\n}\n/**\r\n * Determine address of proxied request.\r\n *\r\n * @param {Object} request\r\n * @param {Function|Array|String} trust\r\n * @public\r\n */\n\n\nfunction proxyaddr(req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required');\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required');\n  }\n\n  var addrs = alladdrs(req, trust);\n  var addr = addrs[addrs.length - 1];\n  return addr;\n}\n/**\r\n * Static trust function to trust nothing.\r\n *\r\n * @private\r\n */\n\n\nfunction trustNone() {\n  return false;\n}\n/**\r\n * Compile trust function for multiple subnets.\r\n *\r\n * @param {Array} subnets\r\n * @private\r\n */\n\n\nfunction trustMulti(subnets) {\n  return function trust(addr) {\n    if (!isip(addr)) return false;\n    var ip = parseip(addr);\n    var ipconv;\n    var kind = ip.kind();\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i];\n      var subnetip = subnet[0];\n      var subnetkind = subnetip.kind();\n      var subnetrange = subnet[1];\n      var trusted = ip;\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue;\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4' ? ip.toIPv4Address() : ip.toIPv4MappedAddress();\n        }\n\n        trusted = ipconv;\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n/**\r\n * Compile trust function for single subnet.\r\n *\r\n * @param {Object} subnet\r\n * @private\r\n */\n\n\nfunction trustSingle(subnet) {\n  var subnetip = subnet[0];\n  var subnetkind = subnetip.kind();\n  var subnetisipv4 = subnetkind === 'ipv4';\n  var subnetrange = subnet[1];\n  return function trust(addr) {\n    if (!isip(addr)) return false;\n    var ip = parseip(addr);\n    var kind = ip.kind();\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false;\n      } // Convert IP to match subnet IP kind\n\n\n      ip = subnetisipv4 ? ip.toIPv4Address() : ip.toIPv4MappedAddress();\n    }\n\n    return ip.match(subnetip, subnetrange);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "proxyaddr",
        "all",
        "alladdrs",
        "compile",
        "forwarded",
        "require",
        "ipaddr",
        "DIGIT_REGEXP",
        "isip",
        "isValid",
        "parseip",
        "parse",
        "IP_RANGES",
        "linklocal",
        "loopback",
        "uniquelocal",
        "req",
        "trust",
        "addrs",
        "i",
        "length",
        "val",
        "TypeError",
        "Array",
        "isArray",
        "slice",
        "Object",
        "prototype",
        "hasOwnProperty",
        "call",
        "splice",
        "apply",
        "concat",
        "compileTrust",
        "compileRangeSubnets",
        "arr",
        "rangeSubnets",
        "parseipNotation",
        "len",
        "trustNone",
        "trustSingle",
        "trustMulti",
        "note",
        "pos",
        "lastIndexOf",
        "str",
        "substring",
        "ip",
        "kind",
        "isIPv4MappedAddress",
        "toIPv4Address",
        "max",
        "range",
        "test",
        "parseInt",
        "parseNetmask",
        "netmask",
        "prefixLengthFromSubnetMask",
        "addr",
        "subnets",
        "ipconv",
        "subnet",
        "subnetip",
        "subnetkind",
        "subnetrange",
        "trusted",
        "toIPv4MappedAddress",
        "match",
        "subnetisipv4"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\proxy-addr\\",
      "sourcesContent": [
        "/*!\r\n * proxy-addr\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = proxyaddr\r\nmodule.exports.all = alladdrs\r\nmodule.exports.compile = compile\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar forwarded = require('forwarded')\r\nvar ipaddr = require('ipaddr.js')\r\n\r\n/**\r\n * Variables.\r\n * @private\r\n */\r\n\r\nvar DIGIT_REGEXP = /^[0-9]+$/\r\nvar isip = ipaddr.isValid\r\nvar parseip = ipaddr.parse\r\n\r\n/**\r\n * Pre-defined IP ranges.\r\n * @private\r\n */\r\n\r\nvar IP_RANGES = {\r\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\r\n  loopback: ['127.0.0.1/8', '::1/128'],\r\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\r\n}\r\n\r\n/**\r\n * Get all addresses in the request, optionally stopping\r\n * at the first untrusted.\r\n *\r\n * @param {Object} request\r\n * @param {Function|Array|String} [trust]\r\n * @public\r\n */\r\n\r\nfunction alladdrs (req, trust) {\r\n  // get addresses\r\n  var addrs = forwarded(req)\r\n\r\n  if (!trust) {\r\n    // Return all addresses\r\n    return addrs\r\n  }\r\n\r\n  if (typeof trust !== 'function') {\r\n    trust = compile(trust)\r\n  }\r\n\r\n  for (var i = 0; i < addrs.length - 1; i++) {\r\n    if (trust(addrs[i], i)) continue\r\n\r\n    addrs.length = i + 1\r\n  }\r\n\r\n  return addrs\r\n}\r\n\r\n/**\r\n * Compile argument into trust function.\r\n *\r\n * @param {Array|String} val\r\n * @private\r\n */\r\n\r\nfunction compile (val) {\r\n  if (!val) {\r\n    throw new TypeError('argument is required')\r\n  }\r\n\r\n  var trust\r\n\r\n  if (typeof val === 'string') {\r\n    trust = [val]\r\n  } else if (Array.isArray(val)) {\r\n    trust = val.slice()\r\n  } else {\r\n    throw new TypeError('unsupported trust argument')\r\n  }\r\n\r\n  for (var i = 0; i < trust.length; i++) {\r\n    val = trust[i]\r\n\r\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\r\n      continue\r\n    }\r\n\r\n    // Splice in pre-defined range\r\n    val = IP_RANGES[val]\r\n    trust.splice.apply(trust, [i, 1].concat(val))\r\n    i += val.length - 1\r\n  }\r\n\r\n  return compileTrust(compileRangeSubnets(trust))\r\n}\r\n\r\n/**\r\n * Compile `arr` elements into range subnets.\r\n *\r\n * @param {Array} arr\r\n * @private\r\n */\r\n\r\nfunction compileRangeSubnets (arr) {\r\n  var rangeSubnets = new Array(arr.length)\r\n\r\n  for (var i = 0; i < arr.length; i++) {\r\n    rangeSubnets[i] = parseipNotation(arr[i])\r\n  }\r\n\r\n  return rangeSubnets\r\n}\r\n\r\n/**\r\n * Compile range subnet array into trust function.\r\n *\r\n * @param {Array} rangeSubnets\r\n * @private\r\n */\r\n\r\nfunction compileTrust (rangeSubnets) {\r\n  // Return optimized function based on length\r\n  var len = rangeSubnets.length\r\n  return len === 0\r\n    ? trustNone\r\n    : len === 1\r\n      ? trustSingle(rangeSubnets[0])\r\n      : trustMulti(rangeSubnets)\r\n}\r\n\r\n/**\r\n * Parse IP notation string into range subnet.\r\n *\r\n * @param {String} note\r\n * @private\r\n */\r\n\r\nfunction parseipNotation (note) {\r\n  var pos = note.lastIndexOf('/')\r\n  var str = pos !== -1\r\n    ? note.substring(0, pos)\r\n    : note\r\n\r\n  if (!isip(str)) {\r\n    throw new TypeError('invalid IP address: ' + str)\r\n  }\r\n\r\n  var ip = parseip(str)\r\n\r\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\r\n    // Store as IPv4\r\n    ip = ip.toIPv4Address()\r\n  }\r\n\r\n  var max = ip.kind() === 'ipv6'\r\n    ? 128\r\n    : 32\r\n\r\n  var range = pos !== -1\r\n    ? note.substring(pos + 1, note.length)\r\n    : null\r\n\r\n  if (range === null) {\r\n    range = max\r\n  } else if (DIGIT_REGEXP.test(range)) {\r\n    range = parseInt(range, 10)\r\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\r\n    range = parseNetmask(range)\r\n  } else {\r\n    range = null\r\n  }\r\n\r\n  if (range <= 0 || range > max) {\r\n    throw new TypeError('invalid range on address: ' + note)\r\n  }\r\n\r\n  return [ip, range]\r\n}\r\n\r\n/**\r\n * Parse netmask string into CIDR range.\r\n *\r\n * @param {String} netmask\r\n * @private\r\n */\r\n\r\nfunction parseNetmask (netmask) {\r\n  var ip = parseip(netmask)\r\n  var kind = ip.kind()\r\n\r\n  return kind === 'ipv4'\r\n    ? ip.prefixLengthFromSubnetMask()\r\n    : null\r\n}\r\n\r\n/**\r\n * Determine address of proxied request.\r\n *\r\n * @param {Object} request\r\n * @param {Function|Array|String} trust\r\n * @public\r\n */\r\n\r\nfunction proxyaddr (req, trust) {\r\n  if (!req) {\r\n    throw new TypeError('req argument is required')\r\n  }\r\n\r\n  if (!trust) {\r\n    throw new TypeError('trust argument is required')\r\n  }\r\n\r\n  var addrs = alladdrs(req, trust)\r\n  var addr = addrs[addrs.length - 1]\r\n\r\n  return addr\r\n}\r\n\r\n/**\r\n * Static trust function to trust nothing.\r\n *\r\n * @private\r\n */\r\n\r\nfunction trustNone () {\r\n  return false\r\n}\r\n\r\n/**\r\n * Compile trust function for multiple subnets.\r\n *\r\n * @param {Array} subnets\r\n * @private\r\n */\r\n\r\nfunction trustMulti (subnets) {\r\n  return function trust (addr) {\r\n    if (!isip(addr)) return false\r\n\r\n    var ip = parseip(addr)\r\n    var ipconv\r\n    var kind = ip.kind()\r\n\r\n    for (var i = 0; i < subnets.length; i++) {\r\n      var subnet = subnets[i]\r\n      var subnetip = subnet[0]\r\n      var subnetkind = subnetip.kind()\r\n      var subnetrange = subnet[1]\r\n      var trusted = ip\r\n\r\n      if (kind !== subnetkind) {\r\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\r\n          // Incompatible IP addresses\r\n          continue\r\n        }\r\n\r\n        if (!ipconv) {\r\n          // Convert IP to match subnet IP kind\r\n          ipconv = subnetkind === 'ipv4'\r\n            ? ip.toIPv4Address()\r\n            : ip.toIPv4MappedAddress()\r\n        }\r\n\r\n        trusted = ipconv\r\n      }\r\n\r\n      if (trusted.match(subnetip, subnetrange)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Compile trust function for single subnet.\r\n *\r\n * @param {Object} subnet\r\n * @private\r\n */\r\n\r\nfunction trustSingle (subnet) {\r\n  var subnetip = subnet[0]\r\n  var subnetkind = subnetip.kind()\r\n  var subnetisipv4 = subnetkind === 'ipv4'\r\n  var subnetrange = subnet[1]\r\n\r\n  return function trust (addr) {\r\n    if (!isip(addr)) return false\r\n\r\n    var ip = parseip(addr)\r\n    var kind = ip.kind()\r\n\r\n    if (kind !== subnetkind) {\r\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\r\n        // Incompatible IP addresses\r\n        return false\r\n      }\r\n\r\n      // Convert IP to match subnet IP kind\r\n      ip = subnetisipv4\r\n        ? ip.toIPv4Address()\r\n        : ip.toIPv4MappedAddress()\r\n    }\r\n\r\n    return ip.match(subnetip, subnetrange)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211648
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\forwarded\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\forwarded\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\forwarded\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\forwarded\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\forwarded\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\forwarded\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\forwarded\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * forwarded\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = forwarded;\n/**\r\n * Get all addresses in the request, using the `X-Forwarded-For` header.\r\n *\r\n * @param {object} req\r\n * @return {array}\r\n * @public\r\n */\n\nfunction forwarded(req) {\n  if (!req) {\n    throw new TypeError('argument req is required');\n  } // simple header parsing\n\n\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '');\n  var socketAddr = getSocketAddr(req);\n  var addrs = [socketAddr].concat(proxyAddrs); // return all addresses\n\n  return addrs;\n}\n/**\r\n * Get the socket address for a request.\r\n *\r\n * @param {object} req\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction getSocketAddr(req) {\n  return req.socket ? req.socket.remoteAddress : req.connection.remoteAddress;\n}\n/**\r\n * Parse the X-Forwarded-For header.\r\n *\r\n * @param {string} header\r\n * @private\r\n */\n\n\nfunction parse(header) {\n  var end = header.length;\n  var list = [];\n  var start = header.length; // gather addresses, backwards\n\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i;\n        }\n\n        break;\n\n      case 0x2c:\n        /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end));\n        }\n\n        start = end = i;\n        break;\n\n      default:\n        start = i;\n        break;\n    }\n  } // final address\n\n\n  if (start !== end) {\n    list.push(header.substring(start, end));\n  }\n\n  return list;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmb3J3YXJkZWQiLCJyZXEiLCJUeXBlRXJyb3IiLCJwcm94eUFkZHJzIiwicGFyc2UiLCJoZWFkZXJzIiwic29ja2V0QWRkciIsImdldFNvY2tldEFkZHIiLCJhZGRycyIsImNvbmNhdCIsInNvY2tldCIsInJlbW90ZUFkZHJlc3MiLCJjb25uZWN0aW9uIiwiaGVhZGVyIiwiZW5kIiwibGVuZ3RoIiwibGlzdCIsInN0YXJ0IiwiaSIsImNoYXJDb2RlQXQiLCJwdXNoIiwic3Vic3RyaW5nIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLFNBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCO0FBQ3ZCLE1BQUksQ0FBQ0EsR0FBTCxFQUFVO0FBQ1IsVUFBTSxJQUFJQyxTQUFKLENBQWMsMEJBQWQsQ0FBTjtBQUNELEdBSHNCLENBS3ZCOzs7QUFDQSxNQUFJQyxVQUFVLEdBQUdDLEtBQUssQ0FBQ0gsR0FBRyxDQUFDSSxPQUFKLENBQVksaUJBQVosS0FBa0MsRUFBbkMsQ0FBdEI7QUFDQSxNQUFJQyxVQUFVLEdBQUdDLGFBQWEsQ0FBQ04sR0FBRCxDQUE5QjtBQUNBLE1BQUlPLEtBQUssR0FBRyxDQUFDRixVQUFELEVBQWFHLE1BQWIsQ0FBb0JOLFVBQXBCLENBQVosQ0FSdUIsQ0FVdkI7O0FBQ0EsU0FBT0ssS0FBUDtBQUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNELGFBQVQsQ0FBd0JOLEdBQXhCLEVBQTZCO0FBQzNCLFNBQU9BLEdBQUcsQ0FBQ1MsTUFBSixHQUNIVCxHQUFHLENBQUNTLE1BQUosQ0FBV0MsYUFEUixHQUVIVixHQUFHLENBQUNXLFVBQUosQ0FBZUQsYUFGbkI7QUFHRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsU0FBU1AsS0FBVCxDQUFnQlMsTUFBaEIsRUFBd0I7QUFDdEIsTUFBSUMsR0FBRyxHQUFHRCxNQUFNLENBQUNFLE1BQWpCO0FBQ0EsTUFBSUMsSUFBSSxHQUFHLEVBQVg7QUFDQSxNQUFJQyxLQUFLLEdBQUdKLE1BQU0sQ0FBQ0UsTUFBbkIsQ0FIc0IsQ0FLdEI7O0FBQ0EsT0FBSyxJQUFJRyxDQUFDLEdBQUdMLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQixDQUE3QixFQUFnQ0csQ0FBQyxJQUFJLENBQXJDLEVBQXdDQSxDQUFDLEVBQXpDLEVBQTZDO0FBQzNDLFlBQVFMLE1BQU0sQ0FBQ00sVUFBUCxDQUFrQkQsQ0FBbEIsQ0FBUjtBQUNFLFdBQUssSUFBTDtBQUFXO0FBQ1QsWUFBSUQsS0FBSyxLQUFLSCxHQUFkLEVBQW1CO0FBQ2pCRyxVQUFBQSxLQUFLLEdBQUdILEdBQUcsR0FBR0ksQ0FBZDtBQUNEOztBQUNEOztBQUNGLFdBQUssSUFBTDtBQUFXO0FBQ1QsWUFBSUQsS0FBSyxLQUFLSCxHQUFkLEVBQW1CO0FBQ2pCRSxVQUFBQSxJQUFJLENBQUNJLElBQUwsQ0FBVVAsTUFBTSxDQUFDUSxTQUFQLENBQWlCSixLQUFqQixFQUF3QkgsR0FBeEIsQ0FBVjtBQUNEOztBQUNERyxRQUFBQSxLQUFLLEdBQUdILEdBQUcsR0FBR0ksQ0FBZDtBQUNBOztBQUNGO0FBQ0VELFFBQUFBLEtBQUssR0FBR0MsQ0FBUjtBQUNBO0FBZEo7QUFnQkQsR0F2QnFCLENBeUJ0Qjs7O0FBQ0EsTUFBSUQsS0FBSyxLQUFLSCxHQUFkLEVBQW1CO0FBQ2pCRSxJQUFBQSxJQUFJLENBQUNJLElBQUwsQ0FBVVAsTUFBTSxDQUFDUSxTQUFQLENBQWlCSixLQUFqQixFQUF3QkgsR0FBeEIsQ0FBVjtBQUNEOztBQUVELFNBQU9FLElBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcZm9yd2FyZGVkXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZm9yd2FyZGVkXHJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTcgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnXHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZvcndhcmRlZFxyXG5cclxuLyoqXHJcbiAqIEdldCBhbGwgYWRkcmVzc2VzIGluIHRoZSByZXF1ZXN0LCB1c2luZyB0aGUgYFgtRm9yd2FyZGVkLUZvcmAgaGVhZGVyLlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVxXHJcbiAqIEByZXR1cm4ge2FycmF5fVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gZm9yd2FyZGVkIChyZXEpIHtcclxuICBpZiAoIXJlcSkge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgcmVxIGlzIHJlcXVpcmVkJylcclxuICB9XHJcblxyXG4gIC8vIHNpbXBsZSBoZWFkZXIgcGFyc2luZ1xyXG4gIHZhciBwcm94eUFkZHJzID0gcGFyc2UocmVxLmhlYWRlcnNbJ3gtZm9yd2FyZGVkLWZvciddIHx8ICcnKVxyXG4gIHZhciBzb2NrZXRBZGRyID0gZ2V0U29ja2V0QWRkcihyZXEpXHJcbiAgdmFyIGFkZHJzID0gW3NvY2tldEFkZHJdLmNvbmNhdChwcm94eUFkZHJzKVxyXG5cclxuICAvLyByZXR1cm4gYWxsIGFkZHJlc3Nlc1xyXG4gIHJldHVybiBhZGRyc1xyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBzb2NrZXQgYWRkcmVzcyBmb3IgYSByZXF1ZXN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVxXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBnZXRTb2NrZXRBZGRyIChyZXEpIHtcclxuICByZXR1cm4gcmVxLnNvY2tldFxyXG4gICAgPyByZXEuc29ja2V0LnJlbW90ZUFkZHJlc3NcclxuICAgIDogcmVxLmNvbm5lY3Rpb24ucmVtb3RlQWRkcmVzc1xyXG59XHJcblxyXG4vKipcclxuICogUGFyc2UgdGhlIFgtRm9yd2FyZGVkLUZvciBoZWFkZXIuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBoZWFkZXJcclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBwYXJzZSAoaGVhZGVyKSB7XHJcbiAgdmFyIGVuZCA9IGhlYWRlci5sZW5ndGhcclxuICB2YXIgbGlzdCA9IFtdXHJcbiAgdmFyIHN0YXJ0ID0gaGVhZGVyLmxlbmd0aFxyXG5cclxuICAvLyBnYXRoZXIgYWRkcmVzc2VzLCBiYWNrd2FyZHNcclxuICBmb3IgKHZhciBpID0gaGVhZGVyLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICBzd2l0Y2ggKGhlYWRlci5jaGFyQ29kZUF0KGkpKSB7XHJcbiAgICAgIGNhc2UgMHgyMDogLyogICAqL1xyXG4gICAgICAgIGlmIChzdGFydCA9PT0gZW5kKSB7XHJcbiAgICAgICAgICBzdGFydCA9IGVuZCA9IGlcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAweDJjOiAvKiAsICovXHJcbiAgICAgICAgaWYgKHN0YXJ0ICE9PSBlbmQpIHtcclxuICAgICAgICAgIGxpc3QucHVzaChoZWFkZXIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxyXG4gICAgICAgIH1cclxuICAgICAgICBzdGFydCA9IGVuZCA9IGlcclxuICAgICAgICBicmVha1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHN0YXJ0ID0gaVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBmaW5hbCBhZGRyZXNzXHJcbiAgaWYgKHN0YXJ0ICE9PSBlbmQpIHtcclxuICAgIGxpc3QucHVzaChoZWFkZXIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGxpc3RcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "forwarded",
        "req",
        "TypeError",
        "proxyAddrs",
        "parse",
        "headers",
        "socketAddr",
        "getSocketAddr",
        "addrs",
        "concat",
        "socket",
        "remoteAddress",
        "connection",
        "header",
        "end",
        "length",
        "list",
        "start",
        "i",
        "charCodeAt",
        "push",
        "substring"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAI,CAACA,GAAL,EAAU;AACR,UAAM,IAAIC,SAAJ,CAAc,0BAAd,CAAN;AACD,GAHsB,CAKvB;;;AACA,MAAIC,UAAU,GAAGC,KAAK,CAACH,GAAG,CAACI,OAAJ,CAAY,iBAAZ,KAAkC,EAAnC,CAAtB;AACA,MAAIC,UAAU,GAAGC,aAAa,CAACN,GAAD,CAA9B;AACA,MAAIO,KAAK,GAAG,CAACF,UAAD,EAAaG,MAAb,CAAoBN,UAApB,CAAZ,CARuB,CAUvB;;AACA,SAAOK,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASD,aAAT,CAAwBN,GAAxB,EAA6B;AAC3B,SAAOA,GAAG,CAACS,MAAJ,GACHT,GAAG,CAACS,MAAJ,CAAWC,aADR,GAEHV,GAAG,CAACW,UAAJ,CAAeD,aAFnB;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASP,KAAT,CAAgBS,MAAhB,EAAwB;AACtB,MAAIC,GAAG,GAAGD,MAAM,CAACE,MAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAGJ,MAAM,CAACE,MAAnB,CAHsB,CAKtB;;AACA,OAAK,IAAIG,CAAC,GAAGL,MAAM,CAACE,MAAP,GAAgB,CAA7B,EAAgCG,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,YAAQL,MAAM,CAACM,UAAP,CAAkBD,CAAlB,CAAR;AACE,WAAK,IAAL;AAAW;AACT,YAAID,KAAK,KAAKH,GAAd,EAAmB;AACjBG,UAAAA,KAAK,GAAGH,GAAG,GAAGI,CAAd;AACD;;AACD;;AACF,WAAK,IAAL;AAAW;AACT,YAAID,KAAK,KAAKH,GAAd,EAAmB;AACjBE,UAAAA,IAAI,CAACI,IAAL,CAAUP,MAAM,CAACQ,SAAP,CAAiBJ,KAAjB,EAAwBH,GAAxB,CAAV;AACD;;AACDG,QAAAA,KAAK,GAAGH,GAAG,GAAGI,CAAd;AACA;;AACF;AACED,QAAAA,KAAK,GAAGC,CAAR;AACA;AAdJ;AAgBD,GAvBqB,CAyBtB;;;AACA,MAAID,KAAK,KAAKH,GAAd,EAAmB;AACjBE,IAAAA,IAAI,CAACI,IAAL,CAAUP,MAAM,CAACQ,SAAP,CAAiBJ,KAAjB,EAAwBH,GAAxB,CAAV;AACD;;AAED,SAAOE,IAAP;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\forwarded\\",
      "sourcesContent": [
        "/*!\r\n * forwarded\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = forwarded\r\n\r\n/**\r\n * Get all addresses in the request, using the `X-Forwarded-For` header.\r\n *\r\n * @param {object} req\r\n * @return {array}\r\n * @public\r\n */\r\n\r\nfunction forwarded (req) {\r\n  if (!req) {\r\n    throw new TypeError('argument req is required')\r\n  }\r\n\r\n  // simple header parsing\r\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\r\n  var socketAddr = getSocketAddr(req)\r\n  var addrs = [socketAddr].concat(proxyAddrs)\r\n\r\n  // return all addresses\r\n  return addrs\r\n}\r\n\r\n/**\r\n * Get the socket address for a request.\r\n *\r\n * @param {object} req\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getSocketAddr (req) {\r\n  return req.socket\r\n    ? req.socket.remoteAddress\r\n    : req.connection.remoteAddress\r\n}\r\n\r\n/**\r\n * Parse the X-Forwarded-For header.\r\n *\r\n * @param {string} header\r\n * @private\r\n */\r\n\r\nfunction parse (header) {\r\n  var end = header.length\r\n  var list = []\r\n  var start = header.length\r\n\r\n  // gather addresses, backwards\r\n  for (var i = header.length - 1; i >= 0; i--) {\r\n    switch (header.charCodeAt(i)) {\r\n      case 0x20: /*   */\r\n        if (start === end) {\r\n          start = end = i\r\n        }\r\n        break\r\n      case 0x2c: /* , */\r\n        if (start !== end) {\r\n          list.push(header.substring(start, end))\r\n        }\r\n        start = end = i\r\n        break\r\n      default:\r\n        start = i\r\n        break\r\n    }\r\n  }\r\n\r\n  // final address\r\n  if (start !== end) {\r\n    list.push(header.substring(start, end))\r\n  }\r\n\r\n  return list\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211211
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\ipaddr.js\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\ipaddr.js\\\\lib\\\\ipaddr.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ipaddr.js\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ipaddr.js\\lib\\ipaddr.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ipaddr.js\\lib\\ipaddr.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ipaddr.js\\lib\\ipaddr.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ipaddr.js\\lib\\",
        "sourceFileName": "ipaddr.js"
      }
    },
    "ast": null,
    "code": "(function () {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n  ipaddr = {};\n  root = this;\n\n  if (typeof module !== \"undefined\" && module !== null && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function (first, second, partSize, cidrBits) {\n    var part, shift;\n\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n\n    part = 0;\n\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n\n      if (shift < 0) {\n        shift = 0;\n      }\n\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n\n      cidrBits -= partSize;\n      part += 1;\n    }\n\n    return true;\n  };\n\n  ipaddr.subnetMatch = function (address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = function () {\n    function IPv4(octets) {\n      var k, len, octet;\n\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n\n        if (!(0 <= octet && octet <= 255)) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function () {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function () {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function () {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function () {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function (other, cidrRange) {\n      var ref;\n\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function () {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function () {\n      return ipaddr.IPv6.parse(\"::ffff:\" + this.toString());\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function () {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n\n          if (stop && zeros !== 0) {\n            return null;\n          }\n\n          if (zeros !== 8) {\n            stop = true;\n          }\n\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n\n      return 32 - cidr;\n    };\n\n    return IPv4;\n  }();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function (string) {\n    var match, parseIntAuto, part, shift, value;\n\n    parseIntAuto = function (string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return function () {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n\n        return results;\n      }();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n\n      return function () {\n        var k, results;\n        results = [];\n\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push(value >> shift & 0xff);\n        }\n\n        return results;\n      }().reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = function () {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n\n      if (parts.length === 16) {\n        this.parts = [];\n\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push(parts[i] << 8 | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n\n      ref = this.parts;\n\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n\n        if (!(0 <= part && part <= 0xffff)) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function () {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function () {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function () {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n\n      while (match = regex.exec(string)) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n\n      if (bestMatchLength < 0) {\n        return string;\n      }\n\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function () {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function () {\n      var addr, part, suffix;\n\n      addr = function () {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n\n        return results;\n      }.call(this).join(\":\");\n\n      suffix = '';\n\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function () {\n      var addr, part, suffix;\n\n      addr = function () {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n\n        return results;\n      }.call(this).join(\":\");\n\n      suffix = '';\n\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function (other, cidrRange) {\n      var ref;\n\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function () {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function () {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function () {\n      var high, low, ref;\n\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function () {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n\n        if (part in zerotable) {\n          zeros = zerotable[part];\n\n          if (stop && zeros !== 0) {\n            return null;\n          }\n\n          if (zeros !== 16) {\n            stop = true;\n          }\n\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n\n      return 128 - cidr;\n    };\n\n    return IPv6;\n  }();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n  zoneIndex = \"%[0-9a-z]{1,}\";\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp(\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\" + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function (string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n\n    colonCount = 0;\n    lastColon = -1;\n\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n\n    if (colonCount > parts) {\n      return null;\n    }\n\n    replacementCount = parts - colonCount;\n    replacement = ':';\n\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n\n    string = string.replace('::', replacement);\n\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n\n    parts = function () {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n\n      return results;\n    }();\n\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function (string) {\n    var addr, k, len, match, octet, octets, zoneId;\n\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n\n          if (!(0 <= octet && octet <= 255)) {\n            return null;\n          }\n        }\n\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function (string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function (string) {\n    var e;\n\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function (string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function (string) {\n    var addr, e;\n\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function (string) {\n    var parts;\n    parts = this.parser(string);\n\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function (string) {\n    var addr;\n    addr = this.parser(string);\n\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function (string) {\n    var maskLength, match, parsed;\n\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function () {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function (prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - prefix % 8;\n    }\n\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function (string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function (string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function (string) {\n    var maskLength, match, parsed;\n\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function () {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function (string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function (string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function (string) {\n    var e;\n\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function (bytes) {\n    var length;\n    length = bytes.length;\n\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function (string) {\n    var addr;\n    addr = this.parse(string);\n\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n}).call(this);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ipaddr.js"
      ],
      "names": [
        "expandIPv6",
        "ipaddr",
        "ipv4Part",
        "ipv4Regexes",
        "ipv6Part",
        "ipv6Regexes",
        "matchCIDR",
        "root",
        "zoneIndex",
        "module",
        "exports",
        "first",
        "second",
        "partSize",
        "cidrBits",
        "part",
        "shift",
        "length",
        "Error",
        "subnetMatch",
        "address",
        "rangeList",
        "defaultName",
        "k",
        "len",
        "rangeName",
        "rangeSubnets",
        "subnet",
        "Array",
        "kind",
        "match",
        "apply",
        "IPv4",
        "octets",
        "octet",
        "prototype",
        "toString",
        "join",
        "toNormalizedString",
        "toByteArray",
        "slice",
        "other",
        "cidrRange",
        "ref",
        "SpecialRanges",
        "unspecified",
        "broadcast",
        "multicast",
        "linkLocal",
        "loopback",
        "carrierGradeNat",
        "reserved",
        "range",
        "toIPv4MappedAddress",
        "IPv6",
        "parse",
        "prefixLengthFromSubnetMask",
        "cidr",
        "i",
        "stop",
        "zeros",
        "zerotable",
        "fourOctet",
        "RegExp",
        "longValue",
        "parser",
        "string",
        "parseIntAuto",
        "value",
        "parseInt",
        "results",
        "push",
        "reverse",
        "parts",
        "zoneId",
        "l",
        "replace",
        "toRFC5952String",
        "bestMatchIndex",
        "bestMatchLength",
        "regex",
        "exec",
        "index",
        "substring",
        "bytes",
        "addr",
        "suffix",
        "call",
        "toFixedLengthString",
        "padStart",
        "uniqueLocal",
        "ipv4Mapped",
        "rfc6145",
        "rfc6052",
        "teredo",
        "isIPv4MappedAddress",
        "toIPv4Address",
        "high",
        "low",
        "transitional",
        "colonCount",
        "lastColon",
        "replacement",
        "replacementCount",
        "indexOf",
        "lastIndexOf",
        "substr",
        "split",
        "test",
        "isIPv4",
        "isIPv6",
        "isValid",
        "e",
        "error1",
        "isValidFourPartDecimal",
        "parseCIDR",
        "maskLength",
        "parsed",
        "Object",
        "defineProperty",
        "subnetMaskFromPrefixLength",
        "prefix",
        "filledOctetCount",
        "j",
        "Math",
        "floor",
        "pow",
        "broadcastAddressFromCIDR",
        "error",
        "ipInterfaceOctets",
        "subnetMaskOctets",
        "networkAddressFromCIDR",
        "fromByteArray",
        "process"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\ipaddr.js\\lib\\",
      "sourcesContent": [
        "(function() {\r\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\r\n\r\n  ipaddr = {};\r\n\r\n  root = this;\r\n\r\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\r\n    module.exports = ipaddr;\r\n  } else {\r\n    root['ipaddr'] = ipaddr;\r\n  }\r\n\r\n  matchCIDR = function(first, second, partSize, cidrBits) {\r\n    var part, shift;\r\n    if (first.length !== second.length) {\r\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\r\n    }\r\n    part = 0;\r\n    while (cidrBits > 0) {\r\n      shift = partSize - cidrBits;\r\n      if (shift < 0) {\r\n        shift = 0;\r\n      }\r\n      if (first[part] >> shift !== second[part] >> shift) {\r\n        return false;\r\n      }\r\n      cidrBits -= partSize;\r\n      part += 1;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\r\n    var k, len, rangeName, rangeSubnets, subnet;\r\n    if (defaultName == null) {\r\n      defaultName = 'unicast';\r\n    }\r\n    for (rangeName in rangeList) {\r\n      rangeSubnets = rangeList[rangeName];\r\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\r\n        rangeSubnets = [rangeSubnets];\r\n      }\r\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\r\n        subnet = rangeSubnets[k];\r\n        if (address.kind() === subnet[0].kind()) {\r\n          if (address.match.apply(address, subnet)) {\r\n            return rangeName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return defaultName;\r\n  };\r\n\r\n  ipaddr.IPv4 = (function() {\r\n    function IPv4(octets) {\r\n      var k, len, octet;\r\n      if (octets.length !== 4) {\r\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\r\n      }\r\n      for (k = 0, len = octets.length; k < len; k++) {\r\n        octet = octets[k];\r\n        if (!((0 <= octet && octet <= 255))) {\r\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\r\n        }\r\n      }\r\n      this.octets = octets;\r\n    }\r\n\r\n    IPv4.prototype.kind = function() {\r\n      return 'ipv4';\r\n    };\r\n\r\n    IPv4.prototype.toString = function() {\r\n      return this.octets.join(\".\");\r\n    };\r\n\r\n    IPv4.prototype.toNormalizedString = function() {\r\n      return this.toString();\r\n    };\r\n\r\n    IPv4.prototype.toByteArray = function() {\r\n      return this.octets.slice(0);\r\n    };\r\n\r\n    IPv4.prototype.match = function(other, cidrRange) {\r\n      var ref;\r\n      if (cidrRange === void 0) {\r\n        ref = other, other = ref[0], cidrRange = ref[1];\r\n      }\r\n      if (other.kind() !== 'ipv4') {\r\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\r\n      }\r\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\r\n    };\r\n\r\n    IPv4.prototype.SpecialRanges = {\r\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\r\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\r\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\r\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\r\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\r\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\r\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\r\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\r\n    };\r\n\r\n    IPv4.prototype.range = function() {\r\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\r\n    };\r\n\r\n    IPv4.prototype.toIPv4MappedAddress = function() {\r\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\r\n    };\r\n\r\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\r\n      var cidr, i, k, octet, stop, zeros, zerotable;\r\n      zerotable = {\r\n        0: 8,\r\n        128: 7,\r\n        192: 6,\r\n        224: 5,\r\n        240: 4,\r\n        248: 3,\r\n        252: 2,\r\n        254: 1,\r\n        255: 0\r\n      };\r\n      cidr = 0;\r\n      stop = false;\r\n      for (i = k = 3; k >= 0; i = k += -1) {\r\n        octet = this.octets[i];\r\n        if (octet in zerotable) {\r\n          zeros = zerotable[octet];\r\n          if (stop && zeros !== 0) {\r\n            return null;\r\n          }\r\n          if (zeros !== 8) {\r\n            stop = true;\r\n          }\r\n          cidr += zeros;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n      return 32 - cidr;\r\n    };\r\n\r\n    return IPv4;\r\n\r\n  })();\r\n\r\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\r\n\r\n  ipv4Regexes = {\r\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\r\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\r\n  };\r\n\r\n  ipaddr.IPv4.parser = function(string) {\r\n    var match, parseIntAuto, part, shift, value;\r\n    parseIntAuto = function(string) {\r\n      if (string[0] === \"0\" && string[1] !== \"x\") {\r\n        return parseInt(string, 8);\r\n      } else {\r\n        return parseInt(string);\r\n      }\r\n    };\r\n    if (match = string.match(ipv4Regexes.fourOctet)) {\r\n      return (function() {\r\n        var k, len, ref, results;\r\n        ref = match.slice(1, 6);\r\n        results = [];\r\n        for (k = 0, len = ref.length; k < len; k++) {\r\n          part = ref[k];\r\n          results.push(parseIntAuto(part));\r\n        }\r\n        return results;\r\n      })();\r\n    } else if (match = string.match(ipv4Regexes.longValue)) {\r\n      value = parseIntAuto(match[1]);\r\n      if (value > 0xffffffff || value < 0) {\r\n        throw new Error(\"ipaddr: address outside defined range\");\r\n      }\r\n      return ((function() {\r\n        var k, results;\r\n        results = [];\r\n        for (shift = k = 0; k <= 24; shift = k += 8) {\r\n          results.push((value >> shift) & 0xff);\r\n        }\r\n        return results;\r\n      })()).reverse();\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  ipaddr.IPv6 = (function() {\r\n    function IPv6(parts, zoneId) {\r\n      var i, k, l, len, part, ref;\r\n      if (parts.length === 16) {\r\n        this.parts = [];\r\n        for (i = k = 0; k <= 14; i = k += 2) {\r\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\r\n        }\r\n      } else if (parts.length === 8) {\r\n        this.parts = parts;\r\n      } else {\r\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\r\n      }\r\n      ref = this.parts;\r\n      for (l = 0, len = ref.length; l < len; l++) {\r\n        part = ref[l];\r\n        if (!((0 <= part && part <= 0xffff))) {\r\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\r\n        }\r\n      }\r\n      if (zoneId) {\r\n        this.zoneId = zoneId;\r\n      }\r\n    }\r\n\r\n    IPv6.prototype.kind = function() {\r\n      return 'ipv6';\r\n    };\r\n\r\n    IPv6.prototype.toString = function() {\r\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\r\n    };\r\n\r\n    IPv6.prototype.toRFC5952String = function() {\r\n      var bestMatchIndex, bestMatchLength, match, regex, string;\r\n      regex = /((^|:)(0(:|$)){2,})/g;\r\n      string = this.toNormalizedString();\r\n      bestMatchIndex = 0;\r\n      bestMatchLength = -1;\r\n      while ((match = regex.exec(string))) {\r\n        if (match[0].length > bestMatchLength) {\r\n          bestMatchIndex = match.index;\r\n          bestMatchLength = match[0].length;\r\n        }\r\n      }\r\n      if (bestMatchLength < 0) {\r\n        return string;\r\n      }\r\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\r\n    };\r\n\r\n    IPv6.prototype.toByteArray = function() {\r\n      var bytes, k, len, part, ref;\r\n      bytes = [];\r\n      ref = this.parts;\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        part = ref[k];\r\n        bytes.push(part >> 8);\r\n        bytes.push(part & 0xff);\r\n      }\r\n      return bytes;\r\n    };\r\n\r\n    IPv6.prototype.toNormalizedString = function() {\r\n      var addr, part, suffix;\r\n      addr = ((function() {\r\n        var k, len, ref, results;\r\n        ref = this.parts;\r\n        results = [];\r\n        for (k = 0, len = ref.length; k < len; k++) {\r\n          part = ref[k];\r\n          results.push(part.toString(16));\r\n        }\r\n        return results;\r\n      }).call(this)).join(\":\");\r\n      suffix = '';\r\n      if (this.zoneId) {\r\n        suffix = '%' + this.zoneId;\r\n      }\r\n      return addr + suffix;\r\n    };\r\n\r\n    IPv6.prototype.toFixedLengthString = function() {\r\n      var addr, part, suffix;\r\n      addr = ((function() {\r\n        var k, len, ref, results;\r\n        ref = this.parts;\r\n        results = [];\r\n        for (k = 0, len = ref.length; k < len; k++) {\r\n          part = ref[k];\r\n          results.push(part.toString(16).padStart(4, '0'));\r\n        }\r\n        return results;\r\n      }).call(this)).join(\":\");\r\n      suffix = '';\r\n      if (this.zoneId) {\r\n        suffix = '%' + this.zoneId;\r\n      }\r\n      return addr + suffix;\r\n    };\r\n\r\n    IPv6.prototype.match = function(other, cidrRange) {\r\n      var ref;\r\n      if (cidrRange === void 0) {\r\n        ref = other, other = ref[0], cidrRange = ref[1];\r\n      }\r\n      if (other.kind() !== 'ipv6') {\r\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\r\n      }\r\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\r\n    };\r\n\r\n    IPv6.prototype.SpecialRanges = {\r\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\r\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\r\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\r\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\r\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\r\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\r\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\r\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\r\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\r\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\r\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\r\n    };\r\n\r\n    IPv6.prototype.range = function() {\r\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\r\n    };\r\n\r\n    IPv6.prototype.isIPv4MappedAddress = function() {\r\n      return this.range() === 'ipv4Mapped';\r\n    };\r\n\r\n    IPv6.prototype.toIPv4Address = function() {\r\n      var high, low, ref;\r\n      if (!this.isIPv4MappedAddress()) {\r\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\r\n      }\r\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\r\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\r\n    };\r\n\r\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\r\n      var cidr, i, k, part, stop, zeros, zerotable;\r\n      zerotable = {\r\n        0: 16,\r\n        32768: 15,\r\n        49152: 14,\r\n        57344: 13,\r\n        61440: 12,\r\n        63488: 11,\r\n        64512: 10,\r\n        65024: 9,\r\n        65280: 8,\r\n        65408: 7,\r\n        65472: 6,\r\n        65504: 5,\r\n        65520: 4,\r\n        65528: 3,\r\n        65532: 2,\r\n        65534: 1,\r\n        65535: 0\r\n      };\r\n      cidr = 0;\r\n      stop = false;\r\n      for (i = k = 7; k >= 0; i = k += -1) {\r\n        part = this.parts[i];\r\n        if (part in zerotable) {\r\n          zeros = zerotable[part];\r\n          if (stop && zeros !== 0) {\r\n            return null;\r\n          }\r\n          if (zeros !== 16) {\r\n            stop = true;\r\n          }\r\n          cidr += zeros;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n      return 128 - cidr;\r\n    };\r\n\r\n    return IPv6;\r\n\r\n  })();\r\n\r\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\r\n\r\n  zoneIndex = \"%[0-9a-z]{1,}\";\r\n\r\n  ipv6Regexes = {\r\n    zoneIndex: new RegExp(zoneIndex, 'i'),\r\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\r\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\r\n  };\r\n\r\n  expandIPv6 = function(string, parts) {\r\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\r\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\r\n      return null;\r\n    }\r\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\r\n    if (zoneId) {\r\n      zoneId = zoneId.substring(1);\r\n      string = string.replace(/%.+$/, '');\r\n    }\r\n    colonCount = 0;\r\n    lastColon = -1;\r\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\r\n      colonCount++;\r\n    }\r\n    if (string.substr(0, 2) === '::') {\r\n      colonCount--;\r\n    }\r\n    if (string.substr(-2, 2) === '::') {\r\n      colonCount--;\r\n    }\r\n    if (colonCount > parts) {\r\n      return null;\r\n    }\r\n    replacementCount = parts - colonCount;\r\n    replacement = ':';\r\n    while (replacementCount--) {\r\n      replacement += '0:';\r\n    }\r\n    string = string.replace('::', replacement);\r\n    if (string[0] === ':') {\r\n      string = string.slice(1);\r\n    }\r\n    if (string[string.length - 1] === ':') {\r\n      string = string.slice(0, -1);\r\n    }\r\n    parts = (function() {\r\n      var k, len, ref, results;\r\n      ref = string.split(\":\");\r\n      results = [];\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        part = ref[k];\r\n        results.push(parseInt(part, 16));\r\n      }\r\n      return results;\r\n    })();\r\n    return {\r\n      parts: parts,\r\n      zoneId: zoneId\r\n    };\r\n  };\r\n\r\n  ipaddr.IPv6.parser = function(string) {\r\n    var addr, k, len, match, octet, octets, zoneId;\r\n    if (ipv6Regexes['native'].test(string)) {\r\n      return expandIPv6(string, 8);\r\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\r\n      zoneId = match[6] || '';\r\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\r\n      if (addr.parts) {\r\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\r\n        for (k = 0, len = octets.length; k < len; k++) {\r\n          octet = octets[k];\r\n          if (!((0 <= octet && octet <= 255))) {\r\n            return null;\r\n          }\r\n        }\r\n        addr.parts.push(octets[0] << 8 | octets[1]);\r\n        addr.parts.push(octets[2] << 8 | octets[3]);\r\n        return {\r\n          parts: addr.parts,\r\n          zoneId: addr.zoneId\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\r\n    return this.parser(string) !== null;\r\n  };\r\n\r\n  ipaddr.IPv4.isValid = function(string) {\r\n    var e;\r\n    try {\r\n      new this(this.parser(string));\r\n      return true;\r\n    } catch (error1) {\r\n      e = error1;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\r\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ipaddr.IPv6.isValid = function(string) {\r\n    var addr, e;\r\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\r\n      return false;\r\n    }\r\n    try {\r\n      addr = this.parser(string);\r\n      new this(addr.parts, addr.zoneId);\r\n      return true;\r\n    } catch (error1) {\r\n      e = error1;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ipaddr.IPv4.parse = function(string) {\r\n    var parts;\r\n    parts = this.parser(string);\r\n    if (parts === null) {\r\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\r\n    }\r\n    return new this(parts);\r\n  };\r\n\r\n  ipaddr.IPv6.parse = function(string) {\r\n    var addr;\r\n    addr = this.parser(string);\r\n    if (addr.parts === null) {\r\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\r\n    }\r\n    return new this(addr.parts, addr.zoneId);\r\n  };\r\n\r\n  ipaddr.IPv4.parseCIDR = function(string) {\r\n    var maskLength, match, parsed;\r\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\r\n      maskLength = parseInt(match[2]);\r\n      if (maskLength >= 0 && maskLength <= 32) {\r\n        parsed = [this.parse(match[1]), maskLength];\r\n        Object.defineProperty(parsed, 'toString', {\r\n          value: function() {\r\n            return this.join('/');\r\n          }\r\n        });\r\n        return parsed;\r\n      }\r\n    }\r\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\r\n  };\r\n\r\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\r\n    var filledOctetCount, j, octets;\r\n    prefix = parseInt(prefix);\r\n    if (prefix < 0 || prefix > 32) {\r\n      throw new Error('ipaddr: invalid IPv4 prefix length');\r\n    }\r\n    octets = [0, 0, 0, 0];\r\n    j = 0;\r\n    filledOctetCount = Math.floor(prefix / 8);\r\n    while (j < filledOctetCount) {\r\n      octets[j] = 255;\r\n      j++;\r\n    }\r\n    if (filledOctetCount < 4) {\r\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\r\n    }\r\n    return new this(octets);\r\n  };\r\n\r\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\r\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\r\n    try {\r\n      cidr = this.parseCIDR(string);\r\n      ipInterfaceOctets = cidr[0].toByteArray();\r\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\r\n      octets = [];\r\n      i = 0;\r\n      while (i < 4) {\r\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\r\n        i++;\r\n      }\r\n      return new this(octets);\r\n    } catch (error1) {\r\n      error = error1;\r\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\r\n    }\r\n  };\r\n\r\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\r\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\r\n    try {\r\n      cidr = this.parseCIDR(string);\r\n      ipInterfaceOctets = cidr[0].toByteArray();\r\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\r\n      octets = [];\r\n      i = 0;\r\n      while (i < 4) {\r\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\r\n        i++;\r\n      }\r\n      return new this(octets);\r\n    } catch (error1) {\r\n      error = error1;\r\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\r\n    }\r\n  };\r\n\r\n  ipaddr.IPv6.parseCIDR = function(string) {\r\n    var maskLength, match, parsed;\r\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\r\n      maskLength = parseInt(match[2]);\r\n      if (maskLength >= 0 && maskLength <= 128) {\r\n        parsed = [this.parse(match[1]), maskLength];\r\n        Object.defineProperty(parsed, 'toString', {\r\n          value: function() {\r\n            return this.join('/');\r\n          }\r\n        });\r\n        return parsed;\r\n      }\r\n    }\r\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\r\n  };\r\n\r\n  ipaddr.isValid = function(string) {\r\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\r\n  };\r\n\r\n  ipaddr.parse = function(string) {\r\n    if (ipaddr.IPv6.isValid(string)) {\r\n      return ipaddr.IPv6.parse(string);\r\n    } else if (ipaddr.IPv4.isValid(string)) {\r\n      return ipaddr.IPv4.parse(string);\r\n    } else {\r\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\r\n    }\r\n  };\r\n\r\n  ipaddr.parseCIDR = function(string) {\r\n    var e;\r\n    try {\r\n      return ipaddr.IPv6.parseCIDR(string);\r\n    } catch (error1) {\r\n      e = error1;\r\n      try {\r\n        return ipaddr.IPv4.parseCIDR(string);\r\n      } catch (error1) {\r\n        e = error1;\r\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\r\n      }\r\n    }\r\n  };\r\n\r\n  ipaddr.fromByteArray = function(bytes) {\r\n    var length;\r\n    length = bytes.length;\r\n    if (length === 4) {\r\n      return new ipaddr.IPv4(bytes);\r\n    } else if (length === 16) {\r\n      return new ipaddr.IPv6(bytes);\r\n    } else {\r\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\r\n    }\r\n  };\r\n\r\n  ipaddr.process = function(string) {\r\n    var addr;\r\n    addr = this.parse(string);\r\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\r\n      return addr.toIPv4Address();\r\n    } else {\r\n      return addr;\r\n    }\r\n  };\r\n\r\n}).call(this);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211461
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\request.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\request.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\request.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\request.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
        "sourceFileName": "request.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar accepts = require('accepts');\n\nvar deprecate = require('depd')('express');\n\nvar isIP = require('net').isIP;\n\nvar typeis = require('type-is');\n\nvar http = require('http');\n\nvar fresh = require('fresh');\n\nvar parseRange = require('range-parser');\n\nvar parse = require('parseurl');\n\nvar proxyaddr = require('proxy-addr');\n/**\r\n * Request prototype.\r\n * @public\r\n */\n\n\nvar req = Object.create(http.IncomingMessage.prototype);\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = req;\n/**\r\n * Return request header.\r\n *\r\n * The `Referrer` header field is special-cased,\r\n * both `Referrer` and `Referer` are interchangeable.\r\n *\r\n * Examples:\r\n *\r\n *     req.get('Content-Type');\r\n *     // => \"text/plain\"\r\n *\r\n *     req.get('content-type');\r\n *     // => \"text/plain\"\r\n *\r\n *     req.get('Something');\r\n *     // => undefined\r\n *\r\n * Aliased as `req.header()`.\r\n *\r\n * @param {String} name\r\n * @return {String}\r\n * @public\r\n */\n\nreq.get = req.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer || this.headers.referer;\n\n    default:\n      return this.headers[lc];\n  }\n};\n/**\r\n * To do: update docs.\r\n *\r\n * Check if the given `type(s)` is acceptable, returning\r\n * the best match when true, otherwise `undefined`, in which\r\n * case you should respond with 406 \"Not Acceptable\".\r\n *\r\n * The `type` value may be a single MIME type string\r\n * such as \"application/json\", an extension name\r\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\r\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\r\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\r\n * or array is given, the _best_ match, if any is returned.\r\n *\r\n * Examples:\r\n *\r\n *     // Accept: text/html\r\n *     req.accepts('html');\r\n *     // => \"html\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     req.accepts('html');\r\n *     // => \"html\"\r\n *     req.accepts('text/html');\r\n *     // => \"text/html\"\r\n *     req.accepts('json, text');\r\n *     // => \"json\"\r\n *     req.accepts('application/json');\r\n *     // => \"application/json\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     req.accepts('image/png');\r\n *     req.accepts('png');\r\n *     // => undefined\r\n *\r\n *     // Accept: text/*;q=.5, application/json\r\n *     req.accepts(['html', 'json']);\r\n *     req.accepts('html', 'json');\r\n *     req.accepts('html, json');\r\n *     // => \"json\"\r\n *\r\n * @param {String|Array} type(s)\r\n * @return {String|Array|Boolean}\r\n * @public\r\n */\n\n\nreq.accepts = function () {\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n/**\r\n * Check if the given `encoding`s are accepted.\r\n *\r\n * @param {String} ...encoding\r\n * @return {String|Array}\r\n * @public\r\n */\n\n\nreq.acceptsEncodings = function () {\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings, 'req.acceptsEncoding: Use acceptsEncodings instead');\n/**\r\n * Check if the given `charset`s are acceptable,\r\n * otherwise you should respond with 406 \"Not Acceptable\".\r\n *\r\n * @param {String} ...charset\r\n * @return {String|Array}\r\n * @public\r\n */\n\nreq.acceptsCharsets = function () {\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets, 'req.acceptsCharset: Use acceptsCharsets instead');\n/**\r\n * Check if the given `lang`s are acceptable,\r\n * otherwise you should respond with 406 \"Not Acceptable\".\r\n *\r\n * @param {String} ...lang\r\n * @return {String|Array}\r\n * @public\r\n */\n\nreq.acceptsLanguages = function () {\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages, 'req.acceptsLanguage: Use acceptsLanguages instead');\n/**\r\n * Parse Range header field, capping to the given `size`.\r\n *\r\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\r\n * the case of a byte range this is of course the total number of bytes. If the\r\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\r\n * and `-2` when syntactically invalid.\r\n *\r\n * When ranges are returned, the array has a \"type\" property which is the type of\r\n * range that is required (most commonly, \"bytes\"). Each array element is an object\r\n * with a \"start\" and \"end\" property for the portion of the range.\r\n *\r\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\r\n * will be combined into a single range.\r\n *\r\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\r\n * should respond with 4 users when available, not 3.\r\n *\r\n * @param {number} size\r\n * @param {object} [options]\r\n * @param {boolean} [options.combine=false]\r\n * @return {number|array}\r\n * @public\r\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n/**\r\n * Return the value of param `name` when present or `defaultValue`.\r\n *\r\n *  - Checks route placeholders, ex: _/user/:id_\r\n *  - Checks body params, ex: id=12, {\"id\":12}\r\n *  - Checks query string params, ex: ?id=12\r\n *\r\n * To utilize request bodies, `req.body`\r\n * should be an object. This can be done by using\r\n * the `bodyParser()` middleware.\r\n *\r\n * @param {String} name\r\n * @param {Mixed} [defaultValue]\r\n * @return {String}\r\n * @public\r\n */\n\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n  var args = arguments.length === 1 ? 'name' : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n  return defaultValue;\n};\n/**\r\n * Check if the incoming request contains the \"Content-Type\"\r\n * header field, and it contains the give mime `type`.\r\n *\r\n * Examples:\r\n *\r\n *      // With Content-Type: text/html; charset=utf-8\r\n *      req.is('html');\r\n *      req.is('text/html');\r\n *      req.is('text/*');\r\n *      // => true\r\n *\r\n *      // When Content-Type is application/json\r\n *      req.is('json');\r\n *      req.is('application/json');\r\n *      req.is('application/*');\r\n *      // => true\r\n *\r\n *      req.is('html');\r\n *      // => false\r\n *\r\n * @param {String|Array} types...\r\n * @return {String|false|null}\r\n * @public\r\n */\n\n\nreq.is = function is(types) {\n  var arr = types; // support flattened arguments\n\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n/**\r\n * Return the protocol string \"http\" or \"https\"\r\n * when requested with TLS. When the \"trust proxy\"\r\n * setting trusts the socket address, the\r\n * \"X-Forwarded-Proto\" header field will be trusted\r\n * and used if present.\r\n *\r\n * If you're running behind a reverse proxy that\r\n * supplies https for you this may be enabled.\r\n *\r\n * @return {String}\r\n * @public\r\n */\n\n\ndefineGetter(req, 'protocol', function protocol() {\n  var proto = this.connection.encrypted ? 'https' : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  } // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n\n\n  var header = this.get('X-Forwarded-Proto') || proto;\n  var index = header.indexOf(',');\n  return index !== -1 ? header.substring(0, index).trim() : header.trim();\n});\n/**\r\n * Short-hand for:\r\n *\r\n *    req.protocol === 'https'\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\n\ndefineGetter(req, 'secure', function secure() {\n  return this.protocol === 'https';\n});\n/**\r\n * Return the remote address from the trusted proxy.\r\n *\r\n * The is the remote address on the socket unless\r\n * \"trust proxy\" is set.\r\n *\r\n * @return {String}\r\n * @public\r\n */\n\ndefineGetter(req, 'ip', function ip() {\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n/**\r\n * When \"trust proxy\" is set, trusted proxy addresses + client.\r\n *\r\n * For example if the value were \"client, proxy1, proxy2\"\r\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\r\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\r\n * \"proxy2\" were trusted.\r\n *\r\n * @return {Array}\r\n * @public\r\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust); // reverse the order (to farthest -> closest)\n  // and remove socket address\n\n  addrs.reverse().pop();\n  return addrs;\n});\n/**\r\n * Return subdomains as an array.\r\n *\r\n * Subdomains are the dot-separated parts of the host before the main domain of\r\n * the app. By default, the domain of the app is assumed to be the last two\r\n * parts of the host. This can be changed by setting \"subdomain offset\".\r\n *\r\n * For example, if the domain is \"tobi.ferrets.example.com\":\r\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\r\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\r\n *\r\n * @return {Array}\r\n * @public\r\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n  if (!hostname) return [];\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname) ? hostname.split('.').reverse() : [hostname];\n  return subdomains.slice(offset);\n});\n/**\r\n * Short-hand for `url.parse(req.url).pathname`.\r\n *\r\n * @return {String}\r\n * @public\r\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n/**\r\n * Parse the \"Host\" header field to a hostname.\r\n *\r\n * When the \"trust proxy\" setting trusts the socket\r\n * address, the \"X-Forwarded-Host\" header field will\r\n * be trusted.\r\n *\r\n * @return {String}\r\n * @public\r\n */\n\ndefineGetter(req, 'hostname', function hostname() {\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight();\n  }\n\n  if (!host) return; // IPv6 literal support\n\n  var offset = host[0] === '[' ? host.indexOf(']') + 1 : 0;\n  var index = host.indexOf(':', offset);\n  return index !== -1 ? host.substring(0, index) : host;\n}); // TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host() {\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n/**\r\n * Check if the request is fresh, aka\r\n * Last-Modified and/or the ETag\r\n * still match.\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\n\ndefineGetter(req, 'fresh', function () {\n  var method = this.method;\n  var res = this.res;\n  var status = res.statusCode; // GET or HEAD for weak freshness validation only\n\n  if ('GET' !== method && 'HEAD' !== method) return false; // 2xx or 304 as per rfc2616 14.26\n\n  if (status >= 200 && status < 300 || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    });\n  }\n\n  return false;\n});\n/**\r\n * Check if the request is stale, aka\r\n * \"Last-Modified\" and / or the \"ETag\" for the\r\n * resource has changed.\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\n\ndefineGetter(req, 'stale', function stale() {\n  return !this.fresh;\n});\n/**\r\n * Check if the request was an _XMLHttpRequest_.\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\n\ndefineGetter(req, 'xhr', function xhr() {\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n/**\r\n * Helper function for creating a getter on an object.\r\n *\r\n * @param {Object} obj\r\n * @param {String} name\r\n * @param {Function} getter\r\n * @private\r\n */\n\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "request.js"
      ],
      "names": [
        "accepts",
        "require",
        "deprecate",
        "isIP",
        "typeis",
        "http",
        "fresh",
        "parseRange",
        "parse",
        "proxyaddr",
        "req",
        "Object",
        "create",
        "IncomingMessage",
        "prototype",
        "module",
        "exports",
        "get",
        "header",
        "name",
        "TypeError",
        "lc",
        "toLowerCase",
        "headers",
        "referrer",
        "referer",
        "accept",
        "types",
        "apply",
        "arguments",
        "acceptsEncodings",
        "encodings",
        "acceptsEncoding",
        "function",
        "acceptsCharsets",
        "charsets",
        "acceptsCharset",
        "acceptsLanguages",
        "languages",
        "acceptsLanguage",
        "range",
        "size",
        "options",
        "param",
        "defaultValue",
        "params",
        "body",
        "query",
        "args",
        "length",
        "hasOwnProperty",
        "is",
        "arr",
        "Array",
        "isArray",
        "i",
        "defineGetter",
        "protocol",
        "proto",
        "connection",
        "encrypted",
        "trust",
        "app",
        "remoteAddress",
        "index",
        "indexOf",
        "substring",
        "trim",
        "secure",
        "ip",
        "ips",
        "addrs",
        "all",
        "reverse",
        "pop",
        "subdomains",
        "hostname",
        "offset",
        "split",
        "slice",
        "path",
        "pathname",
        "host",
        "trimRight",
        "method",
        "res",
        "status",
        "statusCode",
        "stale",
        "xhr",
        "val",
        "obj",
        "getter",
        "defineProperty",
        "configurable",
        "enumerable"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar accepts = require('accepts');\r\nvar deprecate = require('depd')('express');\r\nvar isIP = require('net').isIP;\r\nvar typeis = require('type-is');\r\nvar http = require('http');\r\nvar fresh = require('fresh');\r\nvar parseRange = require('range-parser');\r\nvar parse = require('parseurl');\r\nvar proxyaddr = require('proxy-addr');\r\n\r\n/**\r\n * Request prototype.\r\n * @public\r\n */\r\n\r\nvar req = Object.create(http.IncomingMessage.prototype)\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = req\r\n\r\n/**\r\n * Return request header.\r\n *\r\n * The `Referrer` header field is special-cased,\r\n * both `Referrer` and `Referer` are interchangeable.\r\n *\r\n * Examples:\r\n *\r\n *     req.get('Content-Type');\r\n *     // => \"text/plain\"\r\n *\r\n *     req.get('content-type');\r\n *     // => \"text/plain\"\r\n *\r\n *     req.get('Something');\r\n *     // => undefined\r\n *\r\n * Aliased as `req.header()`.\r\n *\r\n * @param {String} name\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nreq.get =\r\nreq.header = function header(name) {\r\n  if (!name) {\r\n    throw new TypeError('name argument is required to req.get');\r\n  }\r\n\r\n  if (typeof name !== 'string') {\r\n    throw new TypeError('name must be a string to req.get');\r\n  }\r\n\r\n  var lc = name.toLowerCase();\r\n\r\n  switch (lc) {\r\n    case 'referer':\r\n    case 'referrer':\r\n      return this.headers.referrer\r\n        || this.headers.referer;\r\n    default:\r\n      return this.headers[lc];\r\n  }\r\n};\r\n\r\n/**\r\n * To do: update docs.\r\n *\r\n * Check if the given `type(s)` is acceptable, returning\r\n * the best match when true, otherwise `undefined`, in which\r\n * case you should respond with 406 \"Not Acceptable\".\r\n *\r\n * The `type` value may be a single MIME type string\r\n * such as \"application/json\", an extension name\r\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\r\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\r\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\r\n * or array is given, the _best_ match, if any is returned.\r\n *\r\n * Examples:\r\n *\r\n *     // Accept: text/html\r\n *     req.accepts('html');\r\n *     // => \"html\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     req.accepts('html');\r\n *     // => \"html\"\r\n *     req.accepts('text/html');\r\n *     // => \"text/html\"\r\n *     req.accepts('json, text');\r\n *     // => \"json\"\r\n *     req.accepts('application/json');\r\n *     // => \"application/json\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     req.accepts('image/png');\r\n *     req.accepts('png');\r\n *     // => undefined\r\n *\r\n *     // Accept: text/*;q=.5, application/json\r\n *     req.accepts(['html', 'json']);\r\n *     req.accepts('html', 'json');\r\n *     req.accepts('html, json');\r\n *     // => \"json\"\r\n *\r\n * @param {String|Array} type(s)\r\n * @return {String|Array|Boolean}\r\n * @public\r\n */\r\n\r\nreq.accepts = function(){\r\n  var accept = accepts(this);\r\n  return accept.types.apply(accept, arguments);\r\n};\r\n\r\n/**\r\n * Check if the given `encoding`s are accepted.\r\n *\r\n * @param {String} ...encoding\r\n * @return {String|Array}\r\n * @public\r\n */\r\n\r\nreq.acceptsEncodings = function(){\r\n  var accept = accepts(this);\r\n  return accept.encodings.apply(accept, arguments);\r\n};\r\n\r\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\r\n  'req.acceptsEncoding: Use acceptsEncodings instead');\r\n\r\n/**\r\n * Check if the given `charset`s are acceptable,\r\n * otherwise you should respond with 406 \"Not Acceptable\".\r\n *\r\n * @param {String} ...charset\r\n * @return {String|Array}\r\n * @public\r\n */\r\n\r\nreq.acceptsCharsets = function(){\r\n  var accept = accepts(this);\r\n  return accept.charsets.apply(accept, arguments);\r\n};\r\n\r\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\r\n  'req.acceptsCharset: Use acceptsCharsets instead');\r\n\r\n/**\r\n * Check if the given `lang`s are acceptable,\r\n * otherwise you should respond with 406 \"Not Acceptable\".\r\n *\r\n * @param {String} ...lang\r\n * @return {String|Array}\r\n * @public\r\n */\r\n\r\nreq.acceptsLanguages = function(){\r\n  var accept = accepts(this);\r\n  return accept.languages.apply(accept, arguments);\r\n};\r\n\r\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\r\n  'req.acceptsLanguage: Use acceptsLanguages instead');\r\n\r\n/**\r\n * Parse Range header field, capping to the given `size`.\r\n *\r\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\r\n * the case of a byte range this is of course the total number of bytes. If the\r\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\r\n * and `-2` when syntactically invalid.\r\n *\r\n * When ranges are returned, the array has a \"type\" property which is the type of\r\n * range that is required (most commonly, \"bytes\"). Each array element is an object\r\n * with a \"start\" and \"end\" property for the portion of the range.\r\n *\r\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\r\n * will be combined into a single range.\r\n *\r\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\r\n * should respond with 4 users when available, not 3.\r\n *\r\n * @param {number} size\r\n * @param {object} [options]\r\n * @param {boolean} [options.combine=false]\r\n * @return {number|array}\r\n * @public\r\n */\r\n\r\nreq.range = function range(size, options) {\r\n  var range = this.get('Range');\r\n  if (!range) return;\r\n  return parseRange(size, range, options);\r\n};\r\n\r\n/**\r\n * Return the value of param `name` when present or `defaultValue`.\r\n *\r\n *  - Checks route placeholders, ex: _/user/:id_\r\n *  - Checks body params, ex: id=12, {\"id\":12}\r\n *  - Checks query string params, ex: ?id=12\r\n *\r\n * To utilize request bodies, `req.body`\r\n * should be an object. This can be done by using\r\n * the `bodyParser()` middleware.\r\n *\r\n * @param {String} name\r\n * @param {Mixed} [defaultValue]\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nreq.param = function param(name, defaultValue) {\r\n  var params = this.params || {};\r\n  var body = this.body || {};\r\n  var query = this.query || {};\r\n\r\n  var args = arguments.length === 1\r\n    ? 'name'\r\n    : 'name, default';\r\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\r\n\r\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\r\n  if (null != body[name]) return body[name];\r\n  if (null != query[name]) return query[name];\r\n\r\n  return defaultValue;\r\n};\r\n\r\n/**\r\n * Check if the incoming request contains the \"Content-Type\"\r\n * header field, and it contains the give mime `type`.\r\n *\r\n * Examples:\r\n *\r\n *      // With Content-Type: text/html; charset=utf-8\r\n *      req.is('html');\r\n *      req.is('text/html');\r\n *      req.is('text/*');\r\n *      // => true\r\n *\r\n *      // When Content-Type is application/json\r\n *      req.is('json');\r\n *      req.is('application/json');\r\n *      req.is('application/*');\r\n *      // => true\r\n *\r\n *      req.is('html');\r\n *      // => false\r\n *\r\n * @param {String|Array} types...\r\n * @return {String|false|null}\r\n * @public\r\n */\r\n\r\nreq.is = function is(types) {\r\n  var arr = types;\r\n\r\n  // support flattened arguments\r\n  if (!Array.isArray(types)) {\r\n    arr = new Array(arguments.length);\r\n    for (var i = 0; i < arr.length; i++) {\r\n      arr[i] = arguments[i];\r\n    }\r\n  }\r\n\r\n  return typeis(this, arr);\r\n};\r\n\r\n/**\r\n * Return the protocol string \"http\" or \"https\"\r\n * when requested with TLS. When the \"trust proxy\"\r\n * setting trusts the socket address, the\r\n * \"X-Forwarded-Proto\" header field will be trusted\r\n * and used if present.\r\n *\r\n * If you're running behind a reverse proxy that\r\n * supplies https for you this may be enabled.\r\n *\r\n * @return {String}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'protocol', function protocol(){\r\n  var proto = this.connection.encrypted\r\n    ? 'https'\r\n    : 'http';\r\n  var trust = this.app.get('trust proxy fn');\r\n\r\n  if (!trust(this.connection.remoteAddress, 0)) {\r\n    return proto;\r\n  }\r\n\r\n  // Note: X-Forwarded-Proto is normally only ever a\r\n  //       single value, but this is to be safe.\r\n  var header = this.get('X-Forwarded-Proto') || proto\r\n  var index = header.indexOf(',')\r\n\r\n  return index !== -1\r\n    ? header.substring(0, index).trim()\r\n    : header.trim()\r\n});\r\n\r\n/**\r\n * Short-hand for:\r\n *\r\n *    req.protocol === 'https'\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'secure', function secure(){\r\n  return this.protocol === 'https';\r\n});\r\n\r\n/**\r\n * Return the remote address from the trusted proxy.\r\n *\r\n * The is the remote address on the socket unless\r\n * \"trust proxy\" is set.\r\n *\r\n * @return {String}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'ip', function ip(){\r\n  var trust = this.app.get('trust proxy fn');\r\n  return proxyaddr(this, trust);\r\n});\r\n\r\n/**\r\n * When \"trust proxy\" is set, trusted proxy addresses + client.\r\n *\r\n * For example if the value were \"client, proxy1, proxy2\"\r\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\r\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\r\n * \"proxy2\" were trusted.\r\n *\r\n * @return {Array}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'ips', function ips() {\r\n  var trust = this.app.get('trust proxy fn');\r\n  var addrs = proxyaddr.all(this, trust);\r\n\r\n  // reverse the order (to farthest -> closest)\r\n  // and remove socket address\r\n  addrs.reverse().pop()\r\n\r\n  return addrs\r\n});\r\n\r\n/**\r\n * Return subdomains as an array.\r\n *\r\n * Subdomains are the dot-separated parts of the host before the main domain of\r\n * the app. By default, the domain of the app is assumed to be the last two\r\n * parts of the host. This can be changed by setting \"subdomain offset\".\r\n *\r\n * For example, if the domain is \"tobi.ferrets.example.com\":\r\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\r\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\r\n *\r\n * @return {Array}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'subdomains', function subdomains() {\r\n  var hostname = this.hostname;\r\n\r\n  if (!hostname) return [];\r\n\r\n  var offset = this.app.get('subdomain offset');\r\n  var subdomains = !isIP(hostname)\r\n    ? hostname.split('.').reverse()\r\n    : [hostname];\r\n\r\n  return subdomains.slice(offset);\r\n});\r\n\r\n/**\r\n * Short-hand for `url.parse(req.url).pathname`.\r\n *\r\n * @return {String}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'path', function path() {\r\n  return parse(this).pathname;\r\n});\r\n\r\n/**\r\n * Parse the \"Host\" header field to a hostname.\r\n *\r\n * When the \"trust proxy\" setting trusts the socket\r\n * address, the \"X-Forwarded-Host\" header field will\r\n * be trusted.\r\n *\r\n * @return {String}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'hostname', function hostname(){\r\n  var trust = this.app.get('trust proxy fn');\r\n  var host = this.get('X-Forwarded-Host');\r\n\r\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\r\n    host = this.get('Host');\r\n  } else if (host.indexOf(',') !== -1) {\r\n    // Note: X-Forwarded-Host is normally only ever a\r\n    //       single value, but this is to be safe.\r\n    host = host.substring(0, host.indexOf(',')).trimRight()\r\n  }\r\n\r\n  if (!host) return;\r\n\r\n  // IPv6 literal support\r\n  var offset = host[0] === '['\r\n    ? host.indexOf(']') + 1\r\n    : 0;\r\n  var index = host.indexOf(':', offset);\r\n\r\n  return index !== -1\r\n    ? host.substring(0, index)\r\n    : host;\r\n});\r\n\r\n// TODO: change req.host to return host in next major\r\n\r\ndefineGetter(req, 'host', deprecate.function(function host(){\r\n  return this.hostname;\r\n}, 'req.host: Use req.hostname instead'));\r\n\r\n/**\r\n * Check if the request is fresh, aka\r\n * Last-Modified and/or the ETag\r\n * still match.\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'fresh', function(){\r\n  var method = this.method;\r\n  var res = this.res\r\n  var status = res.statusCode\r\n\r\n  // GET or HEAD for weak freshness validation only\r\n  if ('GET' !== method && 'HEAD' !== method) return false;\r\n\r\n  // 2xx or 304 as per rfc2616 14.26\r\n  if ((status >= 200 && status < 300) || 304 === status) {\r\n    return fresh(this.headers, {\r\n      'etag': res.get('ETag'),\r\n      'last-modified': res.get('Last-Modified')\r\n    })\r\n  }\r\n\r\n  return false;\r\n});\r\n\r\n/**\r\n * Check if the request is stale, aka\r\n * \"Last-Modified\" and / or the \"ETag\" for the\r\n * resource has changed.\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'stale', function stale(){\r\n  return !this.fresh;\r\n});\r\n\r\n/**\r\n * Check if the request was an _XMLHttpRequest_.\r\n *\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\ndefineGetter(req, 'xhr', function xhr(){\r\n  var val = this.get('X-Requested-With') || '';\r\n  return val.toLowerCase() === 'xmlhttprequest';\r\n});\r\n\r\n/**\r\n * Helper function for creating a getter on an object.\r\n *\r\n * @param {Object} obj\r\n * @param {String} name\r\n * @param {Function} getter\r\n * @private\r\n */\r\nfunction defineGetter(obj, name, getter) {\r\n  Object.defineProperty(obj, name, {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get: getter\r\n  });\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\accepts\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\accepts\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\accepts\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\accepts\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\accepts\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\accepts\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\accepts\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * accepts\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar Negotiator = require('negotiator');\n\nvar mime = require('mime-types');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = Accepts;\n/**\r\n * Create a new Accepts object for the given req.\r\n *\r\n * @param {object} req\r\n * @public\r\n */\n\nfunction Accepts(req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req);\n  }\n\n  this.headers = req.headers;\n  this.negotiator = new Negotiator(req);\n}\n/**\r\n * Check if the given `type(s)` is acceptable, returning\r\n * the best match when true, otherwise `undefined`, in which\r\n * case you should respond with 406 \"Not Acceptable\".\r\n *\r\n * The `type` value may be a single mime type string\r\n * such as \"application/json\", the extension name\r\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\r\n * or array is given the _best_ match, if any is returned.\r\n *\r\n * Examples:\r\n *\r\n *     // Accept: text/html\r\n *     this.types('html');\r\n *     // => \"html\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     this.types('html');\r\n *     // => \"html\"\r\n *     this.types('text/html');\r\n *     // => \"text/html\"\r\n *     this.types('json', 'text');\r\n *     // => \"json\"\r\n *     this.types('application/json');\r\n *     // => \"application/json\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     this.types('image/png');\r\n *     this.types('png');\r\n *     // => undefined\r\n *\r\n *     // Accept: text/*;q=.5, application/json\r\n *     this.types(['html', 'json']);\r\n *     this.types('html', 'json');\r\n *     // => \"json\"\r\n *\r\n * @param {String|Array} types...\r\n * @return {String|Array|Boolean}\r\n * @public\r\n */\n\n\nAccepts.prototype.type = Accepts.prototype.types = function (types_) {\n  var types = types_; // support flattened arguments\n\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length);\n\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i];\n    }\n  } // no types, return all requested types\n\n\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes();\n  } // no accept header, return first given type\n\n\n  if (!this.headers.accept) {\n    return types[0];\n  }\n\n  var mimes = types.map(extToMime);\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));\n  var first = accepts[0];\n  return first ? types[mimes.indexOf(first)] : false;\n};\n/**\r\n * Return accepted encodings or best fit based on `encodings`.\r\n *\r\n * Given `Accept-Encoding: gzip, deflate`\r\n * an array sorted by quality is returned:\r\n *\r\n *     ['gzip', 'deflate']\r\n *\r\n * @param {String|Array} encodings...\r\n * @return {String|Array}\r\n * @public\r\n */\n\n\nAccepts.prototype.encoding = Accepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_; // support flattened arguments\n\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length);\n\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i];\n    }\n  } // no encodings, return all requested encodings\n\n\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings();\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false;\n};\n/**\r\n * Return accepted charsets or best fit based on `charsets`.\r\n *\r\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\r\n * an array sorted by quality is returned:\r\n *\r\n *     ['utf-8', 'utf-7', 'iso-8859-1']\r\n *\r\n * @param {String|Array} charsets...\r\n * @return {String|Array}\r\n * @public\r\n */\n\n\nAccepts.prototype.charset = Accepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_; // support flattened arguments\n\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length);\n\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i];\n    }\n  } // no charsets, return all requested charsets\n\n\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets();\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false;\n};\n/**\r\n * Return accepted languages or best fit based on `langs`.\r\n *\r\n * Given `Accept-Language: en;q=0.8, es, pt`\r\n * an array sorted by quality is returned:\r\n *\r\n *     ['es', 'pt', 'en']\r\n *\r\n * @param {String|Array} langs...\r\n * @return {Array|String}\r\n * @public\r\n */\n\n\nAccepts.prototype.lang = Accepts.prototype.langs = Accepts.prototype.language = Accepts.prototype.languages = function (languages_) {\n  var languages = languages_; // support flattened arguments\n\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length);\n\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i];\n    }\n  } // no languages, return all requested languages\n\n\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages();\n  }\n\n  return this.negotiator.languages(languages)[0] || false;\n};\n/**\r\n * Convert extnames to mime.\r\n *\r\n * @param {String} type\r\n * @return {String}\r\n * @private\r\n */\n\n\nfunction extToMime(type) {\n  return type.indexOf('/') === -1 ? mime.lookup(type) : type;\n}\n/**\r\n * Check if mime is valid.\r\n *\r\n * @param {String} type\r\n * @return {String}\r\n * @private\r\n */\n\n\nfunction validMime(type) {\n  return typeof type === 'string';\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Negotiator",
        "require",
        "mime",
        "module",
        "exports",
        "Accepts",
        "req",
        "headers",
        "negotiator",
        "prototype",
        "type",
        "types",
        "types_",
        "Array",
        "isArray",
        "arguments",
        "length",
        "i",
        "mediaTypes",
        "accept",
        "mimes",
        "map",
        "extToMime",
        "accepts",
        "filter",
        "validMime",
        "first",
        "indexOf",
        "encoding",
        "encodings",
        "encodings_",
        "charset",
        "charsets",
        "charsets_",
        "lang",
        "langs",
        "language",
        "languages",
        "languages_",
        "lookup"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\accepts\\",
      "sourcesContent": [
        "/*!\r\n * accepts\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Negotiator = require('negotiator')\r\nvar mime = require('mime-types')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = Accepts\r\n\r\n/**\r\n * Create a new Accepts object for the given req.\r\n *\r\n * @param {object} req\r\n * @public\r\n */\r\n\r\nfunction Accepts (req) {\r\n  if (!(this instanceof Accepts)) {\r\n    return new Accepts(req)\r\n  }\r\n\r\n  this.headers = req.headers\r\n  this.negotiator = new Negotiator(req)\r\n}\r\n\r\n/**\r\n * Check if the given `type(s)` is acceptable, returning\r\n * the best match when true, otherwise `undefined`, in which\r\n * case you should respond with 406 \"Not Acceptable\".\r\n *\r\n * The `type` value may be a single mime type string\r\n * such as \"application/json\", the extension name\r\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\r\n * or array is given the _best_ match, if any is returned.\r\n *\r\n * Examples:\r\n *\r\n *     // Accept: text/html\r\n *     this.types('html');\r\n *     // => \"html\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     this.types('html');\r\n *     // => \"html\"\r\n *     this.types('text/html');\r\n *     // => \"text/html\"\r\n *     this.types('json', 'text');\r\n *     // => \"json\"\r\n *     this.types('application/json');\r\n *     // => \"application/json\"\r\n *\r\n *     // Accept: text/*, application/json\r\n *     this.types('image/png');\r\n *     this.types('png');\r\n *     // => undefined\r\n *\r\n *     // Accept: text/*;q=.5, application/json\r\n *     this.types(['html', 'json']);\r\n *     this.types('html', 'json');\r\n *     // => \"json\"\r\n *\r\n * @param {String|Array} types...\r\n * @return {String|Array|Boolean}\r\n * @public\r\n */\r\n\r\nAccepts.prototype.type =\r\nAccepts.prototype.types = function (types_) {\r\n  var types = types_\r\n\r\n  // support flattened arguments\r\n  if (types && !Array.isArray(types)) {\r\n    types = new Array(arguments.length)\r\n    for (var i = 0; i < types.length; i++) {\r\n      types[i] = arguments[i]\r\n    }\r\n  }\r\n\r\n  // no types, return all requested types\r\n  if (!types || types.length === 0) {\r\n    return this.negotiator.mediaTypes()\r\n  }\r\n\r\n  // no accept header, return first given type\r\n  if (!this.headers.accept) {\r\n    return types[0]\r\n  }\r\n\r\n  var mimes = types.map(extToMime)\r\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\r\n  var first = accepts[0]\r\n\r\n  return first\r\n    ? types[mimes.indexOf(first)]\r\n    : false\r\n}\r\n\r\n/**\r\n * Return accepted encodings or best fit based on `encodings`.\r\n *\r\n * Given `Accept-Encoding: gzip, deflate`\r\n * an array sorted by quality is returned:\r\n *\r\n *     ['gzip', 'deflate']\r\n *\r\n * @param {String|Array} encodings...\r\n * @return {String|Array}\r\n * @public\r\n */\r\n\r\nAccepts.prototype.encoding =\r\nAccepts.prototype.encodings = function (encodings_) {\r\n  var encodings = encodings_\r\n\r\n  // support flattened arguments\r\n  if (encodings && !Array.isArray(encodings)) {\r\n    encodings = new Array(arguments.length)\r\n    for (var i = 0; i < encodings.length; i++) {\r\n      encodings[i] = arguments[i]\r\n    }\r\n  }\r\n\r\n  // no encodings, return all requested encodings\r\n  if (!encodings || encodings.length === 0) {\r\n    return this.negotiator.encodings()\r\n  }\r\n\r\n  return this.negotiator.encodings(encodings)[0] || false\r\n}\r\n\r\n/**\r\n * Return accepted charsets or best fit based on `charsets`.\r\n *\r\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\r\n * an array sorted by quality is returned:\r\n *\r\n *     ['utf-8', 'utf-7', 'iso-8859-1']\r\n *\r\n * @param {String|Array} charsets...\r\n * @return {String|Array}\r\n * @public\r\n */\r\n\r\nAccepts.prototype.charset =\r\nAccepts.prototype.charsets = function (charsets_) {\r\n  var charsets = charsets_\r\n\r\n  // support flattened arguments\r\n  if (charsets && !Array.isArray(charsets)) {\r\n    charsets = new Array(arguments.length)\r\n    for (var i = 0; i < charsets.length; i++) {\r\n      charsets[i] = arguments[i]\r\n    }\r\n  }\r\n\r\n  // no charsets, return all requested charsets\r\n  if (!charsets || charsets.length === 0) {\r\n    return this.negotiator.charsets()\r\n  }\r\n\r\n  return this.negotiator.charsets(charsets)[0] || false\r\n}\r\n\r\n/**\r\n * Return accepted languages or best fit based on `langs`.\r\n *\r\n * Given `Accept-Language: en;q=0.8, es, pt`\r\n * an array sorted by quality is returned:\r\n *\r\n *     ['es', 'pt', 'en']\r\n *\r\n * @param {String|Array} langs...\r\n * @return {Array|String}\r\n * @public\r\n */\r\n\r\nAccepts.prototype.lang =\r\nAccepts.prototype.langs =\r\nAccepts.prototype.language =\r\nAccepts.prototype.languages = function (languages_) {\r\n  var languages = languages_\r\n\r\n  // support flattened arguments\r\n  if (languages && !Array.isArray(languages)) {\r\n    languages = new Array(arguments.length)\r\n    for (var i = 0; i < languages.length; i++) {\r\n      languages[i] = arguments[i]\r\n    }\r\n  }\r\n\r\n  // no languages, return all requested languages\r\n  if (!languages || languages.length === 0) {\r\n    return this.negotiator.languages()\r\n  }\r\n\r\n  return this.negotiator.languages(languages)[0] || false\r\n}\r\n\r\n/**\r\n * Convert extnames to mime.\r\n *\r\n * @param {String} type\r\n * @return {String}\r\n * @private\r\n */\r\n\r\nfunction extToMime (type) {\r\n  return type.indexOf('/') === -1\r\n    ? mime.lookup(type)\r\n    : type\r\n}\r\n\r\n/**\r\n * Check if mime is valid.\r\n *\r\n * @param {String} type\r\n * @return {String}\r\n * @private\r\n */\r\n\r\nfunction validMime (type) {\r\n  return typeof type === 'string'\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210587
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\negotiator\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\negotiator\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\negotiator\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\negotiator\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\negotiator\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\negotiator\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\negotiator\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * negotiator\r\n * Copyright(c) 2012 Federico Romero\r\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Cached loaded submodules.\r\n * @private\r\n */\n\nvar modules = Object.create(null);\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n/**\r\n * Create a Negotiator instance from a request.\r\n * @param {object} request\r\n * @public\r\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  var preferredCharsets = loadModule('charset').preferredCharsets;\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  var preferredEncodings = loadModule('encoding').preferredEncodings;\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  var preferredLanguages = loadModule('language').preferredLanguages;\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  var preferredMediaTypes = loadModule('mediaType').preferredMediaTypes;\n  return preferredMediaTypes(this.request.headers.accept, available);\n}; // Backwards compatibility\n\n\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n/**\r\n * Load the given module.\r\n * @private\r\n */\n\nfunction loadModule(moduleName) {\n  var module = modules[moduleName];\n\n  if (module !== undefined) {\n    return module;\n  } // This uses a switch for static require analysis\n\n\n  switch (moduleName) {\n    case 'charset':\n      module = require('./lib/charset');\n      break;\n\n    case 'encoding':\n      module = require('./lib/encoding');\n      break;\n\n    case 'language':\n      module = require('./lib/language');\n      break;\n\n    case 'mediaType':\n      module = require('./lib/mediaType');\n      break;\n\n    default:\n      throw new Error('Cannot find module \\'' + moduleName + '\\'');\n  } // Store to prevent invoking require()\n\n\n  modules[moduleName] = module;\n  return module;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "modules",
        "Object",
        "create",
        "module",
        "exports",
        "Negotiator",
        "request",
        "prototype",
        "charset",
        "available",
        "set",
        "charsets",
        "preferredCharsets",
        "loadModule",
        "headers",
        "encoding",
        "encodings",
        "preferredEncodings",
        "language",
        "languages",
        "preferredLanguages",
        "mediaType",
        "mediaTypes",
        "preferredMediaTypes",
        "accept",
        "preferredCharset",
        "preferredEncoding",
        "preferredLanguage",
        "preferredMediaType",
        "moduleName",
        "undefined",
        "require",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\negotiator\\",
      "sourcesContent": [
        "/*!\r\n * negotiator\r\n * Copyright(c) 2012 Federico Romero\r\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Cached loaded submodules.\r\n * @private\r\n */\r\n\r\nvar modules = Object.create(null);\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = Negotiator;\r\nmodule.exports.Negotiator = Negotiator;\r\n\r\n/**\r\n * Create a Negotiator instance from a request.\r\n * @param {object} request\r\n * @public\r\n */\r\n\r\nfunction Negotiator(request) {\r\n  if (!(this instanceof Negotiator)) {\r\n    return new Negotiator(request);\r\n  }\r\n\r\n  this.request = request;\r\n}\r\n\r\nNegotiator.prototype.charset = function charset(available) {\r\n  var set = this.charsets(available);\r\n  return set && set[0];\r\n};\r\n\r\nNegotiator.prototype.charsets = function charsets(available) {\r\n  var preferredCharsets = loadModule('charset').preferredCharsets;\r\n  return preferredCharsets(this.request.headers['accept-charset'], available);\r\n};\r\n\r\nNegotiator.prototype.encoding = function encoding(available) {\r\n  var set = this.encodings(available);\r\n  return set && set[0];\r\n};\r\n\r\nNegotiator.prototype.encodings = function encodings(available) {\r\n  var preferredEncodings = loadModule('encoding').preferredEncodings;\r\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\r\n};\r\n\r\nNegotiator.prototype.language = function language(available) {\r\n  var set = this.languages(available);\r\n  return set && set[0];\r\n};\r\n\r\nNegotiator.prototype.languages = function languages(available) {\r\n  var preferredLanguages = loadModule('language').preferredLanguages;\r\n  return preferredLanguages(this.request.headers['accept-language'], available);\r\n};\r\n\r\nNegotiator.prototype.mediaType = function mediaType(available) {\r\n  var set = this.mediaTypes(available);\r\n  return set && set[0];\r\n};\r\n\r\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\r\n  var preferredMediaTypes = loadModule('mediaType').preferredMediaTypes;\r\n  return preferredMediaTypes(this.request.headers.accept, available);\r\n};\r\n\r\n// Backwards compatibility\r\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\r\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\r\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\r\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\r\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\r\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\r\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\r\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\r\n\r\n/**\r\n * Load the given module.\r\n * @private\r\n */\r\n\r\nfunction loadModule(moduleName) {\r\n  var module = modules[moduleName];\r\n\r\n  if (module !== undefined) {\r\n    return module;\r\n  }\r\n\r\n  // This uses a switch for static require analysis\r\n  switch (moduleName) {\r\n    case 'charset':\r\n      module = require('./lib/charset');\r\n      break;\r\n    case 'encoding':\r\n      module = require('./lib/encoding');\r\n      break;\r\n    case 'language':\r\n      module = require('./lib/language');\r\n      break;\r\n    case 'mediaType':\r\n      module = require('./lib/mediaType');\r\n      break;\r\n    default:\r\n      throw new Error('Cannot find module \\'' + moduleName + '\\'');\r\n  }\r\n\r\n  // Store to prevent invoking require()\r\n  modules[moduleName] = module;\r\n\r\n  return module;\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211601
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\mime-types\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\mime-types\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-types\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-types\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-types\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-types\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-types\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * mime-types\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar db = require('mime-db');\n\nvar extname = require('path').extname;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/;\nvar TEXT_TYPE_REGEXP = /^text\\//i;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nexports.charset = charset;\nexports.charsets = {\n  lookup: charset\n};\nexports.contentType = contentType;\nexports.extension = extension;\nexports.extensions = Object.create(null);\nexports.lookup = lookup;\nexports.types = Object.create(null); // Populate the extensions/types maps\n\npopulateMaps(exports.extensions, exports.types);\n/**\r\n * Get the default charset for a MIME type.\r\n *\r\n * @param {string} type\r\n * @return {boolean|string}\r\n */\n\nfunction charset(type) {\n  if (!type || typeof type !== 'string') {\n    return false;\n  } // TODO: use media-typer\n\n\n  var match = EXTRACT_TYPE_REGEXP.exec(type);\n  var mime = match && db[match[1].toLowerCase()];\n\n  if (mime && mime.charset) {\n    return mime.charset;\n  } // default text/* to utf-8\n\n\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8';\n  }\n\n  return false;\n}\n/**\r\n * Create a full Content-Type header given a MIME type or extension.\r\n *\r\n * @param {string} str\r\n * @return {boolean|string}\r\n */\n\n\nfunction contentType(str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false;\n  }\n\n  var mime = str.indexOf('/') === -1 ? exports.lookup(str) : str;\n\n  if (!mime) {\n    return false;\n  } // TODO: use content-type or other module\n\n\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime);\n    if (charset) mime += '; charset=' + charset.toLowerCase();\n  }\n\n  return mime;\n}\n/**\r\n * Get the default extension for a MIME type.\r\n *\r\n * @param {string} type\r\n * @return {boolean|string}\r\n */\n\n\nfunction extension(type) {\n  if (!type || typeof type !== 'string') {\n    return false;\n  } // TODO: use media-typer\n\n\n  var match = EXTRACT_TYPE_REGEXP.exec(type); // get extensions\n\n  var exts = match && exports.extensions[match[1].toLowerCase()];\n\n  if (!exts || !exts.length) {\n    return false;\n  }\n\n  return exts[0];\n}\n/**\r\n * Lookup the MIME type for a file path/extension.\r\n *\r\n * @param {string} path\r\n * @return {boolean|string}\r\n */\n\n\nfunction lookup(path) {\n  if (!path || typeof path !== 'string') {\n    return false;\n  } // get the extension (\"ext\" or \".ext\" or full path)\n\n\n  var extension = extname('x.' + path).toLowerCase().substr(1);\n\n  if (!extension) {\n    return false;\n  }\n\n  return exports.types[extension] || false;\n}\n/**\r\n * Populate the extensions and types maps.\r\n * @private\r\n */\n\n\nfunction populateMaps(extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana'];\n  Object.keys(db).forEach(function forEachMimeType(type) {\n    var mime = db[type];\n    var exts = mime.extensions;\n\n    if (!exts || !exts.length) {\n      return;\n    } // mime -> extensions\n\n\n    extensions[type] = exts; // extension -> mime\n\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i];\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source);\n        var to = preference.indexOf(mime.source);\n\n        if (types[extension] !== 'application/octet-stream' && (from > to || from === to && types[extension].substr(0, 12) === 'application/')) {\n          // skip the remapping\n          continue;\n        }\n      } // set the extension -> mime\n\n\n      types[extension] = type;\n    }\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "db",
        "require",
        "extname",
        "EXTRACT_TYPE_REGEXP",
        "TEXT_TYPE_REGEXP",
        "exports",
        "charset",
        "charsets",
        "lookup",
        "contentType",
        "extension",
        "extensions",
        "Object",
        "create",
        "types",
        "populateMaps",
        "type",
        "match",
        "exec",
        "mime",
        "toLowerCase",
        "test",
        "str",
        "indexOf",
        "exts",
        "length",
        "path",
        "substr",
        "preference",
        "undefined",
        "keys",
        "forEach",
        "forEachMimeType",
        "i",
        "from",
        "source",
        "to"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-types\\",
      "sourcesContent": [
        "/*!\r\n * mime-types\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar db = require('mime-db')\r\nvar extname = require('path').extname\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\r\nvar TEXT_TYPE_REGEXP = /^text\\//i\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.charset = charset\r\nexports.charsets = { lookup: charset }\r\nexports.contentType = contentType\r\nexports.extension = extension\r\nexports.extensions = Object.create(null)\r\nexports.lookup = lookup\r\nexports.types = Object.create(null)\r\n\r\n// Populate the extensions/types maps\r\npopulateMaps(exports.extensions, exports.types)\r\n\r\n/**\r\n * Get the default charset for a MIME type.\r\n *\r\n * @param {string} type\r\n * @return {boolean|string}\r\n */\r\n\r\nfunction charset (type) {\r\n  if (!type || typeof type !== 'string') {\r\n    return false\r\n  }\r\n\r\n  // TODO: use media-typer\r\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\r\n  var mime = match && db[match[1].toLowerCase()]\r\n\r\n  if (mime && mime.charset) {\r\n    return mime.charset\r\n  }\r\n\r\n  // default text/* to utf-8\r\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\r\n    return 'UTF-8'\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Create a full Content-Type header given a MIME type or extension.\r\n *\r\n * @param {string} str\r\n * @return {boolean|string}\r\n */\r\n\r\nfunction contentType (str) {\r\n  // TODO: should this even be in this module?\r\n  if (!str || typeof str !== 'string') {\r\n    return false\r\n  }\r\n\r\n  var mime = str.indexOf('/') === -1\r\n    ? exports.lookup(str)\r\n    : str\r\n\r\n  if (!mime) {\r\n    return false\r\n  }\r\n\r\n  // TODO: use content-type or other module\r\n  if (mime.indexOf('charset') === -1) {\r\n    var charset = exports.charset(mime)\r\n    if (charset) mime += '; charset=' + charset.toLowerCase()\r\n  }\r\n\r\n  return mime\r\n}\r\n\r\n/**\r\n * Get the default extension for a MIME type.\r\n *\r\n * @param {string} type\r\n * @return {boolean|string}\r\n */\r\n\r\nfunction extension (type) {\r\n  if (!type || typeof type !== 'string') {\r\n    return false\r\n  }\r\n\r\n  // TODO: use media-typer\r\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\r\n\r\n  // get extensions\r\n  var exts = match && exports.extensions[match[1].toLowerCase()]\r\n\r\n  if (!exts || !exts.length) {\r\n    return false\r\n  }\r\n\r\n  return exts[0]\r\n}\r\n\r\n/**\r\n * Lookup the MIME type for a file path/extension.\r\n *\r\n * @param {string} path\r\n * @return {boolean|string}\r\n */\r\n\r\nfunction lookup (path) {\r\n  if (!path || typeof path !== 'string') {\r\n    return false\r\n  }\r\n\r\n  // get the extension (\"ext\" or \".ext\" or full path)\r\n  var extension = extname('x.' + path)\r\n    .toLowerCase()\r\n    .substr(1)\r\n\r\n  if (!extension) {\r\n    return false\r\n  }\r\n\r\n  return exports.types[extension] || false\r\n}\r\n\r\n/**\r\n * Populate the extensions and types maps.\r\n * @private\r\n */\r\n\r\nfunction populateMaps (extensions, types) {\r\n  // source preference (least -> most)\r\n  var preference = ['nginx', 'apache', undefined, 'iana']\r\n\r\n  Object.keys(db).forEach(function forEachMimeType (type) {\r\n    var mime = db[type]\r\n    var exts = mime.extensions\r\n\r\n    if (!exts || !exts.length) {\r\n      return\r\n    }\r\n\r\n    // mime -> extensions\r\n    extensions[type] = exts\r\n\r\n    // extension -> mime\r\n    for (var i = 0; i < exts.length; i++) {\r\n      var extension = exts[i]\r\n\r\n      if (types[extension]) {\r\n        var from = preference.indexOf(db[types[extension]].source)\r\n        var to = preference.indexOf(mime.source)\r\n\r\n        if (types[extension] !== 'application/octet-stream' &&\r\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\r\n          // skip the remapping\r\n          continue\r\n        }\r\n      }\r\n\r\n      // set the extension -> mime\r\n      types[extension] = type\r\n    }\r\n  })\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211586
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\mime-db\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\mime-db\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-db\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-db\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-db\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-db\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-db\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * mime-db\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\n\n/**\r\n * Module exports.\r\n */\nmodule.exports = require('./db.json');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLE9BQU8sQ0FBQyxXQUFELENBQXhCIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxtaW1lLWRiXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogbWltZS1kYlxyXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKi9cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kYi5qc29uJylcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "require"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,WAAD,CAAxB",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\mime-db\\",
      "sourcesContent": [
        "/*!\r\n * mime-db\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = require('./db.json')\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211570
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\type-is\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\type-is\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\type-is\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\type-is\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\type-is\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\type-is\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\type-is\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * type-is\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar typer = require('media-typer');\n\nvar mime = require('mime-types');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = typeofrequest;\nmodule.exports.is = typeis;\nmodule.exports.hasBody = hasbody;\nmodule.exports.normalize = normalize;\nmodule.exports.match = mimeMatch;\n/**\r\n * Compare a `value` content-type with `types`.\r\n * Each `type` can be an extension like `html`,\r\n * a special shortcut like `multipart` or `urlencoded`,\r\n * or a mime type.\r\n *\r\n * If no types match, `false` is returned.\r\n * Otherwise, the first `type` that matches is returned.\r\n *\r\n * @param {String} value\r\n * @param {Array} types\r\n * @public\r\n */\n\nfunction typeis(value, types_) {\n  var i;\n  var types = types_; // remove parameters and normalize\n\n  var val = tryNormalizeType(value); // no type or invalid\n\n  if (!val) {\n    return false;\n  } // support flattened arguments\n\n\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1);\n\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1];\n    }\n  } // no types, return the content type\n\n\n  if (!types || !types.length) {\n    return val;\n  }\n\n  var type;\n\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1 ? val : type;\n    }\n  } // no matches\n\n\n  return false;\n}\n/**\r\n * Check if a request has a request body.\r\n * A request with a body __must__ either have `transfer-encoding`\r\n * or `content-length` headers set.\r\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\r\n *\r\n * @param {Object} request\r\n * @return {Boolean}\r\n * @public\r\n */\n\n\nfunction hasbody(req) {\n  return req.headers['transfer-encoding'] !== undefined || !isNaN(req.headers['content-length']);\n}\n/**\r\n * Check if the incoming request contains the \"Content-Type\"\r\n * header field, and it contains any of the give mime `type`s.\r\n * If there is no request body, `null` is returned.\r\n * If there is no content type, `false` is returned.\r\n * Otherwise, it returns the first `type` that matches.\r\n *\r\n * Examples:\r\n *\r\n *     // With Content-Type: text/html; charset=utf-8\r\n *     this.is('html'); // => 'html'\r\n *     this.is('text/html'); // => 'text/html'\r\n *     this.is('text/*', 'application/json'); // => 'text/html'\r\n *\r\n *     // When Content-Type is application/json\r\n *     this.is('json', 'urlencoded'); // => 'json'\r\n *     this.is('application/json'); // => 'application/json'\r\n *     this.is('html', 'application/*'); // => 'application/json'\r\n *\r\n *     this.is('html'); // => false\r\n *\r\n * @param {String|Array} types...\r\n * @return {String|false|null}\r\n * @public\r\n */\n\n\nfunction typeofrequest(req, types_) {\n  var types = types_; // no body\n\n  if (!hasbody(req)) {\n    return null;\n  } // support flattened arguments\n\n\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1);\n\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1];\n    }\n  } // request content type\n\n\n  var value = req.headers['content-type'];\n  return typeis(value, types);\n}\n/**\r\n * Normalize a mime type.\r\n * If it's a shorthand, expand it to a valid mime type.\r\n *\r\n * In general, you probably want:\r\n *\r\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\r\n *\r\n * Then use the appropriate body parsers.\r\n * These three are the most common request body types\r\n * and are thus ensured to work.\r\n *\r\n * @param {String} type\r\n * @private\r\n */\n\n\nfunction normalize(type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false;\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded';\n\n    case 'multipart':\n      return 'multipart/*';\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type;\n  }\n\n  return type.indexOf('/') === -1 ? mime.lookup(type) : type;\n}\n/**\r\n * Check if `expected` mime type\r\n * matches `actual` mime type with\r\n * wildcard and +suffix support.\r\n *\r\n * @param {String} expected\r\n * @param {String} actual\r\n * @return {Boolean}\r\n * @private\r\n */\n\n\nfunction mimeMatch(expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false;\n  } // split types\n\n\n  var actualParts = actual.split('/');\n  var expectedParts = expected.split('/'); // invalid format\n\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false;\n  } // validate type\n\n\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false;\n  } // validate suffix wildcard\n\n\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 && expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length);\n  } // validate subtype\n\n\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false;\n  }\n\n  return true;\n}\n/**\r\n * Normalize a type and remove parameters.\r\n *\r\n * @param {string} value\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction normalizeType(value) {\n  // parse the type\n  var type = typer.parse(value); // remove the parameters\n\n  type.parameters = undefined; // reformat it\n\n  return typer.format(type);\n}\n/**\r\n * Try to normalize a type and remove parameters.\r\n *\r\n * @param {string} value\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction tryNormalizeType(value) {\n  if (!value) {\n    return null;\n  }\n\n  try {\n    return normalizeType(value);\n  } catch (err) {\n    return null;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "typer",
        "require",
        "mime",
        "module",
        "exports",
        "typeofrequest",
        "is",
        "typeis",
        "hasBody",
        "hasbody",
        "normalize",
        "match",
        "mimeMatch",
        "value",
        "types_",
        "i",
        "types",
        "val",
        "tryNormalizeType",
        "Array",
        "isArray",
        "arguments",
        "length",
        "type",
        "indexOf",
        "req",
        "headers",
        "undefined",
        "isNaN",
        "lookup",
        "expected",
        "actual",
        "actualParts",
        "split",
        "expectedParts",
        "substr",
        "normalizeType",
        "parse",
        "parameters",
        "format",
        "err"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\type-is\\",
      "sourcesContent": [
        "/*!\r\n * type-is\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar typer = require('media-typer')\r\nvar mime = require('mime-types')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = typeofrequest\r\nmodule.exports.is = typeis\r\nmodule.exports.hasBody = hasbody\r\nmodule.exports.normalize = normalize\r\nmodule.exports.match = mimeMatch\r\n\r\n/**\r\n * Compare a `value` content-type with `types`.\r\n * Each `type` can be an extension like `html`,\r\n * a special shortcut like `multipart` or `urlencoded`,\r\n * or a mime type.\r\n *\r\n * If no types match, `false` is returned.\r\n * Otherwise, the first `type` that matches is returned.\r\n *\r\n * @param {String} value\r\n * @param {Array} types\r\n * @public\r\n */\r\n\r\nfunction typeis (value, types_) {\r\n  var i\r\n  var types = types_\r\n\r\n  // remove parameters and normalize\r\n  var val = tryNormalizeType(value)\r\n\r\n  // no type or invalid\r\n  if (!val) {\r\n    return false\r\n  }\r\n\r\n  // support flattened arguments\r\n  if (types && !Array.isArray(types)) {\r\n    types = new Array(arguments.length - 1)\r\n    for (i = 0; i < types.length; i++) {\r\n      types[i] = arguments[i + 1]\r\n    }\r\n  }\r\n\r\n  // no types, return the content type\r\n  if (!types || !types.length) {\r\n    return val\r\n  }\r\n\r\n  var type\r\n  for (i = 0; i < types.length; i++) {\r\n    if (mimeMatch(normalize(type = types[i]), val)) {\r\n      return type[0] === '+' || type.indexOf('*') !== -1\r\n        ? val\r\n        : type\r\n    }\r\n  }\r\n\r\n  // no matches\r\n  return false\r\n}\r\n\r\n/**\r\n * Check if a request has a request body.\r\n * A request with a body __must__ either have `transfer-encoding`\r\n * or `content-length` headers set.\r\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\r\n *\r\n * @param {Object} request\r\n * @return {Boolean}\r\n * @public\r\n */\r\n\r\nfunction hasbody (req) {\r\n  return req.headers['transfer-encoding'] !== undefined ||\r\n    !isNaN(req.headers['content-length'])\r\n}\r\n\r\n/**\r\n * Check if the incoming request contains the \"Content-Type\"\r\n * header field, and it contains any of the give mime `type`s.\r\n * If there is no request body, `null` is returned.\r\n * If there is no content type, `false` is returned.\r\n * Otherwise, it returns the first `type` that matches.\r\n *\r\n * Examples:\r\n *\r\n *     // With Content-Type: text/html; charset=utf-8\r\n *     this.is('html'); // => 'html'\r\n *     this.is('text/html'); // => 'text/html'\r\n *     this.is('text/*', 'application/json'); // => 'text/html'\r\n *\r\n *     // When Content-Type is application/json\r\n *     this.is('json', 'urlencoded'); // => 'json'\r\n *     this.is('application/json'); // => 'application/json'\r\n *     this.is('html', 'application/*'); // => 'application/json'\r\n *\r\n *     this.is('html'); // => false\r\n *\r\n * @param {String|Array} types...\r\n * @return {String|false|null}\r\n * @public\r\n */\r\n\r\nfunction typeofrequest (req, types_) {\r\n  var types = types_\r\n\r\n  // no body\r\n  if (!hasbody(req)) {\r\n    return null\r\n  }\r\n\r\n  // support flattened arguments\r\n  if (arguments.length > 2) {\r\n    types = new Array(arguments.length - 1)\r\n    for (var i = 0; i < types.length; i++) {\r\n      types[i] = arguments[i + 1]\r\n    }\r\n  }\r\n\r\n  // request content type\r\n  var value = req.headers['content-type']\r\n\r\n  return typeis(value, types)\r\n}\r\n\r\n/**\r\n * Normalize a mime type.\r\n * If it's a shorthand, expand it to a valid mime type.\r\n *\r\n * In general, you probably want:\r\n *\r\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\r\n *\r\n * Then use the appropriate body parsers.\r\n * These three are the most common request body types\r\n * and are thus ensured to work.\r\n *\r\n * @param {String} type\r\n * @private\r\n */\r\n\r\nfunction normalize (type) {\r\n  if (typeof type !== 'string') {\r\n    // invalid type\r\n    return false\r\n  }\r\n\r\n  switch (type) {\r\n    case 'urlencoded':\r\n      return 'application/x-www-form-urlencoded'\r\n    case 'multipart':\r\n      return 'multipart/*'\r\n  }\r\n\r\n  if (type[0] === '+') {\r\n    // \"+json\" -> \"*/*+json\" expando\r\n    return '*/*' + type\r\n  }\r\n\r\n  return type.indexOf('/') === -1\r\n    ? mime.lookup(type)\r\n    : type\r\n}\r\n\r\n/**\r\n * Check if `expected` mime type\r\n * matches `actual` mime type with\r\n * wildcard and +suffix support.\r\n *\r\n * @param {String} expected\r\n * @param {String} actual\r\n * @return {Boolean}\r\n * @private\r\n */\r\n\r\nfunction mimeMatch (expected, actual) {\r\n  // invalid type\r\n  if (expected === false) {\r\n    return false\r\n  }\r\n\r\n  // split types\r\n  var actualParts = actual.split('/')\r\n  var expectedParts = expected.split('/')\r\n\r\n  // invalid format\r\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\r\n    return false\r\n  }\r\n\r\n  // validate type\r\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\r\n    return false\r\n  }\r\n\r\n  // validate suffix wildcard\r\n  if (expectedParts[1].substr(0, 2) === '*+') {\r\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\r\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\r\n  }\r\n\r\n  // validate subtype\r\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Normalize a type and remove parameters.\r\n *\r\n * @param {string} value\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction normalizeType (value) {\r\n  // parse the type\r\n  var type = typer.parse(value)\r\n\r\n  // remove the parameters\r\n  type.parameters = undefined\r\n\r\n  // reformat it\r\n  return typer.format(type)\r\n}\r\n\r\n/**\r\n * Try to normalize a type and remove parameters.\r\n *\r\n * @param {string} value\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction tryNormalizeType (value) {\r\n  if (!value) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    return normalizeType(value)\r\n  } catch (err) {\r\n    return null\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211976
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\media-typer\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\media-typer\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\media-typer\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\media-typer\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\media-typer\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\media-typer\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\media-typer\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * media-typer\r\n * Copyright(c) 2014 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n/**\r\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\r\n *\r\n * parameter     = token \"=\" ( token | quoted-string )\r\n * token         = 1*<any CHAR except CTLs or separators>\r\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\r\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\r\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\r\n *               | \"{\" | \"}\" | SP | HT\r\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\r\n * qdtext        = <any TEXT except <\">>\r\n * quoted-pair   = \"\\\" CHAR\r\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\r\n * TEXT          = <any OCTET except CTLs, but including LWS>\r\n * LWS           = [CRLF] 1*( SP | HT )\r\n * CRLF          = CR LF\r\n * CR            = <US-ASCII CR, carriage return (13)>\r\n * LF            = <US-ASCII LF, linefeed (10)>\r\n * SP            = <US-ASCII SP, space (32)>\r\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\r\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\r\n * OCTET         = <any 8-bit sequence of data>\r\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/;\n/**\r\n * RegExp to match quoted-pair in RFC 2616\r\n *\r\n * quoted-pair = \"\\\" CHAR\r\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\r\n */\n\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n/**\r\n * RegExp to match chars that must be quoted-pair in RFC 2616\r\n */\n\nvar quoteRegExp = /([\\\\\"])/g;\n/**\r\n * RegExp to match type in RFC 6838\r\n *\r\n * type-name = restricted-name\r\n * subtype-name = restricted-name\r\n * restricted-name = restricted-name-first *126restricted-name-chars\r\n * restricted-name-first  = ALPHA / DIGIT\r\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\r\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\r\n * restricted-name-chars =/ \".\" ; Characters before first dot always\r\n *                              ; specify a facet name\r\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\r\n *                              ; specify a structured syntax suffix\r\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\r\n * DIGIT =  %x30-39             ; 0-9\r\n */\n\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/;\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/;\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n/**\r\n * Module exports.\r\n */\n\nexports.format = format;\nexports.parse = parse;\n/**\r\n * Format object to media type.\r\n *\r\n * @param {object} obj\r\n * @return {string}\r\n * @api public\r\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required');\n  }\n\n  var parameters = obj.parameters;\n  var subtype = obj.subtype;\n  var suffix = obj.suffix;\n  var type = obj.type;\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type');\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype');\n  } // format as type/subtype\n\n\n  var string = type + '/' + subtype; // append +suffix\n\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix');\n    }\n\n    string += '+' + suffix;\n  } // append parameters\n\n\n  if (parameters && typeof parameters === 'object') {\n    var param;\n    var params = Object.keys(parameters).sort();\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i];\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name');\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param]);\n    }\n  }\n\n  return string;\n}\n/**\r\n * Parse media type to object.\r\n *\r\n * @param {string|object} string\r\n * @return {Object}\r\n * @api public\r\n */\n\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required');\n  } // support req/res-like objects as argument\n\n\n  if (typeof string === 'object') {\n    string = getcontenttype(string);\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string');\n  }\n\n  var index = string.indexOf(';');\n  var type = index !== -1 ? string.substr(0, index) : string;\n  var key;\n  var match;\n  var obj = splitType(type);\n  var params = {};\n  var value;\n  paramRegExp.lastIndex = index;\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format');\n    }\n\n    index += match[0].length;\n    key = match[1].toLowerCase();\n    value = match[2];\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value.substr(1, value.length - 2).replace(qescRegExp, '$1');\n    }\n\n    params[key] = value;\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format');\n  }\n\n  obj.parameters = params;\n  return obj;\n}\n/**\r\n * Get content-type from req/res objects.\r\n *\r\n * @param {object}\r\n * @return {Object}\r\n * @api private\r\n */\n\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type');\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type'];\n  }\n}\n/**\r\n * Quote a string if necessary.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @api private\r\n */\n\n\nfunction qstring(val) {\n  var str = String(val); // no need to quote tokens\n\n  if (tokenRegExp.test(str)) {\n    return str;\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value');\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"';\n}\n/**\r\n * Simply \"type/subtype+siffx\" into parts.\r\n *\r\n * @param {string} string\r\n * @return {Object}\r\n * @api private\r\n */\n\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase());\n\n  if (!match) {\n    throw new TypeError('invalid media type');\n  }\n\n  var type = match[1];\n  var subtype = match[2];\n  var suffix; // suffix after last +\n\n  var index = subtype.lastIndexOf('+');\n\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1);\n    subtype = subtype.substr(0, index);\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  };\n  return obj;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "paramRegExp",
        "textRegExp",
        "tokenRegExp",
        "qescRegExp",
        "quoteRegExp",
        "subtypeNameRegExp",
        "typeNameRegExp",
        "typeRegExp",
        "exports",
        "format",
        "parse",
        "obj",
        "TypeError",
        "parameters",
        "subtype",
        "suffix",
        "type",
        "test",
        "string",
        "param",
        "params",
        "Object",
        "keys",
        "sort",
        "i",
        "length",
        "qstring",
        "getcontenttype",
        "index",
        "indexOf",
        "substr",
        "key",
        "match",
        "splitType",
        "value",
        "lastIndex",
        "exec",
        "toLowerCase",
        "replace",
        "getHeader",
        "headers",
        "val",
        "str",
        "String",
        "lastIndexOf"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\media-typer\\",
      "sourcesContent": [
        "/*!\r\n * media-typer\r\n * Copyright(c) 2014 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\r\n *\r\n * parameter     = token \"=\" ( token | quoted-string )\r\n * token         = 1*<any CHAR except CTLs or separators>\r\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\r\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\r\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\r\n *               | \"{\" | \"}\" | SP | HT\r\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\r\n * qdtext        = <any TEXT except <\">>\r\n * quoted-pair   = \"\\\" CHAR\r\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\r\n * TEXT          = <any OCTET except CTLs, but including LWS>\r\n * LWS           = [CRLF] 1*( SP | HT )\r\n * CRLF          = CR LF\r\n * CR            = <US-ASCII CR, carriage return (13)>\r\n * LF            = <US-ASCII LF, linefeed (10)>\r\n * SP            = <US-ASCII SP, space (32)>\r\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\r\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\r\n * OCTET         = <any 8-bit sequence of data>\r\n */\r\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\r\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\r\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\r\n\r\n/**\r\n * RegExp to match quoted-pair in RFC 2616\r\n *\r\n * quoted-pair = \"\\\" CHAR\r\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\r\n */\r\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\r\n\r\n/**\r\n * RegExp to match chars that must be quoted-pair in RFC 2616\r\n */\r\nvar quoteRegExp = /([\\\\\"])/g;\r\n\r\n/**\r\n * RegExp to match type in RFC 6838\r\n *\r\n * type-name = restricted-name\r\n * subtype-name = restricted-name\r\n * restricted-name = restricted-name-first *126restricted-name-chars\r\n * restricted-name-first  = ALPHA / DIGIT\r\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\r\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\r\n * restricted-name-chars =/ \".\" ; Characters before first dot always\r\n *                              ; specify a facet name\r\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\r\n *                              ; specify a structured syntax suffix\r\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\r\n * DIGIT =  %x30-39             ; 0-9\r\n */\r\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\r\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\r\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nexports.format = format\r\nexports.parse = parse\r\n\r\n/**\r\n * Format object to media type.\r\n *\r\n * @param {object} obj\r\n * @return {string}\r\n * @api public\r\n */\r\n\r\nfunction format(obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    throw new TypeError('argument obj is required')\r\n  }\r\n\r\n  var parameters = obj.parameters\r\n  var subtype = obj.subtype\r\n  var suffix = obj.suffix\r\n  var type = obj.type\r\n\r\n  if (!type || !typeNameRegExp.test(type)) {\r\n    throw new TypeError('invalid type')\r\n  }\r\n\r\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\r\n    throw new TypeError('invalid subtype')\r\n  }\r\n\r\n  // format as type/subtype\r\n  var string = type + '/' + subtype\r\n\r\n  // append +suffix\r\n  if (suffix) {\r\n    if (!typeNameRegExp.test(suffix)) {\r\n      throw new TypeError('invalid suffix')\r\n    }\r\n\r\n    string += '+' + suffix\r\n  }\r\n\r\n  // append parameters\r\n  if (parameters && typeof parameters === 'object') {\r\n    var param\r\n    var params = Object.keys(parameters).sort()\r\n\r\n    for (var i = 0; i < params.length; i++) {\r\n      param = params[i]\r\n\r\n      if (!tokenRegExp.test(param)) {\r\n        throw new TypeError('invalid parameter name')\r\n      }\r\n\r\n      string += '; ' + param + '=' + qstring(parameters[param])\r\n    }\r\n  }\r\n\r\n  return string\r\n}\r\n\r\n/**\r\n * Parse media type to object.\r\n *\r\n * @param {string|object} string\r\n * @return {Object}\r\n * @api public\r\n */\r\n\r\nfunction parse(string) {\r\n  if (!string) {\r\n    throw new TypeError('argument string is required')\r\n  }\r\n\r\n  // support req/res-like objects as argument\r\n  if (typeof string === 'object') {\r\n    string = getcontenttype(string)\r\n  }\r\n\r\n  if (typeof string !== 'string') {\r\n    throw new TypeError('argument string is required to be a string')\r\n  }\r\n\r\n  var index = string.indexOf(';')\r\n  var type = index !== -1\r\n    ? string.substr(0, index)\r\n    : string\r\n\r\n  var key\r\n  var match\r\n  var obj = splitType(type)\r\n  var params = {}\r\n  var value\r\n\r\n  paramRegExp.lastIndex = index\r\n\r\n  while (match = paramRegExp.exec(string)) {\r\n    if (match.index !== index) {\r\n      throw new TypeError('invalid parameter format')\r\n    }\r\n\r\n    index += match[0].length\r\n    key = match[1].toLowerCase()\r\n    value = match[2]\r\n\r\n    if (value[0] === '\"') {\r\n      // remove quotes and escapes\r\n      value = value\r\n        .substr(1, value.length - 2)\r\n        .replace(qescRegExp, '$1')\r\n    }\r\n\r\n    params[key] = value\r\n  }\r\n\r\n  if (index !== -1 && index !== string.length) {\r\n    throw new TypeError('invalid parameter format')\r\n  }\r\n\r\n  obj.parameters = params\r\n\r\n  return obj\r\n}\r\n\r\n/**\r\n * Get content-type from req/res objects.\r\n *\r\n * @param {object}\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction getcontenttype(obj) {\r\n  if (typeof obj.getHeader === 'function') {\r\n    // res-like\r\n    return obj.getHeader('content-type')\r\n  }\r\n\r\n  if (typeof obj.headers === 'object') {\r\n    // req-like\r\n    return obj.headers && obj.headers['content-type']\r\n  }\r\n}\r\n\r\n/**\r\n * Quote a string if necessary.\r\n *\r\n * @param {string} val\r\n * @return {string}\r\n * @api private\r\n */\r\n\r\nfunction qstring(val) {\r\n  var str = String(val)\r\n\r\n  // no need to quote tokens\r\n  if (tokenRegExp.test(str)) {\r\n    return str\r\n  }\r\n\r\n  if (str.length > 0 && !textRegExp.test(str)) {\r\n    throw new TypeError('invalid parameter value')\r\n  }\r\n\r\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\r\n}\r\n\r\n/**\r\n * Simply \"type/subtype+siffx\" into parts.\r\n *\r\n * @param {string} string\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction splitType(string) {\r\n  var match = typeRegExp.exec(string.toLowerCase())\r\n\r\n  if (!match) {\r\n    throw new TypeError('invalid media type')\r\n  }\r\n\r\n  var type = match[1]\r\n  var subtype = match[2]\r\n  var suffix\r\n\r\n  // suffix after last +\r\n  var index = subtype.lastIndexOf('+')\r\n  if (index !== -1) {\r\n    suffix = subtype.substr(index + 1)\r\n    subtype = subtype.substr(0, index)\r\n  }\r\n\r\n  var obj = {\r\n    type: type,\r\n    subtype: subtype,\r\n    suffix: suffix\r\n  }\r\n\r\n  return obj\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211477
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\express\\\\lib\\\\response.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\response.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\response.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\response.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
        "sourceFileName": "response.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar contentDisposition = require('content-disposition');\n\nvar deprecate = require('depd')('express');\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar http = require('http');\n\nvar isAbsolute = require('./utils').isAbsolute;\n\nvar onFinished = require('on-finished');\n\nvar path = require('path');\n\nvar statuses = require('statuses');\n\nvar merge = require('utils-merge');\n\nvar sign = require('cookie-signature').sign;\n\nvar normalizeType = require('./utils').normalizeType;\n\nvar normalizeTypes = require('./utils').normalizeTypes;\n\nvar setCharset = require('./utils').setCharset;\n\nvar cookie = require('cookie');\n\nvar send = require('send');\n\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\n\nvar vary = require('vary');\n/**\r\n * Response prototype.\r\n * @public\r\n */\n\n\nvar res = Object.create(http.ServerResponse.prototype);\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = res;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n/**\r\n * Set status `code`.\r\n *\r\n * @param {Number} code\r\n * @return {ServerResponse}\r\n * @public\r\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n/**\r\n * Set Link header field with the given `links`.\r\n *\r\n * Examples:\r\n *\r\n *    res.links({\r\n *      next: 'http://api.example.com/users?page=2',\r\n *      last: 'http://api.example.com/users?page=5'\r\n *    });\r\n *\r\n * @param {Object} links\r\n * @return {ServerResponse}\r\n * @public\r\n */\n\n\nres.links = function (links) {\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function (rel) {\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n/**\r\n * Send a response.\r\n *\r\n * Examples:\r\n *\r\n *     res.send(Buffer.from('wahoo'));\r\n *     res.send({ some: 'json' });\r\n *     res.send('<p>some html</p>');\r\n *\r\n * @param {string|number|boolean|object|Buffer} body\r\n * @public\r\n */\n\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type; // settings\n\n  var app = this.app; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  } // disambiguate res.send(status) and res.send(status, num)\n\n\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk];\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n\n      break;\n\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n\n      break;\n  } // write strings in utf-8\n\n\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type'); // reflect this in content-type\n\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  } // determine if ETag should be generated\n\n\n  var etagFn = app.get('etag fn');\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'; // populate Content-Length\n\n  var len;\n\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length;\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding);\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding);\n      encoding = undefined;\n      len = chunk.length;\n    }\n\n    this.set('Content-Length', len);\n  } // populate ETag\n\n\n  var etag;\n\n  if (generateETag && len !== undefined) {\n    if (etag = etagFn(chunk, encoding)) {\n      this.set('ETag', etag);\n    }\n  } // freshness\n\n\n  if (req.fresh) this.statusCode = 304; // strip irrelevant headers\n\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n/**\r\n * Send JSON response.\r\n *\r\n * Examples:\r\n *\r\n *     res.json(null);\r\n *     res.json({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\n\n\nres.json = function json(obj) {\n  var val = obj; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  } // settings\n\n\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape); // content-type\n\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n/**\r\n * Send JSON response with JSONP callback support.\r\n *\r\n * Examples:\r\n *\r\n *     res.jsonp(null);\r\n *     res.jsonp({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\n\n\nres.jsonp = function jsonp(obj) {\n  var val = obj; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  } // settings\n\n\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape);\n  var callback = this.req.query[app.get('jsonp callback name')]; // content-type\n\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  } // fixup callback\n\n\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  } // jsonp\n\n\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript'); // restrict callback charset\n\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, ''); // replace chars not allowed in JavaScript that are in JSON\n\n    body = body.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029'); // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n/**\r\n * Send given HTTP status code.\r\n *\r\n * Sets the response status to `statusCode` and the body of the\r\n * response to the standard description from node's http.STATUS_CODES\r\n * or the statusCode number if no description.\r\n *\r\n * Examples:\r\n *\r\n *     res.sendStatus(200);\r\n *\r\n * @param {number} statusCode\r\n * @public\r\n */\n\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode);\n  this.statusCode = statusCode;\n  this.type('txt');\n  return this.send(body);\n};\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.sentHeader`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendFile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendFile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendFile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\n\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile');\n  } // support function as second arg\n\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  } // create file stream\n\n\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts); // transfer\n\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next(); // next() all but write errors\n\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.sentHeader`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendfile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendfile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendfile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\n\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {}; // support function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // create file stream\n\n\n  var file = send(req, path, opts); // transfer\n\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next(); // next() all but write errors\n\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile, 'res.sendfile: Use res.sendFile instead');\n/**\r\n * Transfer the file at the given `path` as an attachment.\r\n *\r\n * Optionally providing an alternate attachment `filename`,\r\n * and optional callback `callback(err)`. The callback is invoked\r\n * when the data transfer is complete, or when an error has\r\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\r\n *\r\n * Optionally providing an `options` object to use with `res.sendFile()`.\r\n * This function will set the `Content-Disposition` header, overriding\r\n * any `Content-Disposition` header passed as header options in order\r\n * to set the attachment and filename.\r\n *\r\n * This method uses `res.sendFile()`.\r\n *\r\n * @public\r\n */\n\nres.download = function download(path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null; // support function as second or third arg\n\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null;\n  } else if (typeof options === 'function') {\n    done = options;\n    opts = null;\n  } // set Content-Disposition when file is sent\n\n\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  }; // merge user-provided headers\n\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key];\n      }\n    }\n  } // merge user-provided options\n\n\n  opts = Object.create(opts);\n  opts.headers = headers; // Resolve the full path for sendFile\n\n  var fullPath = resolve(path); // send file\n\n  return this.sendFile(fullPath, opts, done);\n};\n/**\r\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\r\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\r\n *\r\n * Examples:\r\n *\r\n *     res.type('.html');\r\n *     res.type('html');\r\n *     res.type('json');\r\n *     res.type('application/json');\r\n *     res.type('png');\r\n *\r\n * @param {String} type\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.contentType = res.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1 ? mime.lookup(type) : type;\n  return this.set('Content-Type', ct);\n};\n/**\r\n * Respond to the Acceptable formats using an `obj`\r\n * of mime-type callbacks.\r\n *\r\n * This method uses `req.accepted`, an array of\r\n * acceptable types ordered by their quality values.\r\n * When \"Accept\" is not present the _first_ callback\r\n * is invoked, otherwise the first match is used. When\r\n * no match is performed the server responds with\r\n * 406 \"Not Acceptable\".\r\n *\r\n * Content-Type is set for you, however if you choose\r\n * you may alter this within the callback using `res.type()`\r\n * or `res.set('Content-Type', ...)`.\r\n *\r\n *    res.format({\r\n *      'text/plain': function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      'text/html': function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      'appliation/json': function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * In addition to canonicalized MIME types you may\r\n * also use extnames mapped to these types:\r\n *\r\n *    res.format({\r\n *      text: function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      html: function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      json: function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * By default Express passes an `Error`\r\n * with a `.status` of 406 to `next(err)`\r\n * if a match is not made. If you provide\r\n * a `.default` callback it will be invoked\r\n * instead.\r\n *\r\n * @param {Object} obj\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.format = function (obj) {\n  var req = this.req;\n  var next = req.next;\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n  var key = keys.length > 0 ? req.accepts(keys) : false;\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function (o) {\n      return o.value;\n    });\n    next(err);\n  }\n\n  return this;\n};\n/**\r\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\r\n *\r\n * @param {String} filename\r\n * @return {ServerResponse}\r\n * @public\r\n */\n\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n  return this;\n};\n/**\r\n * Append additional header `field` with value `val`.\r\n *\r\n * Example:\r\n *\r\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\r\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\r\n *    res.append('Warning', '199 Miscellaneous warning');\r\n *\r\n * @param {String} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val) : Array.isArray(val) ? [prev].concat(val) : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n/**\r\n * Set header `field` to `val`, or pass\r\n * an object of header fields.\r\n *\r\n * Examples:\r\n *\r\n *    res.set('Foo', ['bar', 'baz']);\r\n *    res.set('Accept', 'application/json');\r\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\r\n *\r\n * Aliased as `res.header()`.\r\n *\r\n * @param {String|Object} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.set = res.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val) ? val.map(String) : String(val); // add charset to content-type\n\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Get value for header `field`.\r\n *\r\n * @param {String} field\r\n * @return {String}\r\n * @public\r\n */\n\n\nres.get = function (field) {\n  return this.getHeader(field);\n};\n/**\r\n * Clear cookie `name`.\r\n *\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({\n    expires: new Date(1),\n    path: '/'\n  }, options);\n  return this.cookie(name, '', opts);\n};\n/**\r\n * Set cookie `name` to `value`, with the given `options`.\r\n *\r\n * Options:\r\n *\r\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\r\n *    - `signed`   sign the cookie\r\n *    - `path`     defaults to \"/\"\r\n *\r\n * Examples:\r\n *\r\n *    // \"Remember Me\" for 15 minutes\r\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\r\n *\r\n *    // same as above\r\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\r\n *\r\n * @param {String} name\r\n * @param {String|Object} value\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n  return this;\n};\n/**\r\n * Set the location header to `url`.\r\n *\r\n * The given `url` can also be \"back\", which redirects\r\n * to the _Referrer_ or _Referer_ headers or \"/\".\r\n *\r\n * Examples:\r\n *\r\n *    res.location('/foo/bar').;\r\n *    res.location('http://example.com');\r\n *    res.location('../login');\r\n *\r\n * @param {String} url\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.location = function location(url) {\n  var loc = url; // \"back\" is an alias for the referrer\n\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  } // set location\n\n\n  return this.set('Location', encodeUrl(loc));\n};\n/**\r\n * Redirect to the given `url` with optional response `status`\r\n * defaulting to 302.\r\n *\r\n * The resulting `url` is determined by `res.location()`, so\r\n * it will play nicely with mounted apps, relative paths,\r\n * `\"back\"` etc.\r\n *\r\n * Examples:\r\n *\r\n *    res.redirect('/foo/bar');\r\n *    res.redirect('http://example.com');\r\n *    res.redirect(301, 'http://example.com');\r\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\r\n *\r\n * @public\r\n */\n\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302; // allow status / url\n\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  } // Set location header\n\n\n  address = this.location(address).get('Location'); // Support text/{plain,html} by default\n\n  this.format({\n    text: function () {\n      body = statuses[status] + '. Redirecting to ' + address;\n    },\n    html: function () {\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>';\n    },\n    default: function () {\n      body = '';\n    }\n  }); // Respond\n\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n/**\r\n * Add `field` to Vary. If already present in the Vary set, then\r\n * this call is simply ignored.\r\n *\r\n * @param {Array|String} field\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.vary = function (field) {\n  // checks for back-compat\n  if (!field || Array.isArray(field) && !field.length) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n  return this;\n};\n/**\r\n * Render `view` with the given `options` and optional callback `fn`.\r\n * When a callback function is given a response will _not_ be made\r\n * automatically, otherwise a response of _200_ and _text/html_ is given.\r\n *\r\n * Options:\r\n *\r\n *  - `cache`     boolean hinting to the engine it should cache\r\n *  - `filename`  filename of the view being rendered\r\n *\r\n * @public\r\n */\n\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this; // support callback function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // merge res.locals\n\n\n  opts._locals = self.locals; // default callback to respond\n\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  }; // render\n\n\n  app.render(view, opts, done);\n}; // pipe the send file stream\n\n\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming; // request aborted\n\n  function onaborted() {\n    if (done) return;\n    done = true;\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  } // directory\n\n\n  function ondirectory() {\n    if (done) return;\n    done = true;\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  } // errors\n\n\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  } // ended\n\n\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  } // file\n\n\n  function onfile() {\n    streaming = false;\n  } // finished\n\n\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  } // streaming\n\n\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  } // pipe\n\n\n  file.pipe(res);\n}\n/**\r\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\r\n * ability to escape characters that can trigger HTML sniffing.\r\n *\r\n * @param {*} value\r\n * @param {function} replaces\r\n * @param {number} spaces\r\n * @param {boolean} escape\r\n * @returns {string}\r\n * @private\r\n */\n\n\nfunction stringify(value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces ? JSON.stringify(value, replacer, spaces) : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c';\n\n        case 0x3e:\n          return '\\\\u003e';\n\n        case 0x26:\n          return '\\\\u0026';\n\n        /* istanbul ignore next: unreachable default */\n\n        default:\n          return c;\n      }\n    });\n  }\n\n  return json;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "response.js"
      ],
      "names": [
        "Buffer",
        "require",
        "contentDisposition",
        "deprecate",
        "encodeUrl",
        "escapeHtml",
        "http",
        "isAbsolute",
        "onFinished",
        "path",
        "statuses",
        "merge",
        "sign",
        "normalizeType",
        "normalizeTypes",
        "setCharset",
        "cookie",
        "send",
        "extname",
        "mime",
        "resolve",
        "vary",
        "res",
        "Object",
        "create",
        "ServerResponse",
        "prototype",
        "module",
        "exports",
        "charsetRegExp",
        "status",
        "code",
        "statusCode",
        "links",
        "link",
        "get",
        "set",
        "keys",
        "map",
        "rel",
        "join",
        "body",
        "chunk",
        "encoding",
        "req",
        "type",
        "app",
        "arguments",
        "length",
        "isBuffer",
        "json",
        "etagFn",
        "generateETag",
        "len",
        "undefined",
        "byteLength",
        "from",
        "etag",
        "fresh",
        "removeHeader",
        "method",
        "end",
        "obj",
        "val",
        "escape",
        "replacer",
        "spaces",
        "stringify",
        "jsonp",
        "callback",
        "query",
        "Array",
        "isArray",
        "replace",
        "sendStatus",
        "String",
        "sendFile",
        "options",
        "done",
        "next",
        "opts",
        "TypeError",
        "root",
        "pathname",
        "encodeURI",
        "file",
        "sendfile",
        "err",
        "syscall",
        "function",
        "download",
        "filename",
        "name",
        "headers",
        "i",
        "key",
        "toLowerCase",
        "fullPath",
        "contentType",
        "ct",
        "indexOf",
        "lookup",
        "format",
        "fn",
        "default",
        "accepts",
        "value",
        "Error",
        "types",
        "o",
        "attachment",
        "append",
        "field",
        "prev",
        "concat",
        "header",
        "test",
        "charset",
        "charsets",
        "split",
        "setHeader",
        "getHeader",
        "clearCookie",
        "expires",
        "Date",
        "secret",
        "signed",
        "JSON",
        "now",
        "maxAge",
        "serialize",
        "location",
        "url",
        "loc",
        "redirect",
        "address",
        "text",
        "html",
        "u",
        "render",
        "view",
        "self",
        "_locals",
        "locals",
        "str",
        "streaming",
        "onaborted",
        "ondirectory",
        "onerror",
        "onend",
        "onfile",
        "onfinish",
        "setImmediate",
        "onstream",
        "on",
        "k",
        "pipe",
        "c",
        "charCodeAt"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\express\\lib\\",
      "sourcesContent": [
        "/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar contentDisposition = require('content-disposition');\r\nvar deprecate = require('depd')('express');\r\nvar encodeUrl = require('encodeurl');\r\nvar escapeHtml = require('escape-html');\r\nvar http = require('http');\r\nvar isAbsolute = require('./utils').isAbsolute;\r\nvar onFinished = require('on-finished');\r\nvar path = require('path');\r\nvar statuses = require('statuses')\r\nvar merge = require('utils-merge');\r\nvar sign = require('cookie-signature').sign;\r\nvar normalizeType = require('./utils').normalizeType;\r\nvar normalizeTypes = require('./utils').normalizeTypes;\r\nvar setCharset = require('./utils').setCharset;\r\nvar cookie = require('cookie');\r\nvar send = require('send');\r\nvar extname = path.extname;\r\nvar mime = send.mime;\r\nvar resolve = path.resolve;\r\nvar vary = require('vary');\r\n\r\n/**\r\n * Response prototype.\r\n * @public\r\n */\r\n\r\nvar res = Object.create(http.ServerResponse.prototype)\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = res\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar charsetRegExp = /;\\s*charset\\s*=/;\r\n\r\n/**\r\n * Set status `code`.\r\n *\r\n * @param {Number} code\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.status = function status(code) {\r\n  this.statusCode = code;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set Link header field with the given `links`.\r\n *\r\n * Examples:\r\n *\r\n *    res.links({\r\n *      next: 'http://api.example.com/users?page=2',\r\n *      last: 'http://api.example.com/users?page=5'\r\n *    });\r\n *\r\n * @param {Object} links\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.links = function(links){\r\n  var link = this.get('Link') || '';\r\n  if (link) link += ', ';\r\n  return this.set('Link', link + Object.keys(links).map(function(rel){\r\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\r\n  }).join(', '));\r\n};\r\n\r\n/**\r\n * Send a response.\r\n *\r\n * Examples:\r\n *\r\n *     res.send(Buffer.from('wahoo'));\r\n *     res.send({ some: 'json' });\r\n *     res.send('<p>some html</p>');\r\n *\r\n * @param {string|number|boolean|object|Buffer} body\r\n * @public\r\n */\r\n\r\nres.send = function send(body) {\r\n  var chunk = body;\r\n  var encoding;\r\n  var req = this.req;\r\n  var type;\r\n\r\n  // settings\r\n  var app = this.app;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.send(body, status) backwards compat\r\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\r\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\r\n      this.statusCode = arguments[0];\r\n      chunk = arguments[1];\r\n    }\r\n  }\r\n\r\n  // disambiguate res.send(status) and res.send(status, num)\r\n  if (typeof chunk === 'number' && arguments.length === 1) {\r\n    // res.send(status) will set status message as text string\r\n    if (!this.get('Content-Type')) {\r\n      this.type('txt');\r\n    }\r\n\r\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\r\n    this.statusCode = chunk;\r\n    chunk = statuses[chunk]\r\n  }\r\n\r\n  switch (typeof chunk) {\r\n    // string defaulting to html\r\n    case 'string':\r\n      if (!this.get('Content-Type')) {\r\n        this.type('html');\r\n      }\r\n      break;\r\n    case 'boolean':\r\n    case 'number':\r\n    case 'object':\r\n      if (chunk === null) {\r\n        chunk = '';\r\n      } else if (Buffer.isBuffer(chunk)) {\r\n        if (!this.get('Content-Type')) {\r\n          this.type('bin');\r\n        }\r\n      } else {\r\n        return this.json(chunk);\r\n      }\r\n      break;\r\n  }\r\n\r\n  // write strings in utf-8\r\n  if (typeof chunk === 'string') {\r\n    encoding = 'utf8';\r\n    type = this.get('Content-Type');\r\n\r\n    // reflect this in content-type\r\n    if (typeof type === 'string') {\r\n      this.set('Content-Type', setCharset(type, 'utf-8'));\r\n    }\r\n  }\r\n\r\n  // determine if ETag should be generated\r\n  var etagFn = app.get('etag fn')\r\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\r\n\r\n  // populate Content-Length\r\n  var len\r\n  if (chunk !== undefined) {\r\n    if (Buffer.isBuffer(chunk)) {\r\n      // get length of Buffer\r\n      len = chunk.length\r\n    } else if (!generateETag && chunk.length < 1000) {\r\n      // just calculate length when no ETag + small chunk\r\n      len = Buffer.byteLength(chunk, encoding)\r\n    } else {\r\n      // convert chunk to Buffer and calculate\r\n      chunk = Buffer.from(chunk, encoding)\r\n      encoding = undefined;\r\n      len = chunk.length\r\n    }\r\n\r\n    this.set('Content-Length', len);\r\n  }\r\n\r\n  // populate ETag\r\n  var etag;\r\n  if (generateETag && len !== undefined) {\r\n    if ((etag = etagFn(chunk, encoding))) {\r\n      this.set('ETag', etag);\r\n    }\r\n  }\r\n\r\n  // freshness\r\n  if (req.fresh) this.statusCode = 304;\r\n\r\n  // strip irrelevant headers\r\n  if (204 === this.statusCode || 304 === this.statusCode) {\r\n    this.removeHeader('Content-Type');\r\n    this.removeHeader('Content-Length');\r\n    this.removeHeader('Transfer-Encoding');\r\n    chunk = '';\r\n  }\r\n\r\n  if (req.method === 'HEAD') {\r\n    // skip body for HEAD\r\n    this.end();\r\n  } else {\r\n    // respond\r\n    this.end(chunk, encoding);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Send JSON response.\r\n *\r\n * Examples:\r\n *\r\n *     res.json(null);\r\n *     res.json({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\r\n\r\nres.json = function json(obj) {\r\n  var val = obj;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.json(body, status) backwards compat\r\n    if (typeof arguments[1] === 'number') {\r\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[0];\r\n      val = arguments[1];\r\n    }\r\n  }\r\n\r\n  // settings\r\n  var app = this.app;\r\n  var escape = app.get('json escape')\r\n  var replacer = app.get('json replacer');\r\n  var spaces = app.get('json spaces');\r\n  var body = stringify(val, replacer, spaces, escape)\r\n\r\n  // content-type\r\n  if (!this.get('Content-Type')) {\r\n    this.set('Content-Type', 'application/json');\r\n  }\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Send JSON response with JSONP callback support.\r\n *\r\n * Examples:\r\n *\r\n *     res.jsonp(null);\r\n *     res.jsonp({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\r\n\r\nres.jsonp = function jsonp(obj) {\r\n  var val = obj;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.json(body, status) backwards compat\r\n    if (typeof arguments[1] === 'number') {\r\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\r\n      this.statusCode = arguments[0];\r\n      val = arguments[1];\r\n    }\r\n  }\r\n\r\n  // settings\r\n  var app = this.app;\r\n  var escape = app.get('json escape')\r\n  var replacer = app.get('json replacer');\r\n  var spaces = app.get('json spaces');\r\n  var body = stringify(val, replacer, spaces, escape)\r\n  var callback = this.req.query[app.get('jsonp callback name')];\r\n\r\n  // content-type\r\n  if (!this.get('Content-Type')) {\r\n    this.set('X-Content-Type-Options', 'nosniff');\r\n    this.set('Content-Type', 'application/json');\r\n  }\r\n\r\n  // fixup callback\r\n  if (Array.isArray(callback)) {\r\n    callback = callback[0];\r\n  }\r\n\r\n  // jsonp\r\n  if (typeof callback === 'string' && callback.length !== 0) {\r\n    this.set('X-Content-Type-Options', 'nosniff');\r\n    this.set('Content-Type', 'text/javascript');\r\n\r\n    // restrict callback charset\r\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\r\n\r\n    // replace chars not allowed in JavaScript that are in JSON\r\n    body = body\r\n      .replace(/\\u2028/g, '\\\\u2028')\r\n      .replace(/\\u2029/g, '\\\\u2029');\r\n\r\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\r\n    // the typeof check is just to reduce client error noise\r\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\r\n  }\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Send given HTTP status code.\r\n *\r\n * Sets the response status to `statusCode` and the body of the\r\n * response to the standard description from node's http.STATUS_CODES\r\n * or the statusCode number if no description.\r\n *\r\n * Examples:\r\n *\r\n *     res.sendStatus(200);\r\n *\r\n * @param {number} statusCode\r\n * @public\r\n */\r\n\r\nres.sendStatus = function sendStatus(statusCode) {\r\n  var body = statuses[statusCode] || String(statusCode)\r\n\r\n  this.statusCode = statusCode;\r\n  this.type('txt');\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.sentHeader`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendFile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendFile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendFile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\r\n\r\nres.sendFile = function sendFile(path, options, callback) {\r\n  var done = callback;\r\n  var req = this.req;\r\n  var res = this;\r\n  var next = req.next;\r\n  var opts = options || {};\r\n\r\n  if (!path) {\r\n    throw new TypeError('path argument is required to res.sendFile');\r\n  }\r\n\r\n  if (typeof path !== 'string') {\r\n    throw new TypeError('path must be a string to res.sendFile')\r\n  }\r\n\r\n  // support function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  if (!opts.root && !isAbsolute(path)) {\r\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\r\n  }\r\n\r\n  // create file stream\r\n  var pathname = encodeURI(path);\r\n  var file = send(req, pathname, opts);\r\n\r\n  // transfer\r\n  sendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.sentHeader`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendfile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendfile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendfile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\r\n\r\nres.sendfile = function (path, options, callback) {\r\n  var done = callback;\r\n  var req = this.req;\r\n  var res = this;\r\n  var next = req.next;\r\n  var opts = options || {};\r\n\r\n  // support function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // create file stream\r\n  var file = send(req, path, opts);\r\n\r\n  // transfer\r\n  sendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n  });\r\n};\r\n\r\nres.sendfile = deprecate.function(res.sendfile,\r\n  'res.sendfile: Use res.sendFile instead');\r\n\r\n/**\r\n * Transfer the file at the given `path` as an attachment.\r\n *\r\n * Optionally providing an alternate attachment `filename`,\r\n * and optional callback `callback(err)`. The callback is invoked\r\n * when the data transfer is complete, or when an error has\r\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\r\n *\r\n * Optionally providing an `options` object to use with `res.sendFile()`.\r\n * This function will set the `Content-Disposition` header, overriding\r\n * any `Content-Disposition` header passed as header options in order\r\n * to set the attachment and filename.\r\n *\r\n * This method uses `res.sendFile()`.\r\n *\r\n * @public\r\n */\r\n\r\nres.download = function download (path, filename, options, callback) {\r\n  var done = callback;\r\n  var name = filename;\r\n  var opts = options || null\r\n\r\n  // support function as second or third arg\r\n  if (typeof filename === 'function') {\r\n    done = filename;\r\n    name = null;\r\n    opts = null\r\n  } else if (typeof options === 'function') {\r\n    done = options\r\n    opts = null\r\n  }\r\n\r\n  // set Content-Disposition when file is sent\r\n  var headers = {\r\n    'Content-Disposition': contentDisposition(name || path)\r\n  };\r\n\r\n  // merge user-provided headers\r\n  if (opts && opts.headers) {\r\n    var keys = Object.keys(opts.headers)\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i]\r\n      if (key.toLowerCase() !== 'content-disposition') {\r\n        headers[key] = opts.headers[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  // merge user-provided options\r\n  opts = Object.create(opts)\r\n  opts.headers = headers\r\n\r\n  // Resolve the full path for sendFile\r\n  var fullPath = resolve(path);\r\n\r\n  // send file\r\n  return this.sendFile(fullPath, opts, done)\r\n};\r\n\r\n/**\r\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\r\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\r\n *\r\n * Examples:\r\n *\r\n *     res.type('.html');\r\n *     res.type('html');\r\n *     res.type('json');\r\n *     res.type('application/json');\r\n *     res.type('png');\r\n *\r\n * @param {String} type\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.contentType =\r\nres.type = function contentType(type) {\r\n  var ct = type.indexOf('/') === -1\r\n    ? mime.lookup(type)\r\n    : type;\r\n\r\n  return this.set('Content-Type', ct);\r\n};\r\n\r\n/**\r\n * Respond to the Acceptable formats using an `obj`\r\n * of mime-type callbacks.\r\n *\r\n * This method uses `req.accepted`, an array of\r\n * acceptable types ordered by their quality values.\r\n * When \"Accept\" is not present the _first_ callback\r\n * is invoked, otherwise the first match is used. When\r\n * no match is performed the server responds with\r\n * 406 \"Not Acceptable\".\r\n *\r\n * Content-Type is set for you, however if you choose\r\n * you may alter this within the callback using `res.type()`\r\n * or `res.set('Content-Type', ...)`.\r\n *\r\n *    res.format({\r\n *      'text/plain': function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      'text/html': function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      'appliation/json': function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * In addition to canonicalized MIME types you may\r\n * also use extnames mapped to these types:\r\n *\r\n *    res.format({\r\n *      text: function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      html: function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      json: function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * By default Express passes an `Error`\r\n * with a `.status` of 406 to `next(err)`\r\n * if a match is not made. If you provide\r\n * a `.default` callback it will be invoked\r\n * instead.\r\n *\r\n * @param {Object} obj\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.format = function(obj){\r\n  var req = this.req;\r\n  var next = req.next;\r\n\r\n  var fn = obj.default;\r\n  if (fn) delete obj.default;\r\n  var keys = Object.keys(obj);\r\n\r\n  var key = keys.length > 0\r\n    ? req.accepts(keys)\r\n    : false;\r\n\r\n  this.vary(\"Accept\");\r\n\r\n  if (key) {\r\n    this.set('Content-Type', normalizeType(key).value);\r\n    obj[key](req, this, next);\r\n  } else if (fn) {\r\n    fn();\r\n  } else {\r\n    var err = new Error('Not Acceptable');\r\n    err.status = err.statusCode = 406;\r\n    err.types = normalizeTypes(keys).map(function(o){ return o.value });\r\n    next(err);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\r\n *\r\n * @param {String} filename\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.attachment = function attachment(filename) {\r\n  if (filename) {\r\n    this.type(extname(filename));\r\n  }\r\n\r\n  this.set('Content-Disposition', contentDisposition(filename));\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Append additional header `field` with value `val`.\r\n *\r\n * Example:\r\n *\r\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\r\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\r\n *    res.append('Warning', '199 Miscellaneous warning');\r\n *\r\n * @param {String} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.append = function append(field, val) {\r\n  var prev = this.get(field);\r\n  var value = val;\r\n\r\n  if (prev) {\r\n    // concat the new and prev vals\r\n    value = Array.isArray(prev) ? prev.concat(val)\r\n      : Array.isArray(val) ? [prev].concat(val)\r\n      : [prev, val];\r\n  }\r\n\r\n  return this.set(field, value);\r\n};\r\n\r\n/**\r\n * Set header `field` to `val`, or pass\r\n * an object of header fields.\r\n *\r\n * Examples:\r\n *\r\n *    res.set('Foo', ['bar', 'baz']);\r\n *    res.set('Accept', 'application/json');\r\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\r\n *\r\n * Aliased as `res.header()`.\r\n *\r\n * @param {String|Object} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.set =\r\nres.header = function header(field, val) {\r\n  if (arguments.length === 2) {\r\n    var value = Array.isArray(val)\r\n      ? val.map(String)\r\n      : String(val);\r\n\r\n    // add charset to content-type\r\n    if (field.toLowerCase() === 'content-type') {\r\n      if (Array.isArray(value)) {\r\n        throw new TypeError('Content-Type cannot be set to an Array');\r\n      }\r\n      if (!charsetRegExp.test(value)) {\r\n        var charset = mime.charsets.lookup(value.split(';')[0]);\r\n        if (charset) value += '; charset=' + charset.toLowerCase();\r\n      }\r\n    }\r\n\r\n    this.setHeader(field, value);\r\n  } else {\r\n    for (var key in field) {\r\n      this.set(key, field[key]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Get value for header `field`.\r\n *\r\n * @param {String} field\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nres.get = function(field){\r\n  return this.getHeader(field);\r\n};\r\n\r\n/**\r\n * Clear cookie `name`.\r\n *\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.clearCookie = function clearCookie(name, options) {\r\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\r\n\r\n  return this.cookie(name, '', opts);\r\n};\r\n\r\n/**\r\n * Set cookie `name` to `value`, with the given `options`.\r\n *\r\n * Options:\r\n *\r\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\r\n *    - `signed`   sign the cookie\r\n *    - `path`     defaults to \"/\"\r\n *\r\n * Examples:\r\n *\r\n *    // \"Remember Me\" for 15 minutes\r\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\r\n *\r\n *    // same as above\r\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\r\n *\r\n * @param {String} name\r\n * @param {String|Object} value\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.cookie = function (name, value, options) {\r\n  var opts = merge({}, options);\r\n  var secret = this.req.secret;\r\n  var signed = opts.signed;\r\n\r\n  if (signed && !secret) {\r\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\r\n  }\r\n\r\n  var val = typeof value === 'object'\r\n    ? 'j:' + JSON.stringify(value)\r\n    : String(value);\r\n\r\n  if (signed) {\r\n    val = 's:' + sign(val, secret);\r\n  }\r\n\r\n  if ('maxAge' in opts) {\r\n    opts.expires = new Date(Date.now() + opts.maxAge);\r\n    opts.maxAge /= 1000;\r\n  }\r\n\r\n  if (opts.path == null) {\r\n    opts.path = '/';\r\n  }\r\n\r\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the location header to `url`.\r\n *\r\n * The given `url` can also be \"back\", which redirects\r\n * to the _Referrer_ or _Referer_ headers or \"/\".\r\n *\r\n * Examples:\r\n *\r\n *    res.location('/foo/bar').;\r\n *    res.location('http://example.com');\r\n *    res.location('../login');\r\n *\r\n * @param {String} url\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.location = function location(url) {\r\n  var loc = url;\r\n\r\n  // \"back\" is an alias for the referrer\r\n  if (url === 'back') {\r\n    loc = this.req.get('Referrer') || '/';\r\n  }\r\n\r\n  // set location\r\n  return this.set('Location', encodeUrl(loc));\r\n};\r\n\r\n/**\r\n * Redirect to the given `url` with optional response `status`\r\n * defaulting to 302.\r\n *\r\n * The resulting `url` is determined by `res.location()`, so\r\n * it will play nicely with mounted apps, relative paths,\r\n * `\"back\"` etc.\r\n *\r\n * Examples:\r\n *\r\n *    res.redirect('/foo/bar');\r\n *    res.redirect('http://example.com');\r\n *    res.redirect(301, 'http://example.com');\r\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\r\n *\r\n * @public\r\n */\r\n\r\nres.redirect = function redirect(url) {\r\n  var address = url;\r\n  var body;\r\n  var status = 302;\r\n\r\n  // allow status / url\r\n  if (arguments.length === 2) {\r\n    if (typeof arguments[0] === 'number') {\r\n      status = arguments[0];\r\n      address = arguments[1];\r\n    } else {\r\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\r\n      status = arguments[1];\r\n    }\r\n  }\r\n\r\n  // Set location header\r\n  address = this.location(address).get('Location');\r\n\r\n  // Support text/{plain,html} by default\r\n  this.format({\r\n    text: function(){\r\n      body = statuses[status] + '. Redirecting to ' + address\r\n    },\r\n\r\n    html: function(){\r\n      var u = escapeHtml(address);\r\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\r\n    },\r\n\r\n    default: function(){\r\n      body = '';\r\n    }\r\n  });\r\n\r\n  // Respond\r\n  this.statusCode = status;\r\n  this.set('Content-Length', Buffer.byteLength(body));\r\n\r\n  if (this.req.method === 'HEAD') {\r\n    this.end();\r\n  } else {\r\n    this.end(body);\r\n  }\r\n};\r\n\r\n/**\r\n * Add `field` to Vary. If already present in the Vary set, then\r\n * this call is simply ignored.\r\n *\r\n * @param {Array|String} field\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.vary = function(field){\r\n  // checks for back-compat\r\n  if (!field || (Array.isArray(field) && !field.length)) {\r\n    deprecate('res.vary(): Provide a field name');\r\n    return this;\r\n  }\r\n\r\n  vary(this, field);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Render `view` with the given `options` and optional callback `fn`.\r\n * When a callback function is given a response will _not_ be made\r\n * automatically, otherwise a response of _200_ and _text/html_ is given.\r\n *\r\n * Options:\r\n *\r\n *  - `cache`     boolean hinting to the engine it should cache\r\n *  - `filename`  filename of the view being rendered\r\n *\r\n * @public\r\n */\r\n\r\nres.render = function render(view, options, callback) {\r\n  var app = this.req.app;\r\n  var done = callback;\r\n  var opts = options || {};\r\n  var req = this.req;\r\n  var self = this;\r\n\r\n  // support callback function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // merge res.locals\r\n  opts._locals = self.locals;\r\n\r\n  // default callback to respond\r\n  done = done || function (err, str) {\r\n    if (err) return req.next(err);\r\n    self.send(str);\r\n  };\r\n\r\n  // render\r\n  app.render(view, opts, done);\r\n};\r\n\r\n// pipe the send file stream\r\nfunction sendfile(res, file, options, callback) {\r\n  var done = false;\r\n  var streaming;\r\n\r\n  // request aborted\r\n  function onaborted() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('Request aborted');\r\n    err.code = 'ECONNABORTED';\r\n    callback(err);\r\n  }\r\n\r\n  // directory\r\n  function ondirectory() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('EISDIR, read');\r\n    err.code = 'EISDIR';\r\n    callback(err);\r\n  }\r\n\r\n  // errors\r\n  function onerror(err) {\r\n    if (done) return;\r\n    done = true;\r\n    callback(err);\r\n  }\r\n\r\n  // ended\r\n  function onend() {\r\n    if (done) return;\r\n    done = true;\r\n    callback();\r\n  }\r\n\r\n  // file\r\n  function onfile() {\r\n    streaming = false;\r\n  }\r\n\r\n  // finished\r\n  function onfinish(err) {\r\n    if (err && err.code === 'ECONNRESET') return onaborted();\r\n    if (err) return onerror(err);\r\n    if (done) return;\r\n\r\n    setImmediate(function () {\r\n      if (streaming !== false && !done) {\r\n        onaborted();\r\n        return;\r\n      }\r\n\r\n      if (done) return;\r\n      done = true;\r\n      callback();\r\n    });\r\n  }\r\n\r\n  // streaming\r\n  function onstream() {\r\n    streaming = true;\r\n  }\r\n\r\n  file.on('directory', ondirectory);\r\n  file.on('end', onend);\r\n  file.on('error', onerror);\r\n  file.on('file', onfile);\r\n  file.on('stream', onstream);\r\n  onFinished(res, onfinish);\r\n\r\n  if (options.headers) {\r\n    // set headers on successful transfer\r\n    file.on('headers', function headers(res) {\r\n      var obj = options.headers;\r\n      var keys = Object.keys(obj);\r\n\r\n      for (var i = 0; i < keys.length; i++) {\r\n        var k = keys[i];\r\n        res.setHeader(k, obj[k]);\r\n      }\r\n    });\r\n  }\r\n\r\n  // pipe\r\n  file.pipe(res);\r\n}\r\n\r\n/**\r\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\r\n * ability to escape characters that can trigger HTML sniffing.\r\n *\r\n * @param {*} value\r\n * @param {function} replaces\r\n * @param {number} spaces\r\n * @param {boolean} escape\r\n * @returns {string}\r\n * @private\r\n */\r\n\r\nfunction stringify (value, replacer, spaces, escape) {\r\n  // v8 checks arguments.length for optimizing simple call\r\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\r\n  var json = replacer || spaces\r\n    ? JSON.stringify(value, replacer, spaces)\r\n    : JSON.stringify(value);\r\n\r\n  if (escape) {\r\n    json = json.replace(/[<>&]/g, function (c) {\r\n      switch (c.charCodeAt(0)) {\r\n        case 0x3c:\r\n          return '\\\\u003c'\r\n        case 0x3e:\r\n          return '\\\\u003e'\r\n        case 0x26:\r\n          return '\\\\u0026'\r\n        /* istanbul ignore next: unreachable default */\r\n        default:\r\n          return c\r\n      }\r\n    })\r\n  }\r\n\r\n  return json\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211196
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\cookie-signature\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\cookie-signature\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie-signature\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie-signature\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie-signature\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie-signature\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie-signature\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/**\r\n * Module dependencies.\r\n */\nvar crypto = require('crypto');\n/**\r\n * Sign the given `val` with `secret`.\r\n *\r\n * @param {String} val\r\n * @param {String} secret\r\n * @return {String}\r\n * @api private\r\n */\n\n\nexports.sign = function (val, secret) {\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto.createHmac('sha256', secret).update(val).digest('base64').replace(/\\=+$/, '');\n};\n/**\r\n * Unsign and decode the given `val` with `secret`,\r\n * returning `false` if the signature is invalid.\r\n *\r\n * @param {String} val\r\n * @param {String} secret\r\n * @return {String|Boolean}\r\n * @api private\r\n */\n\n\nexports.unsign = function (val, secret) {\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.')),\n      mac = exports.sign(str, secret);\n  return sha1(mac) == sha1(val) ? str : false;\n};\n/**\r\n * Private\r\n */\n\n\nfunction sha1(str) {\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNyeXB0byIsInJlcXVpcmUiLCJleHBvcnRzIiwic2lnbiIsInZhbCIsInNlY3JldCIsIlR5cGVFcnJvciIsImNyZWF0ZUhtYWMiLCJ1cGRhdGUiLCJkaWdlc3QiLCJyZXBsYWNlIiwidW5zaWduIiwic3RyIiwic2xpY2UiLCJsYXN0SW5kZXhPZiIsIm1hYyIsInNoYTEiLCJjcmVhdGVIYXNoIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFFQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXBCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUFDLE9BQU8sQ0FBQ0MsSUFBUixHQUFlLFVBQVNDLEdBQVQsRUFBY0MsTUFBZCxFQUFxQjtBQUNsQyxNQUFJLFlBQVksT0FBT0QsR0FBdkIsRUFBNEIsTUFBTSxJQUFJRSxTQUFKLENBQWMsNENBQWQsQ0FBTjtBQUM1QixNQUFJLFlBQVksT0FBT0QsTUFBdkIsRUFBK0IsTUFBTSxJQUFJQyxTQUFKLENBQWMsaUNBQWQsQ0FBTjtBQUMvQixTQUFPRixHQUFHLEdBQUcsR0FBTixHQUFZSixNQUFNLENBQ3RCTyxVQURnQixDQUNMLFFBREssRUFDS0YsTUFETCxFQUVoQkcsTUFGZ0IsQ0FFVEosR0FGUyxFQUdoQkssTUFIZ0IsQ0FHVCxRQUhTLEVBSWhCQyxPQUpnQixDQUlSLE1BSlEsRUFJQSxFQUpBLENBQW5CO0FBS0QsQ0FSRDtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUFSLE9BQU8sQ0FBQ1MsTUFBUixHQUFpQixVQUFTUCxHQUFULEVBQWNDLE1BQWQsRUFBcUI7QUFDcEMsTUFBSSxZQUFZLE9BQU9ELEdBQXZCLEVBQTRCLE1BQU0sSUFBSUUsU0FBSixDQUFjLHdDQUFkLENBQU47QUFDNUIsTUFBSSxZQUFZLE9BQU9ELE1BQXZCLEVBQStCLE1BQU0sSUFBSUMsU0FBSixDQUFjLGlDQUFkLENBQU47QUFDL0IsTUFBSU0sR0FBRyxHQUFHUixHQUFHLENBQUNTLEtBQUosQ0FBVSxDQUFWLEVBQWFULEdBQUcsQ0FBQ1UsV0FBSixDQUFnQixHQUFoQixDQUFiLENBQVY7QUFBQSxNQUNJQyxHQUFHLEdBQUdiLE9BQU8sQ0FBQ0MsSUFBUixDQUFhUyxHQUFiLEVBQWtCUCxNQUFsQixDQURWO0FBR0EsU0FBT1csSUFBSSxDQUFDRCxHQUFELENBQUosSUFBYUMsSUFBSSxDQUFDWixHQUFELENBQWpCLEdBQXlCUSxHQUF6QixHQUErQixLQUF0QztBQUNELENBUEQ7QUFTQTtBQUNBO0FBQ0E7OztBQUVBLFNBQVNJLElBQVQsQ0FBY0osR0FBZCxFQUFrQjtBQUNoQixTQUFPWixNQUFNLENBQUNpQixVQUFQLENBQWtCLE1BQWxCLEVBQTBCVCxNQUExQixDQUFpQ0ksR0FBakMsRUFBc0NILE1BQXRDLENBQTZDLEtBQTdDLENBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcY29va2llLXNpZ25hdHVyZVxcIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqL1xyXG5cclxudmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xyXG5cclxuLyoqXHJcbiAqIFNpZ24gdGhlIGdpdmVuIGB2YWxgIHdpdGggYHNlY3JldGAuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWxcclxuICogQHBhcmFtIHtTdHJpbmd9IHNlY3JldFxyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XHJcbiAqIEBhcGkgcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmV4cG9ydHMuc2lnbiA9IGZ1bmN0aW9uKHZhbCwgc2VjcmV0KXtcclxuICBpZiAoJ3N0cmluZycgIT0gdHlwZW9mIHZhbCkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNvb2tpZSB2YWx1ZSBtdXN0IGJlIHByb3ZpZGVkIGFzIGEgc3RyaW5nLlwiKTtcclxuICBpZiAoJ3N0cmluZycgIT0gdHlwZW9mIHNlY3JldCkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlNlY3JldCBzdHJpbmcgbXVzdCBiZSBwcm92aWRlZC5cIik7XHJcbiAgcmV0dXJuIHZhbCArICcuJyArIGNyeXB0b1xyXG4gICAgLmNyZWF0ZUhtYWMoJ3NoYTI1NicsIHNlY3JldClcclxuICAgIC51cGRhdGUodmFsKVxyXG4gICAgLmRpZ2VzdCgnYmFzZTY0JylcclxuICAgIC5yZXBsYWNlKC9cXD0rJC8sICcnKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBVbnNpZ24gYW5kIGRlY29kZSB0aGUgZ2l2ZW4gYHZhbGAgd2l0aCBgc2VjcmV0YCxcclxuICogcmV0dXJuaW5nIGBmYWxzZWAgaWYgdGhlIHNpZ25hdHVyZSBpcyBpbnZhbGlkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZWNyZXRcclxuICogQHJldHVybiB7U3RyaW5nfEJvb2xlYW59XHJcbiAqIEBhcGkgcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmV4cG9ydHMudW5zaWduID0gZnVuY3Rpb24odmFsLCBzZWNyZXQpe1xyXG4gIGlmICgnc3RyaW5nJyAhPSB0eXBlb2YgdmFsKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU2lnbmVkIGNvb2tpZSBzdHJpbmcgbXVzdCBiZSBwcm92aWRlZC5cIik7XHJcbiAgaWYgKCdzdHJpbmcnICE9IHR5cGVvZiBzZWNyZXQpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTZWNyZXQgc3RyaW5nIG11c3QgYmUgcHJvdmlkZWQuXCIpO1xyXG4gIHZhciBzdHIgPSB2YWwuc2xpY2UoMCwgdmFsLmxhc3RJbmRleE9mKCcuJykpXHJcbiAgICAsIG1hYyA9IGV4cG9ydHMuc2lnbihzdHIsIHNlY3JldCk7XHJcbiAgXHJcbiAgcmV0dXJuIHNoYTEobWFjKSA9PSBzaGExKHZhbCkgPyBzdHIgOiBmYWxzZTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBQcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gc2hhMShzdHIpe1xyXG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMScpLnVwZGF0ZShzdHIpLmRpZ2VzdCgnaGV4Jyk7XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "crypto",
        "require",
        "exports",
        "sign",
        "val",
        "secret",
        "TypeError",
        "createHmac",
        "update",
        "digest",
        "replace",
        "unsign",
        "str",
        "slice",
        "lastIndexOf",
        "mac",
        "sha1",
        "createHash"
      ],
      "mappings": "AAAA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,OAAO,CAACC,IAAR,GAAe,UAASC,GAAT,EAAcC,MAAd,EAAqB;AAClC,MAAI,YAAY,OAAOD,GAAvB,EAA4B,MAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;AAC5B,MAAI,YAAY,OAAOD,MAAvB,EAA+B,MAAM,IAAIC,SAAJ,CAAc,iCAAd,CAAN;AAC/B,SAAOF,GAAG,GAAG,GAAN,GAAYJ,MAAM,CACtBO,UADgB,CACL,QADK,EACKF,MADL,EAEhBG,MAFgB,CAETJ,GAFS,EAGhBK,MAHgB,CAGT,QAHS,EAIhBC,OAJgB,CAIR,MAJQ,EAIA,EAJA,CAAnB;AAKD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAR,OAAO,CAACS,MAAR,GAAiB,UAASP,GAAT,EAAcC,MAAd,EAAqB;AACpC,MAAI,YAAY,OAAOD,GAAvB,EAA4B,MAAM,IAAIE,SAAJ,CAAc,wCAAd,CAAN;AAC5B,MAAI,YAAY,OAAOD,MAAvB,EAA+B,MAAM,IAAIC,SAAJ,CAAc,iCAAd,CAAN;AAC/B,MAAIM,GAAG,GAAGR,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAaT,GAAG,CAACU,WAAJ,CAAgB,GAAhB,CAAb,CAAV;AAAA,MACIC,GAAG,GAAGb,OAAO,CAACC,IAAR,CAAaS,GAAb,EAAkBP,MAAlB,CADV;AAGA,SAAOW,IAAI,CAACD,GAAD,CAAJ,IAAaC,IAAI,CAACZ,GAAD,CAAjB,GAAyBQ,GAAzB,GAA+B,KAAtC;AACD,CAPD;AASA;AACA;AACA;;;AAEA,SAASI,IAAT,CAAcJ,GAAd,EAAkB;AAChB,SAAOZ,MAAM,CAACiB,UAAP,CAAkB,MAAlB,EAA0BT,MAA1B,CAAiCI,GAAjC,EAAsCH,MAAtC,CAA6C,KAA7C,CAAP;AACD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie-signature\\",
      "sourcesContent": [
        "/**\r\n * Module dependencies.\r\n */\r\n\r\nvar crypto = require('crypto');\r\n\r\n/**\r\n * Sign the given `val` with `secret`.\r\n *\r\n * @param {String} val\r\n * @param {String} secret\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.sign = function(val, secret){\r\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\r\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\r\n  return val + '.' + crypto\r\n    .createHmac('sha256', secret)\r\n    .update(val)\r\n    .digest('base64')\r\n    .replace(/\\=+$/, '');\r\n};\r\n\r\n/**\r\n * Unsign and decode the given `val` with `secret`,\r\n * returning `false` if the signature is invalid.\r\n *\r\n * @param {String} val\r\n * @param {String} secret\r\n * @return {String|Boolean}\r\n * @api private\r\n */\r\n\r\nexports.unsign = function(val, secret){\r\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\r\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\r\n  var str = val.slice(0, val.lastIndexOf('.'))\r\n    , mac = exports.sign(str, secret);\r\n  \r\n  return sha1(mac) == sha1(val) ? str : false;\r\n};\r\n\r\n/**\r\n * Private\r\n */\r\n\r\nfunction sha1(str){\r\n  return crypto.createHash('sha1').update(str).digest('hex');\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210993
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\cookie\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\cookie\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('='); // skip things that don't look like key=value\n\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim();\n    var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values\n\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    } // only assign once\n\n\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\n\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\n\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "exports",
        "parse",
        "serialize",
        "decode",
        "decodeURIComponent",
        "encode",
        "encodeURIComponent",
        "pairSplitRegExp",
        "fieldContentRegExp",
        "str",
        "options",
        "TypeError",
        "obj",
        "opt",
        "pairs",
        "split",
        "dec",
        "i",
        "length",
        "pair",
        "eq_idx",
        "indexOf",
        "key",
        "substr",
        "trim",
        "val",
        "slice",
        "undefined",
        "tryDecode",
        "name",
        "enc",
        "test",
        "value",
        "maxAge",
        "isNaN",
        "Error",
        "Math",
        "floor",
        "domain",
        "path",
        "expires",
        "toUTCString",
        "httpOnly",
        "secure",
        "sameSite",
        "toLowerCase",
        "e"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\cookie\\",
      "sourcesContent": [
        "/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar decode = decodeURIComponent;\r\nvar encode = encodeURIComponent;\r\nvar pairSplitRegExp = /; */;\r\n\r\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\n\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\n\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse(str, options) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('argument str must be a string');\r\n  }\r\n\r\n  var obj = {}\r\n  var opt = options || {};\r\n  var pairs = str.split(pairSplitRegExp);\r\n  var dec = opt.decode || decode;\r\n\r\n  for (var i = 0; i < pairs.length; i++) {\r\n    var pair = pairs[i];\r\n    var eq_idx = pair.indexOf('=');\r\n\r\n    // skip things that don't look like key=value\r\n    if (eq_idx < 0) {\r\n      continue;\r\n    }\r\n\r\n    var key = pair.substr(0, eq_idx).trim()\r\n    var val = pair.substr(++eq_idx, pair.length).trim();\r\n\r\n    // quoted values\r\n    if ('\"' == val[0]) {\r\n      val = val.slice(1, -1);\r\n    }\r\n\r\n    // only assign once\r\n    if (undefined == obj[key]) {\r\n      obj[key] = tryDecode(val, dec);\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction serialize(name, val, options) {\r\n  var opt = options || {};\r\n  var enc = opt.encode || encode;\r\n\r\n  if (typeof enc !== 'function') {\r\n    throw new TypeError('option encode is invalid');\r\n  }\r\n\r\n  if (!fieldContentRegExp.test(name)) {\r\n    throw new TypeError('argument name is invalid');\r\n  }\r\n\r\n  var value = enc(val);\r\n\r\n  if (value && !fieldContentRegExp.test(value)) {\r\n    throw new TypeError('argument val is invalid');\r\n  }\r\n\r\n  var str = name + '=' + value;\r\n\r\n  if (null != opt.maxAge) {\r\n    var maxAge = opt.maxAge - 0;\r\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\r\n    str += '; Max-Age=' + Math.floor(maxAge);\r\n  }\r\n\r\n  if (opt.domain) {\r\n    if (!fieldContentRegExp.test(opt.domain)) {\r\n      throw new TypeError('option domain is invalid');\r\n    }\r\n\r\n    str += '; Domain=' + opt.domain;\r\n  }\r\n\r\n  if (opt.path) {\r\n    if (!fieldContentRegExp.test(opt.path)) {\r\n      throw new TypeError('option path is invalid');\r\n    }\r\n\r\n    str += '; Path=' + opt.path;\r\n  }\r\n\r\n  if (opt.expires) {\r\n    if (typeof opt.expires.toUTCString !== 'function') {\r\n      throw new TypeError('option expires is invalid');\r\n    }\r\n\r\n    str += '; Expires=' + opt.expires.toUTCString();\r\n  }\r\n\r\n  if (opt.httpOnly) {\r\n    str += '; HttpOnly';\r\n  }\r\n\r\n  if (opt.secure) {\r\n    str += '; Secure';\r\n  }\r\n\r\n  if (opt.sameSite) {\r\n    var sameSite = typeof opt.sameSite === 'string'\r\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\r\n\r\n    switch (sameSite) {\r\n      case true:\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'lax':\r\n        str += '; SameSite=Lax';\r\n        break;\r\n      case 'strict':\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'none':\r\n        str += '; SameSite=None';\r\n        break;\r\n      default:\r\n        throw new TypeError('option sameSite is invalid');\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\r\n\r\nfunction tryDecode(str, decode) {\r\n  try {\r\n    return decode(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211009
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\vary\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\vary\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\vary\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\vary\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\vary\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\vary\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\vary\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * vary\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n */\n\nmodule.exports = vary;\nmodule.exports.append = append;\n/**\r\n * RegExp to match field-name in RFC 7230 sec 3.2\r\n *\r\n * field-name    = token\r\n * token         = 1*tchar\r\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\r\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\r\n *               / DIGIT / ALPHA\r\n *               ; any VCHAR, except delimiters\r\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n/**\r\n * Append a field to a vary header.\r\n *\r\n * @param {String} header\r\n * @param {String|Array} field\r\n * @return {String}\r\n * @public\r\n */\n\nfunction append(header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required');\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required');\n  } // get fields array\n\n\n  var fields = !Array.isArray(field) ? parse(String(field)) : field; // assert on invalid field names\n\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name');\n    }\n  } // existing, unspecified vary\n\n\n  if (header === '*') {\n    return header;\n  } // enumerate current values\n\n\n  var val = header;\n  var vals = parse(header.toLowerCase()); // unspecified vary\n\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*';\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase(); // append value (case-preserving)\n\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld);\n      val = val ? val + ', ' + fields[i] : fields[i];\n    }\n  }\n\n  return val;\n}\n/**\r\n * Parse a vary header into an array.\r\n *\r\n * @param {String} header\r\n * @return {Array}\r\n * @private\r\n */\n\n\nfunction parse(header) {\n  var end = 0;\n  var list = [];\n  var start = 0; // gather tokens\n\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i + 1;\n        }\n\n        break;\n\n      case 0x2c:\n        /* , */\n        list.push(header.substring(start, end));\n        start = end = i + 1;\n        break;\n\n      default:\n        end = i + 1;\n        break;\n    }\n  } // final token\n\n\n  list.push(header.substring(start, end));\n  return list;\n}\n/**\r\n * Mark that a request is varied on a header field.\r\n *\r\n * @param {Object} res\r\n * @param {String|Array} field\r\n * @public\r\n */\n\n\nfunction vary(res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required');\n  } // get existing header\n\n\n  var val = res.getHeader('Vary') || '';\n  var header = Array.isArray(val) ? val.join(', ') : String(val); // set new header\n\n  if (val = append(header, field)) {\n    res.setHeader('Vary', val);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "vary",
        "append",
        "FIELD_NAME_REGEXP",
        "header",
        "field",
        "TypeError",
        "fields",
        "Array",
        "isArray",
        "parse",
        "String",
        "j",
        "length",
        "test",
        "val",
        "vals",
        "toLowerCase",
        "indexOf",
        "i",
        "fld",
        "push",
        "end",
        "list",
        "start",
        "len",
        "charCodeAt",
        "substring",
        "res",
        "getHeader",
        "setHeader",
        "join"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\vary\\",
      "sourcesContent": [
        "/*!\r\n * vary\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = vary\r\nmodule.exports.append = append\r\n\r\n/**\r\n * RegExp to match field-name in RFC 7230 sec 3.2\r\n *\r\n * field-name    = token\r\n * token         = 1*tchar\r\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\r\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\r\n *               / DIGIT / ALPHA\r\n *               ; any VCHAR, except delimiters\r\n */\r\n\r\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\r\n\r\n/**\r\n * Append a field to a vary header.\r\n *\r\n * @param {String} header\r\n * @param {String|Array} field\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nfunction append (header, field) {\r\n  if (typeof header !== 'string') {\r\n    throw new TypeError('header argument is required')\r\n  }\r\n\r\n  if (!field) {\r\n    throw new TypeError('field argument is required')\r\n  }\r\n\r\n  // get fields array\r\n  var fields = !Array.isArray(field)\r\n    ? parse(String(field))\r\n    : field\r\n\r\n  // assert on invalid field names\r\n  for (var j = 0; j < fields.length; j++) {\r\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\r\n      throw new TypeError('field argument contains an invalid header name')\r\n    }\r\n  }\r\n\r\n  // existing, unspecified vary\r\n  if (header === '*') {\r\n    return header\r\n  }\r\n\r\n  // enumerate current values\r\n  var val = header\r\n  var vals = parse(header.toLowerCase())\r\n\r\n  // unspecified vary\r\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\r\n    return '*'\r\n  }\r\n\r\n  for (var i = 0; i < fields.length; i++) {\r\n    var fld = fields[i].toLowerCase()\r\n\r\n    // append value (case-preserving)\r\n    if (vals.indexOf(fld) === -1) {\r\n      vals.push(fld)\r\n      val = val\r\n        ? val + ', ' + fields[i]\r\n        : fields[i]\r\n    }\r\n  }\r\n\r\n  return val\r\n}\r\n\r\n/**\r\n * Parse a vary header into an array.\r\n *\r\n * @param {String} header\r\n * @return {Array}\r\n * @private\r\n */\r\n\r\nfunction parse (header) {\r\n  var end = 0\r\n  var list = []\r\n  var start = 0\r\n\r\n  // gather tokens\r\n  for (var i = 0, len = header.length; i < len; i++) {\r\n    switch (header.charCodeAt(i)) {\r\n      case 0x20: /*   */\r\n        if (start === end) {\r\n          start = end = i + 1\r\n        }\r\n        break\r\n      case 0x2c: /* , */\r\n        list.push(header.substring(start, end))\r\n        start = end = i + 1\r\n        break\r\n      default:\r\n        end = i + 1\r\n        break\r\n    }\r\n  }\r\n\r\n  // final token\r\n  list.push(header.substring(start, end))\r\n\r\n  return list\r\n}\r\n\r\n/**\r\n * Mark that a request is varied on a header field.\r\n *\r\n * @param {Object} res\r\n * @param {String|Array} field\r\n * @public\r\n */\r\n\r\nfunction vary (res, field) {\r\n  if (!res || !res.getHeader || !res.setHeader) {\r\n    // quack quack\r\n    throw new TypeError('res argument is required')\r\n  }\r\n\r\n  // get existing header\r\n  var val = res.getHeader('Vary') || ''\r\n  var header = Array.isArray(val)\r\n    ? val.join(', ')\r\n    : String(val)\r\n\r\n  // set new header\r\n  if ((val = append(header, field))) {\r\n    res.setHeader('Vary', val)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464212023
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\json.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\json.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\json.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\json.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
        "sourceFileName": "json.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * body-parser\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar bytes = require('bytes');\n\nvar contentType = require('content-type');\n\nvar createError = require('http-errors');\n\nvar debug = require('debug')('body-parser:json');\n\nvar read = require('../read');\n\nvar typeis = require('type-is');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = json;\n/**\r\n * RegExp to match the first non-space in a string.\r\n *\r\n * Allowed whitespace is defined in RFC 7159:\r\n *\r\n *    ws = *(\r\n *            %x20 /              ; Space\r\n *            %x09 /              ; Horizontal tab\r\n *            %x0A /              ; Line feed or New line\r\n *            %x0D )              ; Carriage return\r\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/; // eslint-disable-line no-control-regex\n\n/**\r\n * Create a middleware to parse JSON bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\n\nfunction json(options) {\n  var opts = options || {};\n  var limit = typeof opts.limit !== 'number' ? bytes.parse(opts.limit || '100kb') : opts.limit;\n  var inflate = opts.inflate !== false;\n  var reviver = opts.reviver;\n  var strict = opts.strict !== false;\n  var type = opts.type || 'application/json';\n  var verify = opts.verify || false;\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function');\n  } // create the appropriate type checking function\n\n\n  var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;\n\n  function parse(body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {};\n    }\n\n    if (strict) {\n      var first = firstchar(body);\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation');\n        throw createStrictSyntaxError(body, first);\n      }\n    }\n\n    try {\n      debug('parse json');\n      return JSON.parse(body, reviver);\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      });\n    }\n  }\n\n  return function jsonParser(req, res, next) {\n    if (req._body) {\n      debug('body already parsed');\n      next();\n      return;\n    }\n\n    req.body = req.body || {}; // skip requests without bodies\n\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body');\n      next();\n      return;\n    }\n\n    debug('content-type %j', req.headers['content-type']); // determine if request should be parsed\n\n    if (!shouldParse(req)) {\n      debug('skip parsing');\n      next();\n      return;\n    } // assert charset per RFC 7159 sec 8.1\n\n\n    var charset = getCharset(req) || 'utf-8';\n\n    if (charset.substr(0, 4) !== 'utf-') {\n      debug('invalid charset');\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }));\n      return;\n    } // read\n\n\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    });\n  };\n}\n/**\r\n * Create strict violation syntax error matching native error.\r\n *\r\n * @param {string} str\r\n * @param {string} char\r\n * @return {Error}\r\n * @private\r\n */\n\n\nfunction createStrictSyntaxError(str, char) {\n  var index = str.indexOf(char);\n  var partial = str.substring(0, index) + '#';\n\n  try {\n    JSON.parse(partial);\n    /* istanbul ignore next */\n\n    throw new SyntaxError('strict violation');\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    });\n  }\n}\n/**\r\n * Get the first non-whitespace character in a string.\r\n *\r\n * @param {string} str\r\n * @return {function}\r\n * @private\r\n */\n\n\nfunction firstchar(str) {\n  return FIRST_CHAR_REGEXP.exec(str)[1];\n}\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\n\n\nfunction getCharset(req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase();\n  } catch (e) {\n    return undefined;\n  }\n}\n/**\r\n * Normalize a SyntaxError for JSON.parse.\r\n *\r\n * @param {SyntaxError} error\r\n * @param {object} obj\r\n * @return {SyntaxError}\r\n */\n\n\nfunction normalizeJsonSyntaxError(error, obj) {\n  var keys = Object.getOwnPropertyNames(error);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key];\n    }\n  } // replace stack before message for Node.js 0.10 and below\n\n\n  error.stack = obj.stack.replace(error.message, obj.message);\n  error.message = obj.message;\n  return error;\n}\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\n\n\nfunction typeChecker(type) {\n  return function checkType(req) {\n    return Boolean(typeis(req, type));\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzb24uanMiXSwibmFtZXMiOlsiYnl0ZXMiLCJyZXF1aXJlIiwiY29udGVudFR5cGUiLCJjcmVhdGVFcnJvciIsImRlYnVnIiwicmVhZCIsInR5cGVpcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJqc29uIiwiRklSU1RfQ0hBUl9SRUdFWFAiLCJvcHRpb25zIiwib3B0cyIsImxpbWl0IiwicGFyc2UiLCJpbmZsYXRlIiwicmV2aXZlciIsInN0cmljdCIsInR5cGUiLCJ2ZXJpZnkiLCJUeXBlRXJyb3IiLCJzaG91bGRQYXJzZSIsInR5cGVDaGVja2VyIiwiYm9keSIsImxlbmd0aCIsImZpcnN0IiwiZmlyc3RjaGFyIiwiY3JlYXRlU3RyaWN0U3ludGF4RXJyb3IiLCJKU09OIiwiZSIsIm5vcm1hbGl6ZUpzb25TeW50YXhFcnJvciIsIm1lc3NhZ2UiLCJzdGFjayIsImpzb25QYXJzZXIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiX2JvZHkiLCJoYXNCb2R5IiwiaGVhZGVycyIsImNoYXJzZXQiLCJnZXRDaGFyc2V0Iiwic3Vic3RyIiwidG9VcHBlckNhc2UiLCJlbmNvZGluZyIsInN0ciIsImNoYXIiLCJpbmRleCIsImluZGV4T2YiLCJwYXJ0aWFsIiwic3Vic3RyaW5nIiwiU3ludGF4RXJyb3IiLCJyZXBsYWNlIiwiZXhlYyIsInBhcmFtZXRlcnMiLCJ0b0xvd2VyQ2FzZSIsInVuZGVmaW5lZCIsImVycm9yIiwib2JqIiwia2V5cyIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJpIiwia2V5IiwiY2hlY2tUeXBlIiwiQm9vbGVhbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUNBLElBQUlDLFdBQVcsR0FBR0QsT0FBTyxDQUFDLGNBQUQsQ0FBekI7O0FBQ0EsSUFBSUUsV0FBVyxHQUFHRixP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cmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxib2R5LXBhcnNlclxcbGliXFx0eXBlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGJvZHktcGFyc2VyXHJcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xyXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5cclxudmFyIGJ5dGVzID0gcmVxdWlyZSgnYnl0ZXMnKVxyXG52YXIgY29udGVudFR5cGUgPSByZXF1aXJlKCdjb250ZW50LXR5cGUnKVxyXG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCdodHRwLWVycm9ycycpXHJcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2JvZHktcGFyc2VyOmpzb24nKVxyXG52YXIgcmVhZCA9IHJlcXVpcmUoJy4uL3JlYWQnKVxyXG52YXIgdHlwZWlzID0gcmVxdWlyZSgndHlwZS1pcycpXHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBqc29uXHJcblxyXG4vKipcclxuICogUmVnRXhwIHRvIG1hdGNoIHRoZSBmaXJzdCBub24tc3BhY2UgaW4gYSBzdHJpbmcuXHJcbiAqXHJcbiAqIEFsbG93ZWQgd2hpdGVzcGFjZSBpcyBkZWZpbmVkIGluIFJGQyA3MTU5OlxyXG4gKlxyXG4gKiAgICB3cyA9ICooXHJcbiAqICAgICAgICAgICAgJXgyMCAvICAgICAgICAgICAgICA7IFNwYWNlXHJcbiAqICAgICAgICAgICAgJXgwOSAvICAgICAgICAgICAgICA7IEhvcml6b250YWwgdGFiXHJcbiAqICAgICAgICAgICAgJXgwQSAvICAgICAgICAgICAgICA7IExpbmUgZmVlZCBvciBOZXcgbGluZVxyXG4gKiAgICAgICAgICAgICV4MEQgKSAgICAgICAgICAgICAgOyBDYXJyaWFnZSByZXR1cm5cclxuICovXHJcblxyXG52YXIgRklSU1RfQ0hBUl9SRUdFWFAgPSAvXltcXHgyMFxceDA5XFx4MGFcXHgwZF0qKC4pLyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnRyb2wtcmVnZXhcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgYSBtaWRkbGV3YXJlIHRvIHBhcnNlIEpTT04gYm9kaWVzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXHJcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24ganNvbiAob3B0aW9ucykge1xyXG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICB2YXIgbGltaXQgPSB0eXBlb2Ygb3B0cy5saW1pdCAhPT0gJ251bWJlcidcclxuICAgID8gYnl0ZXMucGFyc2Uob3B0cy5saW1pdCB8fCAnMTAwa2InKVxyXG4gICAgOiBvcHRzLmxpbWl0XHJcbiAgdmFyIGluZmxhdGUgPSBvcHRzLmluZmxhdGUgIT09IGZhbHNlXHJcbiAgdmFyIHJldml2ZXIgPSBvcHRzLnJldml2ZXJcclxuICB2YXIgc3RyaWN0ID0gb3B0cy5zdHJpY3QgIT09IGZhbHNlXHJcbiAgdmFyIHR5cGUgPSBvcHRzLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgdmFyIHZlcmlmeSA9IG9wdHMudmVyaWZ5IHx8IGZhbHNlXHJcblxyXG4gIGlmICh2ZXJpZnkgIT09IGZhbHNlICYmIHR5cGVvZiB2ZXJpZnkgIT09ICdmdW5jdGlvbicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiB2ZXJpZnkgbXVzdCBiZSBmdW5jdGlvbicpXHJcbiAgfVxyXG5cclxuICAvLyBjcmVhdGUgdGhlIGFwcHJvcHJpYXRlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25cclxuICB2YXIgc2hvdWxkUGFyc2UgPSB0eXBlb2YgdHlwZSAhPT0gJ2Z1bmN0aW9uJ1xyXG4gICAgPyB0eXBlQ2hlY2tlcih0eXBlKVxyXG4gICAgOiB0eXBlXHJcblxyXG4gIGZ1bmN0aW9uIHBhcnNlIChib2R5KSB7XHJcbiAgICBpZiAoYm9keS5sZW5ndGggPT09IDApIHtcclxuICAgICAgLy8gc3BlY2lhbC1jYXNlIGVtcHR5IGpzb24gYm9keSwgYXMgaXQncyBhIGNvbW1vbiBjbGllbnQtc2lkZSBtaXN0YWtlXHJcbiAgICAgIC8vIFRPRE86IG1heWJlIG1ha2UgdGhpcyBjb25maWd1cmFibGUgb3IgcGFydCBvZiBcInN0cmljdFwiIG9wdGlvblxyXG4gICAgICByZXR1cm4ge31cclxuICAgIH1cclxuXHJcbiAgICBpZiAoc3RyaWN0KSB7XHJcbiAgICAgIHZhciBmaXJzdCA9IGZpcnN0Y2hhcihib2R5KVxyXG5cclxuICAgICAgaWYgKGZpcnN0ICE9PSAneycgJiYgZmlyc3QgIT09ICdbJykge1xyXG4gICAgICAgIGRlYnVnKCdzdHJpY3QgdmlvbGF0aW9uJylcclxuICAgICAgICB0aHJvdyBjcmVhdGVTdHJpY3RTeW50YXhFcnJvcihib2R5LCBmaXJzdClcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGRlYnVnKCdwYXJzZSBqc29uJylcclxuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoYm9keSwgcmV2aXZlcilcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgdGhyb3cgbm9ybWFsaXplSnNvblN5bnRheEVycm9yKGUsIHtcclxuICAgICAgICBtZXNzYWdlOiBlLm1lc3NhZ2UsXHJcbiAgICAgICAgc3RhY2s6IGUuc3RhY2tcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBmdW5jdGlvbiBqc29uUGFyc2VyIChyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgaWYgKHJlcS5fYm9keSkge1xyXG4gICAgICBkZWJ1ZygnYm9keSBhbHJlYWR5IHBhcnNlZCcpXHJcbiAgICAgIG5leHQoKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICByZXEuYm9keSA9IHJlcS5ib2R5IHx8IHt9XHJcblxyXG4gICAgLy8gc2tpcCByZXF1ZXN0cyB3aXRob3V0IGJvZGllc1xyXG4gICAgaWYgKCF0eXBlaXMuaGFzQm9keShyZXEpKSB7XHJcbiAgICAgIGRlYnVnKCdza2lwIGVtcHR5IGJvZHknKVxyXG4gICAgICBuZXh0KClcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgZGVidWcoJ2NvbnRlbnQtdHlwZSAlaicsIHJlcS5oZWFkZXJzWydjb250ZW50LXR5cGUnXSlcclxuXHJcbiAgICAvLyBkZXRlcm1pbmUgaWYgcmVxdWVzdCBzaG91bGQgYmUgcGFyc2VkXHJcbiAgICBpZiAoIXNob3VsZFBhcnNlKHJlcSkpIHtcclxuICAgICAgZGVidWcoJ3NraXAgcGFyc2luZycpXHJcbiAgICAgIG5leHQoKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICAvLyBhc3NlcnQgY2hhcnNldCBwZXIgUkZDIDcxNTkgc2VjIDguMVxyXG4gICAgdmFyIGNoYXJzZXQgPSBnZXRDaGFyc2V0KHJlcSkgfHwgJ3V0Zi04J1xyXG4gICAgaWYgKGNoYXJzZXQuc3Vic3RyKDAsIDQpICE9PSAndXRmLScpIHtcclxuICAgICAgZGVidWcoJ2ludmFsaWQgY2hhcnNldCcpXHJcbiAgICAgIG5leHQoY3JlYXRlRXJyb3IoNDE1LCAndW5zdXBwb3J0ZWQgY2hhcnNldCBcIicgKyBjaGFyc2V0LnRvVXBwZXJDYXNlKCkgKyAnXCInLCB7XHJcbiAgICAgICAgY2hhcnNldDogY2hhcnNldCxcclxuICAgICAgICB0eXBlOiAnY2hhcnNldC51bnN1cHBvcnRlZCdcclxuICAgICAgfSkpXHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG5cclxuICAgIC8vIHJlYWRcclxuICAgIHJlYWQocmVxLCByZXMsIG5leHQsIHBhcnNlLCBkZWJ1Zywge1xyXG4gICAgICBlbmNvZGluZzogY2hhcnNldCxcclxuICAgICAgaW5mbGF0ZTogaW5mbGF0ZSxcclxuICAgICAgbGltaXQ6IGxpbWl0LFxyXG4gICAgICB2ZXJpZnk6IHZlcmlmeVxyXG4gICAgfSlcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgc3RyaWN0IHZpb2xhdGlvbiBzeW50YXggZXJyb3IgbWF0Y2hpbmcgbmF0aXZlIGVycm9yLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBjaGFyXHJcbiAqIEByZXR1cm4ge0Vycm9yfVxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVN0cmljdFN5bnRheEVycm9yIChzdHIsIGNoYXIpIHtcclxuICB2YXIgaW5kZXggPSBzdHIuaW5kZXhPZihjaGFyKVxyXG4gIHZhciBwYXJ0aWFsID0gc3RyLnN1YnN0cmluZygwLCBpbmRleCkgKyAnIydcclxuXHJcbiAgdHJ5IHtcclxuICAgIEpTT04ucGFyc2UocGFydGlhbCk7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIHRocm93IG5ldyBTeW50YXhFcnJvcignc3RyaWN0IHZpb2xhdGlvbicpXHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgcmV0dXJuIG5vcm1hbGl6ZUpzb25TeW50YXhFcnJvcihlLCB7XHJcbiAgICAgIG1lc3NhZ2U6IGUubWVzc2FnZS5yZXBsYWNlKCcjJywgY2hhciksXHJcbiAgICAgIHN0YWNrOiBlLnN0YWNrXHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCB0aGUgZmlyc3Qgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVyIGluIGEgc3RyaW5nLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGZpcnN0Y2hhciAoc3RyKSB7XHJcbiAgcmV0dXJuIEZJUlNUX0NIQVJfUkVHRVhQLmV4ZWMoc3RyKVsxXVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBjaGFyc2V0IG9mIGEgcmVxdWVzdC5cclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBnZXRDaGFyc2V0IChyZXEpIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIChjb250ZW50VHlwZS5wYXJzZShyZXEpLnBhcmFtZXRlcnMuY2hhcnNldCB8fCAnJykudG9Mb3dlckNhc2UoKVxyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIHJldHVybiB1bmRlZmluZWRcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBOb3JtYWxpemUgYSBTeW50YXhFcnJvciBmb3IgSlNPTi5wYXJzZS5cclxuICpcclxuICogQHBhcmFtIHtTeW50YXhFcnJvcn0gZXJyb3JcclxuICogQHBhcmFtIHtvYmplY3R9IG9ialxyXG4gKiBAcmV0dXJuIHtTeW50YXhFcnJvcn1cclxuICovXHJcblxyXG5mdW5jdGlvbiBub3JtYWxpemVKc29uU3ludGF4RXJyb3IgKGVycm9yLCBvYmopIHtcclxuICB2YXIga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGVycm9yKVxyXG5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBrZXkgPSBrZXlzW2ldXHJcbiAgICBpZiAoa2V5ICE9PSAnc3RhY2snICYmIGtleSAhPT0gJ21lc3NhZ2UnKSB7XHJcbiAgICAgIGRlbGV0ZSBlcnJvcltrZXldXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyByZXBsYWNlIHN0YWNrIGJlZm9yZSBtZXNzYWdlIGZvciBOb2RlLmpzIDAuMTAgYW5kIGJlbG93XHJcbiAgZXJyb3Iuc3RhY2sgPSBvYmouc3RhY2sucmVwbGFjZShlcnJvci5tZXNzYWdlLCBvYmoubWVzc2FnZSlcclxuICBlcnJvci5tZXNzYWdlID0gb2JqLm1lc3NhZ2VcclxuXHJcbiAgcmV0dXJuIGVycm9yXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIHNpbXBsZSB0eXBlIGNoZWNrZXIuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXHJcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHR5cGVDaGVja2VyICh0eXBlKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrVHlwZSAocmVxKSB7XHJcbiAgICByZXR1cm4gQm9vbGVhbih0eXBlaXMocmVxLCB0eXBlKSlcclxuICB9XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "json.js"
      ],
      "names": [
        "bytes",
        "require",
        "contentType",
        "createError",
        "debug",
        "read",
        "typeis",
        "module",
        "exports",
        "json",
        "FIRST_CHAR_REGEXP",
        "options",
        "opts",
        "limit",
        "parse",
        "inflate",
        "reviver",
        "strict",
        "type",
        "verify",
        "TypeError",
        "shouldParse",
        "typeChecker",
        "body",
        "length",
        "first",
        "firstchar",
        "createStrictSyntaxError",
        "JSON",
        "e",
        "normalizeJsonSyntaxError",
        "message",
        "stack",
        "jsonParser",
        "req",
        "res",
        "next",
        "_body",
        "hasBody",
        "headers",
        "charset",
        "getCharset",
        "substr",
        "toUpperCase",
        "encoding",
        "str",
        "char",
        "index",
        "indexOf",
        "partial",
        "substring",
        "SyntaxError",
        "replace",
        "exec",
        "parameters",
        "toLowerCase",
        "undefined",
        "error",
        "obj",
        "keys",
        "Object",
        "getOwnPropertyNames",
        "i",
        "key",
        "checkType",
        "Boolean"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "sourcesContent": [
        "/*!\r\n * body-parser\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar contentType = require('content-type')\r\nvar createError = require('http-errors')\r\nvar debug = require('debug')('body-parser:json')\r\nvar read = require('../read')\r\nvar typeis = require('type-is')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = json\r\n\r\n/**\r\n * RegExp to match the first non-space in a string.\r\n *\r\n * Allowed whitespace is defined in RFC 7159:\r\n *\r\n *    ws = *(\r\n *            %x20 /              ; Space\r\n *            %x09 /              ; Horizontal tab\r\n *            %x0A /              ; Line feed or New line\r\n *            %x0D )              ; Carriage return\r\n */\r\n\r\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex\r\n\r\n/**\r\n * Create a middleware to parse JSON bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction json (options) {\r\n  var opts = options || {}\r\n\r\n  var limit = typeof opts.limit !== 'number'\r\n    ? bytes.parse(opts.limit || '100kb')\r\n    : opts.limit\r\n  var inflate = opts.inflate !== false\r\n  var reviver = opts.reviver\r\n  var strict = opts.strict !== false\r\n  var type = opts.type || 'application/json'\r\n  var verify = opts.verify || false\r\n\r\n  if (verify !== false && typeof verify !== 'function') {\r\n    throw new TypeError('option verify must be function')\r\n  }\r\n\r\n  // create the appropriate type checking function\r\n  var shouldParse = typeof type !== 'function'\r\n    ? typeChecker(type)\r\n    : type\r\n\r\n  function parse (body) {\r\n    if (body.length === 0) {\r\n      // special-case empty json body, as it's a common client-side mistake\r\n      // TODO: maybe make this configurable or part of \"strict\" option\r\n      return {}\r\n    }\r\n\r\n    if (strict) {\r\n      var first = firstchar(body)\r\n\r\n      if (first !== '{' && first !== '[') {\r\n        debug('strict violation')\r\n        throw createStrictSyntaxError(body, first)\r\n      }\r\n    }\r\n\r\n    try {\r\n      debug('parse json')\r\n      return JSON.parse(body, reviver)\r\n    } catch (e) {\r\n      throw normalizeJsonSyntaxError(e, {\r\n        message: e.message,\r\n        stack: e.stack\r\n      })\r\n    }\r\n  }\r\n\r\n  return function jsonParser (req, res, next) {\r\n    if (req._body) {\r\n      debug('body already parsed')\r\n      next()\r\n      return\r\n    }\r\n\r\n    req.body = req.body || {}\r\n\r\n    // skip requests without bodies\r\n    if (!typeis.hasBody(req)) {\r\n      debug('skip empty body')\r\n      next()\r\n      return\r\n    }\r\n\r\n    debug('content-type %j', req.headers['content-type'])\r\n\r\n    // determine if request should be parsed\r\n    if (!shouldParse(req)) {\r\n      debug('skip parsing')\r\n      next()\r\n      return\r\n    }\r\n\r\n    // assert charset per RFC 7159 sec 8.1\r\n    var charset = getCharset(req) || 'utf-8'\r\n    if (charset.substr(0, 4) !== 'utf-') {\r\n      debug('invalid charset')\r\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\r\n        charset: charset,\r\n        type: 'charset.unsupported'\r\n      }))\r\n      return\r\n    }\r\n\r\n    // read\r\n    read(req, res, next, parse, debug, {\r\n      encoding: charset,\r\n      inflate: inflate,\r\n      limit: limit,\r\n      verify: verify\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Create strict violation syntax error matching native error.\r\n *\r\n * @param {string} str\r\n * @param {string} char\r\n * @return {Error}\r\n * @private\r\n */\r\n\r\nfunction createStrictSyntaxError (str, char) {\r\n  var index = str.indexOf(char)\r\n  var partial = str.substring(0, index) + '#'\r\n\r\n  try {\r\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\r\n  } catch (e) {\r\n    return normalizeJsonSyntaxError(e, {\r\n      message: e.message.replace('#', char),\r\n      stack: e.stack\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the first non-whitespace character in a string.\r\n *\r\n * @param {string} str\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction firstchar (str) {\r\n  return FIRST_CHAR_REGEXP.exec(str)[1]\r\n}\r\n\r\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\r\n\r\nfunction getCharset (req) {\r\n  try {\r\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Normalize a SyntaxError for JSON.parse.\r\n *\r\n * @param {SyntaxError} error\r\n * @param {object} obj\r\n * @return {SyntaxError}\r\n */\r\n\r\nfunction normalizeJsonSyntaxError (error, obj) {\r\n  var keys = Object.getOwnPropertyNames(error)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    if (key !== 'stack' && key !== 'message') {\r\n      delete error[key]\r\n    }\r\n  }\r\n\r\n  // replace stack before message for Node.js 0.10 and below\r\n  error.stack = obj.stack.replace(error.message, obj.message)\r\n  error.message = obj.message\r\n\r\n  return error\r\n}\r\n\r\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\r\n\r\nfunction typeChecker (type) {\r\n  return function checkType (req) {\r\n    return Boolean(typeis(req, type))\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210743
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\bytes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\bytes\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\bytes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\bytes\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\bytes\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\bytes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\bytes\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * bytes\r\n * Copyright(c) 2012-2014 TJ Holowaychuk\r\n * Copyright(c) 2015 Jed Watson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\nvar map = {\n  b: 1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5)\n};\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n/**\r\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\r\n *\r\n * @param {string|number} value\r\n * @param {{\r\n *  case: [string],\r\n *  decimalPlaces: [number]\r\n *  fixedDecimals: [boolean]\r\n *  thousandsSeparator: [string]\r\n *  unitSeparator: [string]\r\n *  }} [options] bytes options.\r\n *\r\n * @returns {string|number|null}\r\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n/**\r\n * Format the given value in bytes into a string.\r\n *\r\n * If the value is negative, it is kept as such. If it is a float,\r\n * it is rounded.\r\n *\r\n * @param {number} value\r\n * @param {object} [options]\r\n * @param {number} [options.decimalPlaces=2]\r\n * @param {number} [options.fixedDecimals=false]\r\n * @param {string} [options.thousandsSeparator=]\r\n * @param {string} [options.unit=]\r\n * @param {string} [options.unitSeparator=]\r\n *\r\n * @returns {string|null}\r\n * @public\r\n */\n\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = options && options.thousandsSeparator || '';\n  var unitSeparator = options && options.unitSeparator || '';\n  var decimalPlaces = options && options.decimalPlaces !== undefined ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = options && options.unit || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n/**\r\n * Parse the string value into an integer in bytes.\r\n *\r\n * If no unit is given, it is assumed the value is in bytes.\r\n *\r\n * @param {number|string} val\r\n *\r\n * @returns {number|null}\r\n * @public\r\n */\n\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  } // Test if the string passed is valid\n\n\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b';\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJieXRlcyIsImZvcm1hdCIsInBhcnNlIiwiZm9ybWF0VGhvdXNhbmRzUmVnRXhwIiwiZm9ybWF0RGVjaW1hbHNSZWdFeHAiLCJtYXAiLCJiIiwia2IiLCJtYiIsImdiIiwidGIiLCJNYXRoIiwicG93IiwicGIiLCJwYXJzZVJlZ0V4cCIsInZhbHVlIiwib3B0aW9ucyIsIk51bWJlciIsImlzRmluaXRlIiwibWFnIiwiYWJzIiwidGhvdXNhbmRzU2VwYXJhdG9yIiwidW5pdFNlcGFyYXRvciIsImRlY2ltYWxQbGFjZXMiLCJ1bmRlZmluZWQiLCJmaXhlZERlY2ltYWxzIiwiQm9vbGVhbiIsInVuaXQiLCJ0b0xvd2VyQ2FzZSIsInZhbCIsInN0ciIsInRvRml4ZWQiLCJyZXBsYWNlIiwiaXNOYU4iLCJyZXN1bHRzIiwiZXhlYyIsImZsb2F0VmFsdWUiLCJwYXJzZUludCIsInBhcnNlRmxvYXQiLCJmbG9vciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxLQUFqQjtBQUNBRixNQUFNLENBQUNDLE9BQVAsQ0FBZUUsTUFBZixHQUF3QkEsTUFBeEI7QUFDQUgsTUFBTSxDQUFDQyxPQUFQLENBQWVHLEtBQWYsR0FBdUJBLEtBQXZCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUMscUJBQXFCLEdBQUcsdUJBQTVCO0FBRUEsSUFBSUMsb0JBQW9CLEdBQUcsdUJBQTNCO0FBRUEsSUFBSUMsR0FBRyxHQUFHO0FBQ1JDLEVBQUFBLENBQUMsRUFBRyxDQURJO0FBRVJDLEVBQUFBLEVBQUUsRUFBRSxLQUFLLEVBRkQ7QUFHUkMsRUFBQUEsRUFBRSxFQUFFLEtBQUssRUFIRDtBQUlSQyxFQUFBQSxFQUFFLEVBQUUsS0FBSyxFQUpEO0FBS1JDLEVBQUFBLEVBQUUs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c3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxieXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGJ5dGVzXHJcbiAqIENvcHlyaWdodChjKSAyMDEyLTIwMTQgVEogSG9sb3dheWNodWtcclxuICogQ29weXJpZ2h0KGMpIDIwMTUgSmVkIFdhdHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG4vKipcclxuICogTW9kdWxlIGV4cG9ydHMuXHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGJ5dGVzO1xyXG5tb2R1bGUuZXhwb3J0cy5mb3JtYXQgPSBmb3JtYXQ7XHJcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2U7XHJcblxyXG4vKipcclxuICogTW9kdWxlIHZhcmlhYmxlcy5cclxuICogQHByaXZhdGVcclxuICovXHJcblxyXG52YXIgZm9ybWF0VGhvdXNhbmRzUmVnRXhwID0gL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2c7XHJcblxyXG52YXIgZm9ybWF0RGVjaW1hbHNSZWdFeHAgPSAvKD86XFwuMCp8KFxcLlteMF0rKTArKSQvO1xyXG5cclxudmFyIG1hcCA9IHtcclxuICBiOiAgMSxcclxuICBrYjogMSA8PCAxMCxcclxuICBtYjogMSA8PCAyMCxcclxuICBnYjogMSA8PCAzMCxcclxuICB0YjogTWF0aC5wb3coMTAyNCwgNCksXHJcbiAgcGI6IE1hdGgucG93KDEwMjQsIDUpLFxyXG59O1xyXG5cclxudmFyIHBhcnNlUmVnRXhwID0gL14oKC18XFwrKT8oXFxkKyg/OlxcLlxcZCspPykpICooa2J8bWJ8Z2J8dGJ8cGIpJC9pO1xyXG5cclxuLyoqXHJcbiAqIENvbnZlcnQgdGhlIGdpdmVuIHZhbHVlIGluIGJ5dGVzIGludG8gYSBzdHJpbmcgb3IgcGFyc2UgdG8gc3RyaW5nIHRvIGFuIGludGVnZXIgaW4gYnl0ZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gdmFsdWVcclxuICogQHBhcmFtIHt7XHJcbiAqICBjYXNlOiBbc3RyaW5nXSxcclxuICogIGRlY2ltYWxQbGFjZXM6IFtudW1iZXJdXHJcbiAqICBmaXhlZERlY2ltYWxzOiBbYm9vbGVhbl1cclxuICogIHRob3VzYW5kc1NlcGFyYXRvcjogW3N0cmluZ11cclxuICogIHVuaXRTZXBhcmF0b3I6IFtzdHJpbmddXHJcbiAqICB9fSBbb3B0aW9uc10gYnl0ZXMgb3B0aW9ucy5cclxuICpcclxuICogQHJldHVybnMge3N0cmluZ3xudW1iZXJ8bnVsbH1cclxuICovXHJcblxyXG5mdW5jdGlvbiBieXRlcyh2YWx1ZSwgb3B0aW9ucykge1xyXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XHJcbiAgICByZXR1cm4gcGFyc2UodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcclxuICAgIHJldHVybiBmb3JtYXQodmFsdWUsIG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBGb3JtYXQgdGhlIGdpdmVuIHZhbHVlIGluIGJ5dGVzIGludG8gYSBzdHJpbmcuXHJcbiAqXHJcbiAqIElmIHRoZSB2YWx1ZSBpcyBuZWdhdGl2ZSwgaXQgaXMga2VwdCBhcyBzdWNoLiBJZiBpdCBpcyBhIGZsb2F0LFxyXG4gKiBpdCBpcyByb3VuZGVkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcclxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxyXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuZGVjaW1hbFBsYWNlcz0yXVxyXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuZml4ZWREZWNpbWFscz1mYWxzZV1cclxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnRob3VzYW5kc1NlcGFyYXRvcj1dXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy51bml0PV1cclxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXRTZXBhcmF0b3I9XVxyXG4gKlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9XHJcbiAqIEBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBmb3JtYXQodmFsdWUsIG9wdGlvbnMpIHtcclxuICBpZiAoIU51bWJlci5pc0Zpbml0ZSh2YWx1ZSkpIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgdmFyIG1hZyA9IE1hdGguYWJzKHZhbHVlKTtcclxuICB2YXIgdGhvdXNhbmRzU2VwYXJhdG9yID0gKG9wdGlvbnMgJiYgb3B0aW9ucy50aG91c2FuZHNTZXBhcmF0b3IpIHx8ICcnO1xyXG4gIHZhciB1bml0U2VwYXJhdG9yID0gKG9wdGlvbnMgJiYgb3B0aW9ucy51bml0U2VwYXJhdG9yKSB8fCAnJztcclxuICB2YXIgZGVjaW1hbFBsYWNlcyA9IChvcHRpb25zICYmIG9wdGlvbnMuZGVjaW1hbFBsYWNlcyAhPT0gdW5kZWZpbmVkKSA/IG9wdGlvbnMuZGVjaW1hbFBsYWNlcyA6IDI7XHJcbiAgdmFyIGZpeGVkRGVjaW1hbHMgPSBCb29sZWFuKG9wdGlvbnMgJiYgb3B0aW9ucy5maXhlZERlY2ltYWxzKTtcclxuICB2YXIgdW5pdCA9IChvcHRpb25zICYmIG9wdGlvbnMudW5pdCkgfHwgJyc7XHJcblxyXG4gIGlmICghdW5pdCB8fCAhbWFwW3VuaXQudG9Mb3dlckNhc2UoKV0pIHtcclxuICAgIGlmIChtYWcgPj0gbWFwLnBiKSB7XHJcbiAgICAgIHVuaXQgPSAnUEInO1xyXG4gICAgfSBlbHNlIGlmIChtYWcgPj0gbWFwLnRiKSB7XHJcbiAgICAgIHVuaXQgPSAnVEInO1xyXG4gICAgfSBlbHNlIGlmIChtYWcgPj0gbWFwLmdiKSB7XHJcbiAgICAgIHVuaXQgPSAnR0InO1xyXG4gICAgfSBlbHNlIGlmIChtYWcgPj0gbWFwLm1iKSB7XHJcbiAgICAgIHVuaXQgPSAnTUInO1xyXG4gICAgfSBlbHNlIGlmIChtYWcgPj0gbWFwLmtiKSB7XHJcbiAgICAgIHVuaXQgPSAnS0InO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdW5pdCA9ICdCJztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciB2YWwgPSB2YWx1ZSAvIG1hcFt1bml0LnRvTG93ZXJDYXNlKCldO1xyXG4gIHZhciBzdHIgPSB2YWwudG9GaXhlZChkZWNpbWFsUGxhY2VzKTtcclxuXHJcbiAgaWYgKCFmaXhlZERlY2ltYWxzKSB7XHJcbiAgICBzdHIgPSBzdHIucmVwbGFjZShmb3JtYXREZWNpbWFsc1JlZ0V4cCwgJyQxJyk7XHJcbiAgfVxyXG5cclxuICBpZiAodGhvdXNhbmRzU2VwYXJhdG9yKSB7XHJcbiAgICBzdHIgPSBzdHIucmVwbGFjZShmb3JtYXRUaG91c2FuZHNSZWdFeHAsIHRob3VzYW5kc1NlcGFyYXRvcik7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gc3RyICsgdW5pdFNlcGFyYXRvciArIHVuaXQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQYXJzZSB0aGUgc3RyaW5nIHZhbHVlIGludG8gYW4gaW50ZWdlciBpbiBieXRlcy5cclxuICpcclxuICogSWYgbm8gdW5pdCBpcyBnaXZlbiwgaXQgaXMgYXNzdW1lZCB0aGUgdmFsdWUgaXMgaW4gYnl0ZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gdmFsXHJcbiAqXHJcbiAqIEByZXR1cm5zIHtudW1iZXJ8bnVsbH1cclxuICogQHB1YmxpY1xyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHBhcnNlKHZhbCkge1xyXG4gIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsKSkge1xyXG4gICAgcmV0dXJuIHZhbDtcclxuICB9XHJcblxyXG4gIGlmICh0eXBlb2YgdmFsICE9PSAnc3RyaW5nJykge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICAvLyBUZXN0IGlmIHRoZSBzdHJpbmcgcGFzc2VkIGlzIHZhbGlkXHJcbiAgdmFyIHJlc3VsdHMgPSBwYXJzZVJlZ0V4cC5leGVjKHZhbCk7XHJcbiAgdmFyIGZsb2F0VmFsdWU7XHJcbiAgdmFyIHVuaXQgPSAnYic7XHJcblxyXG4gIGlmICghcmVzdWx0cykge1xyXG4gICAgLy8gTm90aGluZyBjb3VsZCBiZSBleHRyYWN0ZWQgZnJvbSB0aGUgZ2l2ZW4gc3RyaW5nXHJcbiAgICBmbG9hdFZhbHVlID0gcGFyc2VJbnQodmFsLCAxMCk7XHJcbiAgICB1bml0ID0gJ2InXHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIFJldHJpZXZlIHRoZSB2YWx1ZSBhbmQgdGhlIHVuaXRcclxuICAgIGZsb2F0VmFsdWUgPSBwYXJzZUZsb2F0KHJlc3VsdHNbMV0pO1xyXG4gICAgdW5pdCA9IHJlc3VsdHNbNF0udG9Mb3dlckNhc2UoKTtcclxuICB9XHJcblxyXG4gIHJldHVybiBNYXRoLmZsb29yKG1hcFt1bml0XSAqIGZsb2F0VmFsdWUpO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "bytes",
        "format",
        "parse",
        "formatThousandsRegExp",
        "formatDecimalsRegExp",
        "map",
        "b",
        "kb",
        "mb",
        "gb",
        "tb",
        "Math",
        "pow",
        "pb",
        "parseRegExp",
        "value",
        "options",
        "Number",
        "isFinite",
        "mag",
        "abs",
        "thousandsSeparator",
        "unitSeparator",
        "decimalPlaces",
        "undefined",
        "fixedDecimals",
        "Boolean",
        "unit",
        "toLowerCase",
        "val",
        "str",
        "toFixed",
        "replace",
        "isNaN",
        "results",
        "exec",
        "floatValue",
        "parseInt",
        "parseFloat",
        "floor"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\bytes\\",
      "sourcesContent": [
        "/*!\r\n * bytes\r\n * Copyright(c) 2012-2014 TJ Holowaychuk\r\n * Copyright(c) 2015 Jed Watson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = bytes;\r\nmodule.exports.format = format;\r\nmodule.exports.parse = parse;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n\r\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\r\n\r\nvar map = {\r\n  b:  1,\r\n  kb: 1 << 10,\r\n  mb: 1 << 20,\r\n  gb: 1 << 30,\r\n  tb: Math.pow(1024, 4),\r\n  pb: Math.pow(1024, 5),\r\n};\r\n\r\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\r\n\r\n/**\r\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\r\n *\r\n * @param {string|number} value\r\n * @param {{\r\n *  case: [string],\r\n *  decimalPlaces: [number]\r\n *  fixedDecimals: [boolean]\r\n *  thousandsSeparator: [string]\r\n *  unitSeparator: [string]\r\n *  }} [options] bytes options.\r\n *\r\n * @returns {string|number|null}\r\n */\r\n\r\nfunction bytes(value, options) {\r\n  if (typeof value === 'string') {\r\n    return parse(value);\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return format(value, options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Format the given value in bytes into a string.\r\n *\r\n * If the value is negative, it is kept as such. If it is a float,\r\n * it is rounded.\r\n *\r\n * @param {number} value\r\n * @param {object} [options]\r\n * @param {number} [options.decimalPlaces=2]\r\n * @param {number} [options.fixedDecimals=false]\r\n * @param {string} [options.thousandsSeparator=]\r\n * @param {string} [options.unit=]\r\n * @param {string} [options.unitSeparator=]\r\n *\r\n * @returns {string|null}\r\n * @public\r\n */\r\n\r\nfunction format(value, options) {\r\n  if (!Number.isFinite(value)) {\r\n    return null;\r\n  }\r\n\r\n  var mag = Math.abs(value);\r\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\r\n  var unitSeparator = (options && options.unitSeparator) || '';\r\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\r\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\r\n  var unit = (options && options.unit) || '';\r\n\r\n  if (!unit || !map[unit.toLowerCase()]) {\r\n    if (mag >= map.pb) {\r\n      unit = 'PB';\r\n    } else if (mag >= map.tb) {\r\n      unit = 'TB';\r\n    } else if (mag >= map.gb) {\r\n      unit = 'GB';\r\n    } else if (mag >= map.mb) {\r\n      unit = 'MB';\r\n    } else if (mag >= map.kb) {\r\n      unit = 'KB';\r\n    } else {\r\n      unit = 'B';\r\n    }\r\n  }\r\n\r\n  var val = value / map[unit.toLowerCase()];\r\n  var str = val.toFixed(decimalPlaces);\r\n\r\n  if (!fixedDecimals) {\r\n    str = str.replace(formatDecimalsRegExp, '$1');\r\n  }\r\n\r\n  if (thousandsSeparator) {\r\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\r\n  }\r\n\r\n  return str + unitSeparator + unit;\r\n}\r\n\r\n/**\r\n * Parse the string value into an integer in bytes.\r\n *\r\n * If no unit is given, it is assumed the value is in bytes.\r\n *\r\n * @param {number|string} val\r\n *\r\n * @returns {number|null}\r\n * @public\r\n */\r\n\r\nfunction parse(val) {\r\n  if (typeof val === 'number' && !isNaN(val)) {\r\n    return val;\r\n  }\r\n\r\n  if (typeof val !== 'string') {\r\n    return null;\r\n  }\r\n\r\n  // Test if the string passed is valid\r\n  var results = parseRegExp.exec(val);\r\n  var floatValue;\r\n  var unit = 'b';\r\n\r\n  if (!results) {\r\n    // Nothing could be extracted from the given string\r\n    floatValue = parseInt(val, 10);\r\n    unit = 'b'\r\n  } else {\r\n    // Retrieve the value and the unit\r\n    floatValue = parseFloat(results[1]);\r\n    unit = results[4].toLowerCase();\r\n  }\r\n\r\n  return Math.floor(map[unit] * floatValue);\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210915
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\read.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\read.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\read.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\read.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\",
        "sourceFileName": "read.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar createError = require('http-errors');\n\nvar getBody = require('raw-body');\n\nvar iconv = require('iconv-lite');\n\nvar onFinished = require('on-finished');\n\nvar zlib = require('zlib');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = read;\n/**\r\n * Read a request into a buffer and parse.\r\n *\r\n * @param {object} req\r\n * @param {object} res\r\n * @param {function} next\r\n * @param {function} parse\r\n * @param {function} debug\r\n * @param {object} options\r\n * @private\r\n */\n\nfunction read(req, res, next, parse, debug, options) {\n  var length;\n  var opts = options;\n  var stream; // flag as parsed\n\n  req._body = true; // read options\n\n  var encoding = opts.encoding !== null ? opts.encoding : null;\n  var verify = opts.verify;\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate);\n    length = stream.length;\n    stream.length = undefined;\n  } catch (err) {\n    return next(err);\n  } // set raw-body options\n\n\n  opts.length = length;\n  opts.encoding = verify ? null : encoding; // assert charset is supported\n\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }));\n  } // read body\n\n\n  debug('read body');\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error;\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        });\n      } else {\n        // set status code on error\n        _error = createError(400, error);\n      } // read off entire request\n\n\n      stream.resume();\n      onFinished(req, function onfinished() {\n        next(createError(400, _error));\n      });\n      return;\n    } // verify\n\n\n    if (verify) {\n      try {\n        debug('verify body');\n        verify(req, res, body, encoding);\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }));\n        return;\n      }\n    } // parse\n\n\n    var str = body;\n\n    try {\n      debug('parse body');\n      str = typeof body !== 'string' && encoding !== null ? iconv.decode(body, encoding) : body;\n      req.body = parse(str);\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }));\n      return;\n    }\n\n    next();\n  });\n}\n/**\r\n * Get the content stream of the request.\r\n *\r\n * @param {object} req\r\n * @param {function} debug\r\n * @param {boolean} [inflate=true]\r\n * @return {object}\r\n * @api private\r\n */\n\n\nfunction contentstream(req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase();\n  var length = req.headers['content-length'];\n  var stream;\n  debug('content-encoding \"%s\"', encoding);\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    });\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate();\n      debug('inflate body');\n      req.pipe(stream);\n      break;\n\n    case 'gzip':\n      stream = zlib.createGunzip();\n      debug('gunzip body');\n      req.pipe(stream);\n      break;\n\n    case 'identity':\n      stream = req;\n      stream.length = length;\n      break;\n\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      });\n  }\n\n  return stream;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "read.js"
      ],
      "names": [
        "createError",
        "require",
        "getBody",
        "iconv",
        "onFinished",
        "zlib",
        "module",
        "exports",
        "read",
        "req",
        "res",
        "next",
        "parse",
        "debug",
        "options",
        "length",
        "opts",
        "stream",
        "_body",
        "encoding",
        "verify",
        "contentstream",
        "inflate",
        "undefined",
        "err",
        "encodingExists",
        "toUpperCase",
        "charset",
        "toLowerCase",
        "type",
        "error",
        "body",
        "_error",
        "resume",
        "onfinished",
        "str",
        "decode",
        "headers",
        "createInflate",
        "pipe",
        "createGunzip"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\",
      "sourcesContent": [
        "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar createError = require('http-errors')\r\nvar getBody = require('raw-body')\r\nvar iconv = require('iconv-lite')\r\nvar onFinished = require('on-finished')\r\nvar zlib = require('zlib')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = read\r\n\r\n/**\r\n * Read a request into a buffer and parse.\r\n *\r\n * @param {object} req\r\n * @param {object} res\r\n * @param {function} next\r\n * @param {function} parse\r\n * @param {function} debug\r\n * @param {object} options\r\n * @private\r\n */\r\n\r\nfunction read (req, res, next, parse, debug, options) {\r\n  var length\r\n  var opts = options\r\n  var stream\r\n\r\n  // flag as parsed\r\n  req._body = true\r\n\r\n  // read options\r\n  var encoding = opts.encoding !== null\r\n    ? opts.encoding\r\n    : null\r\n  var verify = opts.verify\r\n\r\n  try {\r\n    // get the content stream\r\n    stream = contentstream(req, debug, opts.inflate)\r\n    length = stream.length\r\n    stream.length = undefined\r\n  } catch (err) {\r\n    return next(err)\r\n  }\r\n\r\n  // set raw-body options\r\n  opts.length = length\r\n  opts.encoding = verify\r\n    ? null\r\n    : encoding\r\n\r\n  // assert charset is supported\r\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\r\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\r\n      charset: encoding.toLowerCase(),\r\n      type: 'charset.unsupported'\r\n    }))\r\n  }\r\n\r\n  // read body\r\n  debug('read body')\r\n  getBody(stream, opts, function (error, body) {\r\n    if (error) {\r\n      var _error\r\n\r\n      if (error.type === 'encoding.unsupported') {\r\n        // echo back charset\r\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\r\n          charset: encoding.toLowerCase(),\r\n          type: 'charset.unsupported'\r\n        })\r\n      } else {\r\n        // set status code on error\r\n        _error = createError(400, error)\r\n      }\r\n\r\n      // read off entire request\r\n      stream.resume()\r\n      onFinished(req, function onfinished () {\r\n        next(createError(400, _error))\r\n      })\r\n      return\r\n    }\r\n\r\n    // verify\r\n    if (verify) {\r\n      try {\r\n        debug('verify body')\r\n        verify(req, res, body, encoding)\r\n      } catch (err) {\r\n        next(createError(403, err, {\r\n          body: body,\r\n          type: err.type || 'entity.verify.failed'\r\n        }))\r\n        return\r\n      }\r\n    }\r\n\r\n    // parse\r\n    var str = body\r\n    try {\r\n      debug('parse body')\r\n      str = typeof body !== 'string' && encoding !== null\r\n        ? iconv.decode(body, encoding)\r\n        : body\r\n      req.body = parse(str)\r\n    } catch (err) {\r\n      next(createError(400, err, {\r\n        body: str,\r\n        type: err.type || 'entity.parse.failed'\r\n      }))\r\n      return\r\n    }\r\n\r\n    next()\r\n  })\r\n}\r\n\r\n/**\r\n * Get the content stream of the request.\r\n *\r\n * @param {object} req\r\n * @param {function} debug\r\n * @param {boolean} [inflate=true]\r\n * @return {object}\r\n * @api private\r\n */\r\n\r\nfunction contentstream (req, debug, inflate) {\r\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\r\n  var length = req.headers['content-length']\r\n  var stream\r\n\r\n  debug('content-encoding \"%s\"', encoding)\r\n\r\n  if (inflate === false && encoding !== 'identity') {\r\n    throw createError(415, 'content encoding unsupported', {\r\n      encoding: encoding,\r\n      type: 'encoding.unsupported'\r\n    })\r\n  }\r\n\r\n  switch (encoding) {\r\n    case 'deflate':\r\n      stream = zlib.createInflate()\r\n      debug('inflate body')\r\n      req.pipe(stream)\r\n      break\r\n    case 'gzip':\r\n      stream = zlib.createGunzip()\r\n      debug('gunzip body')\r\n      req.pipe(stream)\r\n      break\r\n    case 'identity':\r\n      stream = req\r\n      stream.length = length\r\n      break\r\n    default:\r\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\r\n        encoding: encoding,\r\n        type: 'encoding.unsupported'\r\n      })\r\n  }\r\n\r\n  return stream\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210697
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\raw-body\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\raw-body\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\raw-body\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\raw-body\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\raw-body\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\raw-body\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\raw-body\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * raw-body\r\n * Copyright(c) 2013-2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar bytes = require('bytes');\n\nvar createError = require('http-errors');\n\nvar iconv = require('iconv-lite');\n\nvar unpipe = require('unpipe');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = getRawBody;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /;\n/**\r\n * Get the decoder for a given encoding.\r\n *\r\n * @param {string} encoding\r\n * @private\r\n */\n\nfunction getDecoder(encoding) {\n  if (!encoding) return null;\n\n  try {\n    return iconv.getDecoder(encoding);\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e; // the encoding was not found\n\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    });\n  }\n}\n/**\r\n * Get the raw body of a stream (typically HTTP).\r\n *\r\n * @param {object} stream\r\n * @param {object|string|function} [options]\r\n * @param {function} [callback]\r\n * @public\r\n */\n\n\nfunction getRawBody(stream, options, callback) {\n  var done = callback;\n  var opts = options || {};\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    };\n  }\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // validate callback is a function, if provided\n\n\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function');\n  } // require the callback without promises\n\n\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required');\n  } // get encoding\n\n\n  var encoding = opts.encoding !== true ? opts.encoding : 'utf-8'; // convert the limit to an integer\n\n  var limit = bytes.parse(opts.limit); // convert the expected length to an integer\n\n  var length = opts.length != null && !isNaN(opts.length) ? parseInt(opts.length, 10) : null;\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, done);\n  }\n\n  return new Promise(function executor(resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead(err, buf) {\n      if (err) return reject(err);\n      resolve(buf);\n    });\n  });\n}\n/**\r\n * Halt a stream.\r\n *\r\n * @param {Object} stream\r\n * @private\r\n */\n\n\nfunction halt(stream) {\n  // unpipe everything from the stream\n  unpipe(stream); // pause stream\n\n  if (typeof stream.pause === 'function') {\n    stream.pause();\n  }\n}\n/**\r\n * Read the data from the stream.\r\n *\r\n * @param {object} stream\r\n * @param {string} encoding\r\n * @param {number} length\r\n * @param {number} limit\r\n * @param {function} callback\r\n * @public\r\n */\n\n\nfunction readStream(stream, encoding, length, limit, callback) {\n  var complete = false;\n  var sync = true; // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }));\n  } // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n\n\n  var state = stream._readableState;\n\n  if (stream._decoder || state && (state.encoding || state.decoder)) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }));\n  }\n\n  var received = 0;\n  var decoder;\n\n  try {\n    decoder = getDecoder(encoding);\n  } catch (err) {\n    return done(err);\n  }\n\n  var buffer = decoder ? '' : []; // attach listeners\n\n  stream.on('aborted', onAborted);\n  stream.on('close', cleanup);\n  stream.on('data', onData);\n  stream.on('end', onEnd);\n  stream.on('error', onEnd); // mark sync section complete\n\n  sync = false;\n\n  function done() {\n    var args = new Array(arguments.length); // copy arguments\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    } // mark complete\n\n\n    complete = true;\n\n    if (sync) {\n      process.nextTick(invokeCallback);\n    } else {\n      invokeCallback();\n    }\n\n    function invokeCallback() {\n      cleanup();\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream);\n      }\n\n      callback.apply(null, args);\n    }\n  }\n\n  function onAborted() {\n    if (complete) return;\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }));\n  }\n\n  function onData(chunk) {\n    if (complete) return;\n    received += chunk.length;\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }));\n    } else if (decoder) {\n      buffer += decoder.write(chunk);\n    } else {\n      buffer.push(chunk);\n    }\n  }\n\n  function onEnd(err) {\n    if (complete) return;\n    if (err) return done(err);\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }));\n    } else {\n      var string = decoder ? buffer + (decoder.end() || '') : Buffer.concat(buffer);\n      done(null, string);\n    }\n  }\n\n  function cleanup() {\n    buffer = null;\n    stream.removeListener('aborted', onAborted);\n    stream.removeListener('data', onData);\n    stream.removeListener('end', onEnd);\n    stream.removeListener('error', onEnd);\n    stream.removeListener('close', cleanup);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "bytes",
        "require",
        "createError",
        "iconv",
        "unpipe",
        "module",
        "exports",
        "getRawBody",
        "ICONV_ENCODING_MESSAGE_REGEXP",
        "getDecoder",
        "encoding",
        "e",
        "test",
        "message",
        "type",
        "stream",
        "options",
        "callback",
        "done",
        "opts",
        "undefined",
        "TypeError",
        "global",
        "Promise",
        "limit",
        "parse",
        "length",
        "isNaN",
        "parseInt",
        "readStream",
        "executor",
        "resolve",
        "reject",
        "onRead",
        "err",
        "buf",
        "halt",
        "pause",
        "complete",
        "sync",
        "expected",
        "state",
        "_readableState",
        "_decoder",
        "decoder",
        "received",
        "buffer",
        "on",
        "onAborted",
        "cleanup",
        "onData",
        "onEnd",
        "args",
        "Array",
        "arguments",
        "i",
        "process",
        "nextTick",
        "invokeCallback",
        "apply",
        "code",
        "chunk",
        "write",
        "push",
        "string",
        "end",
        "Buffer",
        "concat",
        "removeListener"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\raw-body\\",
      "sourcesContent": [
        "/*!\r\n * raw-body\r\n * Copyright(c) 2013-2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar createError = require('http-errors')\r\nvar iconv = require('iconv-lite')\r\nvar unpipe = require('unpipe')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = getRawBody\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\r\n\r\n/**\r\n * Get the decoder for a given encoding.\r\n *\r\n * @param {string} encoding\r\n * @private\r\n */\r\n\r\nfunction getDecoder (encoding) {\r\n  if (!encoding) return null\r\n\r\n  try {\r\n    return iconv.getDecoder(encoding)\r\n  } catch (e) {\r\n    // error getting decoder\r\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\r\n\r\n    // the encoding was not found\r\n    throw createError(415, 'specified encoding unsupported', {\r\n      encoding: encoding,\r\n      type: 'encoding.unsupported'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the raw body of a stream (typically HTTP).\r\n *\r\n * @param {object} stream\r\n * @param {object|string|function} [options]\r\n * @param {function} [callback]\r\n * @public\r\n */\r\n\r\nfunction getRawBody (stream, options, callback) {\r\n  var done = callback\r\n  var opts = options || {}\r\n\r\n  if (options === true || typeof options === 'string') {\r\n    // short cut for encoding\r\n    opts = {\r\n      encoding: options\r\n    }\r\n  }\r\n\r\n  if (typeof options === 'function') {\r\n    done = options\r\n    opts = {}\r\n  }\r\n\r\n  // validate callback is a function, if provided\r\n  if (done !== undefined && typeof done !== 'function') {\r\n    throw new TypeError('argument callback must be a function')\r\n  }\r\n\r\n  // require the callback without promises\r\n  if (!done && !global.Promise) {\r\n    throw new TypeError('argument callback is required')\r\n  }\r\n\r\n  // get encoding\r\n  var encoding = opts.encoding !== true\r\n    ? opts.encoding\r\n    : 'utf-8'\r\n\r\n  // convert the limit to an integer\r\n  var limit = bytes.parse(opts.limit)\r\n\r\n  // convert the expected length to an integer\r\n  var length = opts.length != null && !isNaN(opts.length)\r\n    ? parseInt(opts.length, 10)\r\n    : null\r\n\r\n  if (done) {\r\n    // classic callback style\r\n    return readStream(stream, encoding, length, limit, done)\r\n  }\r\n\r\n  return new Promise(function executor (resolve, reject) {\r\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\r\n      if (err) return reject(err)\r\n      resolve(buf)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Halt a stream.\r\n *\r\n * @param {Object} stream\r\n * @private\r\n */\r\n\r\nfunction halt (stream) {\r\n  // unpipe everything from the stream\r\n  unpipe(stream)\r\n\r\n  // pause stream\r\n  if (typeof stream.pause === 'function') {\r\n    stream.pause()\r\n  }\r\n}\r\n\r\n/**\r\n * Read the data from the stream.\r\n *\r\n * @param {object} stream\r\n * @param {string} encoding\r\n * @param {number} length\r\n * @param {number} limit\r\n * @param {function} callback\r\n * @public\r\n */\r\n\r\nfunction readStream (stream, encoding, length, limit, callback) {\r\n  var complete = false\r\n  var sync = true\r\n\r\n  // check the length and limit options.\r\n  // note: we intentionally leave the stream paused,\r\n  // so users should handle the stream themselves.\r\n  if (limit !== null && length !== null && length > limit) {\r\n    return done(createError(413, 'request entity too large', {\r\n      expected: length,\r\n      length: length,\r\n      limit: limit,\r\n      type: 'entity.too.large'\r\n    }))\r\n  }\r\n\r\n  // streams1: assert request encoding is buffer.\r\n  // streams2+: assert the stream encoding is buffer.\r\n  //   stream._decoder: streams1\r\n  //   state.encoding: streams2\r\n  //   state.decoder: streams2, specifically < 0.10.6\r\n  var state = stream._readableState\r\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\r\n    // developer error\r\n    return done(createError(500, 'stream encoding should not be set', {\r\n      type: 'stream.encoding.set'\r\n    }))\r\n  }\r\n\r\n  var received = 0\r\n  var decoder\r\n\r\n  try {\r\n    decoder = getDecoder(encoding)\r\n  } catch (err) {\r\n    return done(err)\r\n  }\r\n\r\n  var buffer = decoder\r\n    ? ''\r\n    : []\r\n\r\n  // attach listeners\r\n  stream.on('aborted', onAborted)\r\n  stream.on('close', cleanup)\r\n  stream.on('data', onData)\r\n  stream.on('end', onEnd)\r\n  stream.on('error', onEnd)\r\n\r\n  // mark sync section complete\r\n  sync = false\r\n\r\n  function done () {\r\n    var args = new Array(arguments.length)\r\n\r\n    // copy arguments\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n\r\n    // mark complete\r\n    complete = true\r\n\r\n    if (sync) {\r\n      process.nextTick(invokeCallback)\r\n    } else {\r\n      invokeCallback()\r\n    }\r\n\r\n    function invokeCallback () {\r\n      cleanup()\r\n\r\n      if (args[0]) {\r\n        // halt the stream on error\r\n        halt(stream)\r\n      }\r\n\r\n      callback.apply(null, args)\r\n    }\r\n  }\r\n\r\n  function onAborted () {\r\n    if (complete) return\r\n\r\n    done(createError(400, 'request aborted', {\r\n      code: 'ECONNABORTED',\r\n      expected: length,\r\n      length: length,\r\n      received: received,\r\n      type: 'request.aborted'\r\n    }))\r\n  }\r\n\r\n  function onData (chunk) {\r\n    if (complete) return\r\n\r\n    received += chunk.length\r\n\r\n    if (limit !== null && received > limit) {\r\n      done(createError(413, 'request entity too large', {\r\n        limit: limit,\r\n        received: received,\r\n        type: 'entity.too.large'\r\n      }))\r\n    } else if (decoder) {\r\n      buffer += decoder.write(chunk)\r\n    } else {\r\n      buffer.push(chunk)\r\n    }\r\n  }\r\n\r\n  function onEnd (err) {\r\n    if (complete) return\r\n    if (err) return done(err)\r\n\r\n    if (length !== null && received !== length) {\r\n      done(createError(400, 'request size did not match content length', {\r\n        expected: length,\r\n        length: length,\r\n        received: received,\r\n        type: 'request.size.invalid'\r\n      }))\r\n    } else {\r\n      var string = decoder\r\n        ? buffer + (decoder.end() || '')\r\n        : Buffer.concat(buffer)\r\n      done(null, string)\r\n    }\r\n  }\r\n\r\n  function cleanup () {\r\n    buffer = null\r\n\r\n    stream.removeListener('aborted', onAborted)\r\n    stream.removeListener('data', onData)\r\n    stream.removeListener('end', onEnd)\r\n    stream.removeListener('error', onEnd)\r\n    stream.removeListener('close', cleanup)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211835
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\"; // Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports; // All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\n\n\niconv.encodings = null; // Characters emitted in case of error.\n\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?'; // Public API.\n\niconv.encode = function encode(str, encoding, options) {\n  str = \"\" + (str || \"\"); // Ensure string.\n\n  var encoder = iconv.getEncoder(encoding, options);\n  var res = encoder.write(str);\n  var trail = encoder.end();\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n\niconv.decode = function decode(buf, encoding, options) {\n  if (typeof buf === 'string') {\n    if (!iconv.skipDecodeWarning) {\n      console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n      iconv.skipDecodeWarning = true;\n    }\n\n    buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n  }\n\n  var decoder = iconv.getDecoder(encoding, options);\n  var res = decoder.write(buf);\n  var trail = decoder.end();\n  return trail ? res + trail : res;\n};\n\niconv.encodingExists = function encodingExists(enc) {\n  try {\n    iconv.getCodec(enc);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}; // Legacy aliases to convert functions\n\n\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode; // Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\n\niconv._codecDataCache = {};\n\niconv.getCodec = function getCodec(encoding) {\n  if (!iconv.encodings) iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n\n  var enc = iconv._canonicalizeEncoding(encoding); // Traverse iconv.encodings to find actual codec.\n\n\n  var codecOptions = {};\n\n  while (true) {\n    var codec = iconv._codecDataCache[enc];\n    if (codec) return codec;\n    var codecDef = iconv.encodings[enc];\n\n    switch (typeof codecDef) {\n      case \"string\":\n        // Direct alias to other encoding.\n        enc = codecDef;\n        break;\n\n      case \"object\":\n        // Alias with options. Can be layered.\n        for (var key in codecDef) codecOptions[key] = codecDef[key];\n\n        if (!codecOptions.encodingName) codecOptions.encodingName = enc;\n        enc = codecDef.type;\n        break;\n\n      case \"function\":\n        // Codec itself.\n        if (!codecOptions.encodingName) codecOptions.encodingName = enc; // The codec function must load all tables and return object with .encoder and .decoder methods.\n        // It'll be called only once (for each different options object).\n\n        codec = new codecDef(codecOptions, iconv);\n        iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n\n        return codec;\n\n      default:\n        throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\" + enc + \"')\");\n    }\n  }\n};\n\niconv._canonicalizeEncoding = function (encoding) {\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  return ('' + encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n};\n\niconv.getEncoder = function getEncoder(encoding, options) {\n  var codec = iconv.getCodec(encoding),\n      encoder = new codec.encoder(options, codec);\n  if (codec.bomAware && options && options.addBOM) encoder = new bomHandling.PrependBOM(encoder, options);\n  return encoder;\n};\n\niconv.getDecoder = function getDecoder(encoding, options) {\n  var codec = iconv.getCodec(encoding),\n      decoder = new codec.decoder(options, codec);\n  if (codec.bomAware && !(options && options.stripBOM === false)) decoder = new bomHandling.StripBOM(decoder, options);\n  return decoder;\n}; // Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\n\n\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\n\nif (nodeVer) {\n  // Load streaming support in Node v0.10+\n  var nodeVerArr = nodeVer.split(\".\").map(Number);\n\n  if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n    require(\"./streams\")(iconv);\n  } // Load Node primitive extensions.\n\n\n  require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n  console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Buffer",
        "require",
        "bomHandling",
        "iconv",
        "module",
        "exports",
        "encodings",
        "defaultCharUnicode",
        "defaultCharSingleByte",
        "encode",
        "str",
        "encoding",
        "options",
        "encoder",
        "getEncoder",
        "res",
        "write",
        "trail",
        "end",
        "length",
        "concat",
        "decode",
        "buf",
        "skipDecodeWarning",
        "console",
        "error",
        "from",
        "decoder",
        "getDecoder",
        "encodingExists",
        "enc",
        "getCodec",
        "e",
        "toEncoding",
        "fromEncoding",
        "_codecDataCache",
        "_canonicalizeEncoding",
        "codecOptions",
        "codec",
        "codecDef",
        "key",
        "encodingName",
        "type",
        "Error",
        "toLowerCase",
        "replace",
        "bomAware",
        "addBOM",
        "PrependBOM",
        "stripBOM",
        "StripBOM",
        "nodeVer",
        "process",
        "versions",
        "node",
        "nodeVerArr",
        "split",
        "map",
        "Number"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "sourcesContent": [
        "\"use strict\";\r\n\r\n// Some environments don't have global Buffer (e.g. React Native).\r\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\r\nvar Buffer = require(\"safer-buffer\").Buffer;\r\n\r\nvar bomHandling = require(\"./bom-handling\"),\r\n    iconv = module.exports;\r\n\r\n// All codecs and aliases are kept here, keyed by encoding name/alias.\r\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\r\niconv.encodings = null;\r\n\r\n// Characters emitted in case of error.\r\niconv.defaultCharUnicode = '�';\r\niconv.defaultCharSingleByte = '?';\r\n\r\n// Public API.\r\niconv.encode = function encode(str, encoding, options) {\r\n    str = \"\" + (str || \"\"); // Ensure string.\r\n\r\n    var encoder = iconv.getEncoder(encoding, options);\r\n\r\n    var res = encoder.write(str);\r\n    var trail = encoder.end();\r\n    \r\n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\r\n}\r\n\r\niconv.decode = function decode(buf, encoding, options) {\r\n    if (typeof buf === 'string') {\r\n        if (!iconv.skipDecodeWarning) {\r\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\r\n            iconv.skipDecodeWarning = true;\r\n        }\r\n\r\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\r\n    }\r\n\r\n    var decoder = iconv.getDecoder(encoding, options);\r\n\r\n    var res = decoder.write(buf);\r\n    var trail = decoder.end();\r\n\r\n    return trail ? (res + trail) : res;\r\n}\r\n\r\niconv.encodingExists = function encodingExists(enc) {\r\n    try {\r\n        iconv.getCodec(enc);\r\n        return true;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n// Legacy aliases to convert functions\r\niconv.toEncoding = iconv.encode;\r\niconv.fromEncoding = iconv.decode;\r\n\r\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\r\niconv._codecDataCache = {};\r\niconv.getCodec = function getCodec(encoding) {\r\n    if (!iconv.encodings)\r\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\r\n    \r\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\r\n    var enc = iconv._canonicalizeEncoding(encoding);\r\n\r\n    // Traverse iconv.encodings to find actual codec.\r\n    var codecOptions = {};\r\n    while (true) {\r\n        var codec = iconv._codecDataCache[enc];\r\n        if (codec)\r\n            return codec;\r\n\r\n        var codecDef = iconv.encodings[enc];\r\n\r\n        switch (typeof codecDef) {\r\n            case \"string\": // Direct alias to other encoding.\r\n                enc = codecDef;\r\n                break;\r\n\r\n            case \"object\": // Alias with options. Can be layered.\r\n                for (var key in codecDef)\r\n                    codecOptions[key] = codecDef[key];\r\n\r\n                if (!codecOptions.encodingName)\r\n                    codecOptions.encodingName = enc;\r\n                \r\n                enc = codecDef.type;\r\n                break;\r\n\r\n            case \"function\": // Codec itself.\r\n                if (!codecOptions.encodingName)\r\n                    codecOptions.encodingName = enc;\r\n\r\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\r\n                // It'll be called only once (for each different options object).\r\n                codec = new codecDef(codecOptions, iconv);\r\n\r\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\r\n                return codec;\r\n\r\n            default:\r\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\r\n        }\r\n    }\r\n}\r\n\r\niconv._canonicalizeEncoding = function(encoding) {\r\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\r\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\r\n}\r\n\r\niconv.getEncoder = function getEncoder(encoding, options) {\r\n    var codec = iconv.getCodec(encoding),\r\n        encoder = new codec.encoder(options, codec);\r\n\r\n    if (codec.bomAware && options && options.addBOM)\r\n        encoder = new bomHandling.PrependBOM(encoder, options);\r\n\r\n    return encoder;\r\n}\r\n\r\niconv.getDecoder = function getDecoder(encoding, options) {\r\n    var codec = iconv.getCodec(encoding),\r\n        decoder = new codec.decoder(options, codec);\r\n\r\n    if (codec.bomAware && !(options && options.stripBOM === false))\r\n        decoder = new bomHandling.StripBOM(decoder, options);\r\n\r\n    return decoder;\r\n}\r\n\r\n\r\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\r\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\r\nif (nodeVer) {\r\n\r\n    // Load streaming support in Node v0.10+\r\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\r\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\r\n        require(\"./streams\")(iconv);\r\n    }\r\n\r\n    // Load Node primitive extensions.\r\n    require(\"./extend-node\")(iconv);\r\n}\r\n\r\nif (\"Ā\" != \"\\u0100\") {\r\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211430
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\safer-buffer\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\safer-buffer\\\\safer.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safer-buffer\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safer-buffer\\safer.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safer-buffer\\safer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safer-buffer\\safer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safer-buffer\\",
        "sourceFileName": "safer.js"
      }
    },
    "ast": null,
    "code": "/* eslint-disable node/no-deprecated-api */\n'use strict';\n\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer;\nvar safer = {};\nvar key;\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue;\n  if (key === 'SlowBuffer' || key === 'Buffer') continue;\n  safer[key] = buffer[key];\n}\n\nvar Safer = safer.Buffer = {};\n\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue;\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;\n  Safer[key] = Buffer[key];\n}\n\nsafer.Buffer.prototype = Buffer.prototype;\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value);\n    }\n\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);\n    }\n\n    return Buffer(value, encodingOrOffset, length);\n  };\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size);\n    }\n\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n\n    var buf = Buffer(size);\n\n    if (!fill || fill.length === 0) {\n      buf.fill(0);\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n\n    return buf;\n  };\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;\n  } catch (e) {// we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  };\n\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;\n  }\n}\n\nmodule.exports = safer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhZmVyLmpzIl0sIm5hbWVzIjpbImJ1ZmZlciIsInJlcXVpcmUiLCJCdWZmZXIiLCJzYWZlciIsImtleSIsImhhc093blByb3BlcnR5IiwiU2FmZXIiLCJwcm90b3R5cGUiLCJmcm9tIiwiVWludDhBcnJheSIsInZhbHVlIiwiZW5jb2RpbmdPck9mZnNldCIsImxlbmd0aCIsIlR5cGVFcnJvciIsImFsbG9jIiwic2l6ZSIsImZpbGwiLCJlbmNvZGluZyIsIlJhbmdlRXJyb3IiLCJidWYiLCJrU3RyaW5nTWF4TGVuZ3RoIiwicHJvY2VzcyIsImJpbmRpbmciLCJlIiwiY29uc3RhbnRzIiwiTUFYX0xFTkdUSCIsImtNYXhMZW5ndGgiLCJNQVhfU1RSSU5HX0xFTkdUSCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0FBRUEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE1BQU0sQ0FBQ0UsTUFBcEI7QUFFQSxJQUFJQyxLQUFLLEdBQUcsRUFBWjtBQUVBLElBQUlDLEdBQUo7O0FBRUEsS0FBS0EsR0FBTCxJQUFZSixNQUFaLEVBQW9CO0FBQ2xCLE1BQUksQ0FBQ0EsTUFBTSxDQUFDSyxjQUFQLENBQXNCRCxHQUF0QixDQUFMLEVBQWlDO0FBQ2pDLE1BQUlBLEdBQUcsS0FBSyxZQUFSLElBQXdCQSxHQUFHLEtBQUssUUFBcEMsRUFBOEM7QUFDOUNELEVBQUFBLEtBQUssQ0FBQ0MsR0FBRCxDQUFMLEdBQWFKLE1BQU0sQ0FBQ0ksR0FBRCxDQUFuQjtBQUNEOztBQUVELElBQUlFLEtBQUssR0FBR0gsS0FBSyxDQUFDRCxNQUFOLEdBQWUsRUFBM0I7O0FBQ0EsS0FBS0UsR0FBTCxJQUFZRixNQUFaLEVBQW9CO0FBQ2xCLE1BQUksQ0FBQ0EsTUFBTSxDQUFDRyxjQUFQLENBQXNCRCxHQUF0QixDQUFMLEVBQWlDO0FBQ2pDLE1BQUlBLEdBQUcsS0FBSyxhQUFSLElBQXlC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b3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcc2FmZXItYnVmZmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbnZhciBidWZmZXIgPSByZXF1aXJlKCdidWZmZXInKVxyXG52YXIgQnVmZmVyID0gYnVmZmVyLkJ1ZmZlclxyXG5cclxudmFyIHNhZmVyID0ge31cclxuXHJcbnZhciBrZXlcclxuXHJcbmZvciAoa2V5IGluIGJ1ZmZlcikge1xyXG4gIGlmICghYnVmZmVyLmhhc093blByb3BlcnR5KGtleSkpIGNvbnRpbnVlXHJcbiAgaWYgKGtleSA9PT0gJ1Nsb3dCdWZmZXInIHx8IGtleSA9PT0gJ0J1ZmZlcicpIGNvbnRpbnVlXHJcbiAgc2FmZXJba2V5XSA9IGJ1ZmZlcltrZXldXHJcbn1cclxuXHJcbnZhciBTYWZlciA9IHNhZmVyLkJ1ZmZlciA9IHt9XHJcbmZvciAoa2V5IGluIEJ1ZmZlcikge1xyXG4gIGlmICghQnVmZmVyLmhhc093blByb3BlcnR5KGtleSkpIGNvbnRpbnVlXHJcbiAgaWYgKGtleSA9PT0gJ2FsbG9jVW5zYWZlJyB8fCBrZXkgPT09ICdhbGxvY1Vuc2FmZVNsb3cnKSBjb250aW51ZVxyXG4gIFNhZmVyW2tleV0gPSBCdWZmZXJba2V5XVxyXG59XHJcblxyXG5zYWZlci5CdWZmZXIucHJvdG90eXBlID0gQnVmZmVyLnByb3RvdHlwZVxyXG5cclxuaWYgKCFTYWZlci5mcm9tIHx8IFNhZmVyLmZyb20gPT09IFVpbnQ4QXJyYXkuZnJvbSkge1xyXG4gIFNhZmVyLmZyb20gPSBmdW5jdGlvbiAodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcclxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSAnICsgdHlwZW9mIHZhbHVlKVxyXG4gICAgfVxyXG4gICAgaWYgKHZhbHVlICYmIHR5cGVvZiB2YWx1ZS5sZW5ndGggPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgdmFsdWUpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gQnVmZmVyKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXHJcbiAgfVxyXG59XHJcblxyXG5pZiAoIVNhZmVyLmFsbG9jKSB7XHJcbiAgU2FmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcclxuICAgIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcclxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgJyArIHR5cGVvZiBzaXplKVxyXG4gICAgfVxyXG4gICAgaWYgKHNpemUgPCAwIHx8IHNpemUgPj0gMiAqICgxIDw8IDMwKSkge1xyXG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIFwiJyArIHNpemUgKyAnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwic2l6ZVwiJylcclxuICAgIH1cclxuICAgIHZhciBidWYgPSBCdWZmZXIoc2l6ZSlcclxuICAgIGlmICghZmlsbCB8fCBmaWxsLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICBidWYuZmlsbCgwKVxyXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIGJ1Zi5maWxsKGZpbGwsIGVuY29kaW5nKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYnVmLmZpbGwoZmlsbClcclxuICAgIH1cclxuICAgIHJldHVybiBidWZcclxuICB9XHJcbn1cclxuXHJcbmlmICghc2FmZXIua1N0cmluZ01heExlbmd0aCkge1xyXG4gIHRyeSB7XHJcbiAgICBzYWZlci5rU3RyaW5nTWF4TGVuZ3RoID0gcHJvY2Vzcy5iaW5kaW5nKCdidWZmZXInKS5rU3RyaW5nTWF4TGVuZ3RoXHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgLy8gd2UgY2FuJ3QgZGV0ZXJtaW5lIGtTdHJpbmdNYXhMZW5ndGggaW4gZW52aXJvbm1lbnRzIHdoZXJlIHByb2Nlc3MuYmluZGluZ1xyXG4gICAgLy8gaXMgdW5zdXBwb3J0ZWQsIHNvIGxldCdzIG5vdCBzZXQgaXRcclxuICB9XHJcbn1cclxuXHJcbmlmICghc2FmZXIuY29uc3RhbnRzKSB7XHJcbiAgc2FmZXIuY29uc3RhbnRzID0ge1xyXG4gICAgTUFYX0xFTkdUSDogc2FmZXIua01heExlbmd0aFxyXG4gIH1cclxuICBpZiAoc2FmZXIua1N0cmluZ01heExlbmd0aCkge1xyXG4gICAgc2FmZXIuY29uc3RhbnRzLk1BWF9TVFJJTkdfTEVOR1RIID0gc2FmZXIua1N0cmluZ01heExlbmd0aFxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBzYWZlclxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "safer.js"
      ],
      "names": [
        "buffer",
        "require",
        "Buffer",
        "safer",
        "key",
        "hasOwnProperty",
        "Safer",
        "prototype",
        "from",
        "Uint8Array",
        "value",
        "encodingOrOffset",
        "length",
        "TypeError",
        "alloc",
        "size",
        "fill",
        "encoding",
        "RangeError",
        "buf",
        "kStringMaxLength",
        "process",
        "binding",
        "e",
        "constants",
        "MAX_LENGTH",
        "kMaxLength",
        "MAX_STRING_LENGTH",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\safer-buffer\\",
      "sourcesContent": [
        "/* eslint-disable node/no-deprecated-api */\r\n\r\n'use strict'\r\n\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\nvar safer = {}\r\n\r\nvar key\r\n\r\nfor (key in buffer) {\r\n  if (!buffer.hasOwnProperty(key)) continue\r\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\r\n  safer[key] = buffer[key]\r\n}\r\n\r\nvar Safer = safer.Buffer = {}\r\nfor (key in Buffer) {\r\n  if (!Buffer.hasOwnProperty(key)) continue\r\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\r\n  Safer[key] = Buffer[key]\r\n}\r\n\r\nsafer.Buffer.prototype = Buffer.prototype\r\n\r\nif (!Safer.from || Safer.from === Uint8Array.from) {\r\n  Safer.from = function (value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\r\n    }\r\n    if (value && typeof value.length === 'undefined') {\r\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\r\n    }\r\n    return Buffer(value, encodingOrOffset, length)\r\n  }\r\n}\r\n\r\nif (!Safer.alloc) {\r\n  Safer.alloc = function (size, fill, encoding) {\r\n    if (typeof size !== 'number') {\r\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\r\n    }\r\n    if (size < 0 || size >= 2 * (1 << 30)) {\r\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n    }\r\n    var buf = Buffer(size)\r\n    if (!fill || fill.length === 0) {\r\n      buf.fill(0)\r\n    } else if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n    return buf\r\n  }\r\n}\r\n\r\nif (!safer.kStringMaxLength) {\r\n  try {\r\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\r\n  } catch (e) {\r\n    // we can't determine kStringMaxLength in environments where process.binding\r\n    // is unsupported, so let's not set it\r\n  }\r\n}\r\n\r\nif (!safer.constants) {\r\n  safer.constants = {\r\n    MAX_LENGTH: safer.kMaxLength\r\n  }\r\n  if (safer.kStringMaxLength) {\r\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\r\n  }\r\n}\r\n\r\nmodule.exports = safer\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211913
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\bom-handling.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\bom-handling.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\bom-handling.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\bom-handling.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
        "sourceFileName": "bom-handling.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\nexports.PrependBOM = PrependBOMWrapper;\n\nfunction PrependBOMWrapper(encoder, options) {\n  this.encoder = encoder;\n  this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function (str) {\n  if (this.addBOM) {\n    str = BOMChar + str;\n    this.addBOM = false;\n  }\n\n  return this.encoder.write(str);\n};\n\nPrependBOMWrapper.prototype.end = function () {\n  return this.encoder.end();\n}; //------------------------------------------------------------------------------\n\n\nexports.StripBOM = StripBOMWrapper;\n\nfunction StripBOMWrapper(decoder, options) {\n  this.decoder = decoder;\n  this.pass = false;\n  this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function (buf) {\n  var res = this.decoder.write(buf);\n  if (this.pass || !res) return res;\n\n  if (res[0] === BOMChar) {\n    res = res.slice(1);\n    if (typeof this.options.stripBOM === 'function') this.options.stripBOM();\n  }\n\n  this.pass = true;\n  return res;\n};\n\nStripBOMWrapper.prototype.end = function () {\n  return this.decoder.end();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvbS1oYW5kbGluZy5qcyJdLCJuYW1lcyI6WyJCT01DaGFyIiwiZXhwb3J0cyIsIlByZXBlbmRCT00iLCJQcmVwZW5kQk9NV3JhcHBlciIsImVuY29kZXIiLCJvcHRpb25zIiwiYWRkQk9NIiwicHJvdG90eXBlIiwid3JpdGUiLCJzdHIiLCJlbmQiLCJTdHJpcEJPTSIsIlN0cmlwQk9NV3JhcHBlciIsImRlY29kZXIiLCJwYXNzIiwiYnVmIiwicmVzIiwic2xpY2UiLCJzdHJpcEJPTSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsT0FBTyxHQUFHLFFBQWQ7QUFFQUMsT0FBTyxDQUFDQyxVQUFSLEdBQXFCQyxpQkFBckI7O0FBQ0EsU0FBU0EsaUJBQVQsQ0FBMkJDLE9BQTNCLEVBQW9DQyxPQUFwQyxFQUE2QztBQUN6QyxPQUFLRCxPQUFMLEdBQWVBLE9BQWY7QUFDQSxPQUFLRSxNQUFMLEdBQWMsSUFBZDtBQUNIOztBQUVESCxpQkFBaUIsQ0FBQ0ksU0FBbEIsQ0FBNEJDLEtBQTVCLEdBQW9DLFVBQVNDLEdBQVQsRUFBYztBQUM5QyxNQUFJLEtBQUtILE1BQVQsRUFBaUI7QUFDYkcsSUFBQUEsR0FBRyxHQUFHVCxPQUFPLEdBQUdTLEdBQWhCO0FBQ0EsU0FBS0gsTUFBTCxHQUFjLEtBQWQ7QUFDSDs7QUFFRCxTQUFPLEtBQUtGLE9BQUwsQ0FBYUksS0FBYixDQUFtQkMsR0FBbkIsQ0FBUDtBQUNILENBUEQ7O0FBU0FOLGlCQUFpQixDQUFDSSxTQUFsQixDQUE0QkcsR0FBNUIsR0FBa0MsWUFBVztBQUN6QyxTQUFPLEtBQUtOLE9BQUwsQ0FBYU0sR0FBYixFQUFQO0FBQ0gsQ0FGRCxDLENBS0E7OztBQUVBVCxPQUFPLENBQUNVLFFBQVIsR0FBbUJDLGVBQW5COztBQUNBLFNBQVNBLGVBQVQsQ0FBeUJDLE9BQXpCLEVBQWtDUixPQUFsQyxFQUEyQztBQUN2QyxPQUFLUSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxPQUFLQyxJQUFMLEdBQVksS0FBWjtBQUNBLE9BQUtULE9BQUwsR0FBZUEsT0FBTyxJQUFJLEVBQTFCO0FBQ0g7O0FBRURPLGVBQWUsQ0FBQ0wsU0FBaEIsQ0FBMEJDLEtBQTFCLEdBQWtDLFVBQVNPLEdBQVQsRUFBYztBQUM1QyxNQUFJQyxHQUFHLEdBQUcsS0FBS0gsT0FBTCxDQUFhTCxLQUFiLENBQW1CTyxHQUFuQixDQUFWO0FBQ0EsTUFBSSxLQUFLRCxJQUFMLElBQWEsQ0FBQ0UsR0FBbEIsRUFDSSxPQUFPQSxHQUFQOztBQUVKLE1BQUlBLEdBQUcsQ0FBQyxDQUFELENBQUgsS0FBV2hCLE9BQWYsRUFBd0I7QUFDcEJnQixJQUFBQSxHQUFHLEdBQUdBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLENBQVYsQ0FBTjtBQUNBLFFBQUksT0FBTyxLQUFLWixPQUFMLENBQWFhLFFBQXBCLEtBQWlDLFVBQXJDLEVBQ0ksS0FBS2IsT0FBTCxDQUFhYSxRQUFiO0FBQ1A7O0FBRUQsT0FBS0osSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFPRSxHQUFQO0FBQ0gsQ0FiRDs7QUFlQUosZUFBZSxDQUFDTCxTQUFoQixDQUEwQkcsR0FBMUIsR0FBZ0MsWUFBVztBQUN2QyxTQUFPLEtBQUtHLE9BQUwsQ0FBYUgsR0FBYixFQUFQO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcaWNvbnYtbGl0ZVxcbGliXFwiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbnZhciBCT01DaGFyID0gJ1xcdUZFRkYnO1xyXG5cclxuZXhwb3J0cy5QcmVwZW5kQk9NID0gUHJlcGVuZEJPTVdyYXBwZXJcclxuZnVuY3Rpb24gUHJlcGVuZEJPTVdyYXBwZXIoZW5jb2Rlciwgb3B0aW9ucykge1xyXG4gICAgdGhpcy5lbmNvZGVyID0gZW5jb2RlcjtcclxuICAgIHRoaXMuYWRkQk9NID0gdHJ1ZTtcclxufVxyXG5cclxuUHJlcGVuZEJPTVdyYXBwZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICBpZiAodGhpcy5hZGRCT00pIHtcclxuICAgICAgICBzdHIgPSBCT01DaGFyICsgc3RyO1xyXG4gICAgICAgIHRoaXMuYWRkQk9NID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZW5jb2Rlci53cml0ZShzdHIpO1xyXG59XHJcblxyXG5QcmVwZW5kQk9NV3JhcHBlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5lbmNvZGVyLmVuZCgpO1xyXG59XHJcblxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmV4cG9ydHMuU3RyaXBCT00gPSBTdHJpcEJPTVdyYXBwZXI7XHJcbmZ1bmN0aW9uIFN0cmlwQk9NV3JhcHBlcihkZWNvZGVyLCBvcHRpb25zKSB7XHJcbiAgICB0aGlzLmRlY29kZXIgPSBkZWNvZGVyO1xyXG4gICAgdGhpcy5wYXNzID0gZmFsc2U7XHJcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG59XHJcblxyXG5TdHJpcEJPTVdyYXBwZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oYnVmKSB7XHJcbiAgICB2YXIgcmVzID0gdGhpcy5kZWNvZGVyLndyaXRlKGJ1Zik7XHJcbiAgICBpZiAodGhpcy5wYXNzIHx8ICFyZXMpXHJcbiAgICAgICAgcmV0dXJuIHJlcztcclxuXHJcbiAgICBpZiAocmVzWzBdID09PSBCT01DaGFyKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLnNsaWNlKDEpO1xyXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnN0cmlwQk9NID09PSAnZnVuY3Rpb24nKVxyXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuc3RyaXBCT00oKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnBhc3MgPSB0cnVlO1xyXG4gICAgcmV0dXJuIHJlcztcclxufVxyXG5cclxuU3RyaXBCT01XcmFwcGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLmRlY29kZXIuZW5kKCk7XHJcbn1cclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "bom-handling.js"
      ],
      "names": [
        "BOMChar",
        "exports",
        "PrependBOM",
        "PrependBOMWrapper",
        "encoder",
        "options",
        "addBOM",
        "prototype",
        "write",
        "str",
        "end",
        "StripBOM",
        "StripBOMWrapper",
        "decoder",
        "pass",
        "buf",
        "res",
        "slice",
        "stripBOM"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,OAAO,GAAG,QAAd;AAEAC,OAAO,CAACC,UAAR,GAAqBC,iBAArB;;AACA,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AACzC,OAAKD,OAAL,GAAeA,OAAf;AACA,OAAKE,MAAL,GAAc,IAAd;AACH;;AAEDH,iBAAiB,CAACI,SAAlB,CAA4BC,KAA5B,GAAoC,UAASC,GAAT,EAAc;AAC9C,MAAI,KAAKH,MAAT,EAAiB;AACbG,IAAAA,GAAG,GAAGT,OAAO,GAAGS,GAAhB;AACA,SAAKH,MAAL,GAAc,KAAd;AACH;;AAED,SAAO,KAAKF,OAAL,CAAaI,KAAb,CAAmBC,GAAnB,CAAP;AACH,CAPD;;AASAN,iBAAiB,CAACI,SAAlB,CAA4BG,GAA5B,GAAkC,YAAW;AACzC,SAAO,KAAKN,OAAL,CAAaM,GAAb,EAAP;AACH,CAFD,C,CAKA;;;AAEAT,OAAO,CAACU,QAAR,GAAmBC,eAAnB;;AACA,SAASA,eAAT,CAAyBC,OAAzB,EAAkCR,OAAlC,EAA2C;AACvC,OAAKQ,OAAL,GAAeA,OAAf;AACA,OAAKC,IAAL,GAAY,KAAZ;AACA,OAAKT,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACH;;AAEDO,eAAe,CAACL,SAAhB,CAA0BC,KAA1B,GAAkC,UAASO,GAAT,EAAc;AAC5C,MAAIC,GAAG,GAAG,KAAKH,OAAL,CAAaL,KAAb,CAAmBO,GAAnB,CAAV;AACA,MAAI,KAAKD,IAAL,IAAa,CAACE,GAAlB,EACI,OAAOA,GAAP;;AAEJ,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAWhB,OAAf,EAAwB;AACpBgB,IAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAN;AACA,QAAI,OAAO,KAAKZ,OAAL,CAAaa,QAApB,KAAiC,UAArC,EACI,KAAKb,OAAL,CAAaa,QAAb;AACP;;AAED,OAAKJ,IAAL,GAAY,IAAZ;AACA,SAAOE,GAAP;AACH,CAbD;;AAeAJ,eAAe,CAACL,SAAhB,CAA0BG,GAA1B,GAAgC,YAAW;AACvC,SAAO,KAAKG,OAAL,CAAaH,GAAb,EAAP;AACH,CAFD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "sourcesContent": [
        "\"use strict\";\r\n\r\nvar BOMChar = '\\uFEFF';\r\n\r\nexports.PrependBOM = PrependBOMWrapper\r\nfunction PrependBOMWrapper(encoder, options) {\r\n    this.encoder = encoder;\r\n    this.addBOM = true;\r\n}\r\n\r\nPrependBOMWrapper.prototype.write = function(str) {\r\n    if (this.addBOM) {\r\n        str = BOMChar + str;\r\n        this.addBOM = false;\r\n    }\r\n\r\n    return this.encoder.write(str);\r\n}\r\n\r\nPrependBOMWrapper.prototype.end = function() {\r\n    return this.encoder.end();\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexports.StripBOM = StripBOMWrapper;\r\nfunction StripBOMWrapper(decoder, options) {\r\n    this.decoder = decoder;\r\n    this.pass = false;\r\n    this.options = options || {};\r\n}\r\n\r\nStripBOMWrapper.prototype.write = function(buf) {\r\n    var res = this.decoder.write(buf);\r\n    if (this.pass || !res)\r\n        return res;\r\n\r\n    if (res[0] === BOMChar) {\r\n        res = res.slice(1);\r\n        if (typeof this.options.stripBOM === 'function')\r\n            this.options.stripBOM();\r\n    }\r\n\r\n    this.pass = true;\r\n    return res;\r\n}\r\n\r\nStripBOMWrapper.prototype.end = function() {\r\n    return this.decoder.end();\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211430
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\streams.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\streams.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\streams.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\streams.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
        "sourceFileName": "streams.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform; // == Exports ==================================================================\n\n\nmodule.exports = function (iconv) {\n  // Additional Public API.\n  iconv.encodeStream = function encodeStream(encoding, options) {\n    return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n  };\n\n  iconv.decodeStream = function decodeStream(encoding, options) {\n    return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n  };\n\n  iconv.supportsStreams = true; // Not published yet.\n\n  iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n  iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n  iconv._collect = IconvLiteDecoderStream.prototype.collect;\n}; // == Encoder stream =======================================================\n\n\nfunction IconvLiteEncoderStream(conv, options) {\n  this.conv = conv;\n  options = options || {};\n  options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n\n  Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n  constructor: {\n    value: IconvLiteEncoderStream\n  }\n});\n\nIconvLiteEncoderStream.prototype._transform = function (chunk, encoding, done) {\n  if (typeof chunk != 'string') return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n\n  try {\n    var res = this.conv.write(chunk);\n    if (res && res.length) this.push(res);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\n\nIconvLiteEncoderStream.prototype._flush = function (done) {\n  try {\n    var res = this.conv.end();\n    if (res && res.length) this.push(res);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\n\nIconvLiteEncoderStream.prototype.collect = function (cb) {\n  var chunks = [];\n  this.on('error', cb);\n  this.on('data', function (chunk) {\n    chunks.push(chunk);\n  });\n  this.on('end', function () {\n    cb(null, Buffer.concat(chunks));\n  });\n  return this;\n}; // == Decoder stream =======================================================\n\n\nfunction IconvLiteDecoderStream(conv, options) {\n  this.conv = conv;\n  options = options || {};\n  options.encoding = this.encoding = 'utf8'; // We output strings.\n\n  Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n  constructor: {\n    value: IconvLiteDecoderStream\n  }\n});\n\nIconvLiteDecoderStream.prototype._transform = function (chunk, encoding, done) {\n  if (!Buffer.isBuffer(chunk)) return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n\n  try {\n    var res = this.conv.write(chunk);\n    if (res && res.length) this.push(res, this.encoding);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\n\nIconvLiteDecoderStream.prototype._flush = function (done) {\n  try {\n    var res = this.conv.end();\n    if (res && res.length) this.push(res, this.encoding);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\n\nIconvLiteDecoderStream.prototype.collect = function (cb) {\n  var res = '';\n  this.on('error', cb);\n  this.on('data', function (chunk) {\n    res += chunk;\n  });\n  this.on('end', function () {\n    cb(null, res);\n  });\n  return this;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmVhbXMuanMiXSwibmFtZXMiOlsiQnVmZmVyIiwicmVxdWlyZSIsIlRyYW5zZm9ybSIsIm1vZHVsZSIsImV4cG9ydHMiLCJpY29udiIsImVuY29kZVN0cmVhbSIsImVuY29kaW5nIiwib3B0aW9ucyIsIkljb252TGl0ZUVuY29kZXJTdHJlYW0iLCJnZXRFbmNvZGVyIiwiZGVjb2RlU3RyZWFtIiwiSWNvbnZMaXRlRGVjb2RlclN0cmVhbSIsImdldERlY29kZXIiLCJzdXBwb3J0c1N0cmVhbXMiLCJfY29sbGVjdCIsInByb3RvdHlwZSIsImNvbGxlY3QiLCJjb252IiwiZGVjb2RlU3RyaW5ncyIsImNhbGwiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwiX3RyYW5zZm9ybSIsImNodW5rIiwiZG9uZSIsIkVycm9yIiwicmVzIiwid3JpdGUiLCJsZW5ndGgiLCJwdXNoIiwiZSIsIl9mbHVzaCIsImVuZCIsImNiIiwiY2h1bmtzIiwib24iLCJjb25jYXQiLCJpc0J1ZmZlciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCRCxNQUEvQjtBQUFBLElBQ0lFLFNBQVMsR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsU0FEbEMsQyxDQUlBOzs7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVNDLEtBQVQsRUFBZ0I7QUFFN0I7QUFDQUEsRUFBQUEsS0FBSyxDQUFDQyxZQUFOLEdBQXFCLFNBQVNBLFlBQVQsQ0FBc0JDLFFBQXRCLEVBQWdDQyxPQUFoQyxFQUF5QztBQUMxRCxXQUFPLElBQUlDLHNCQUFKLENBQTJCSixLQUFLLENBQUNLLFVBQU4sQ0FBaUJILFFBQWpCLEVBQTJCQyxPQUEzQixDQUEzQixFQUFnRUEsT0FBaEUsQ0FBUDtBQUNILEdBRkQ7O0FBSUFILEVBQUFBLEtBQUssQ0FBQ00sWUFBTixHQUFxQixTQUFTQSxZQUFULENBQXNCSixRQUF0QixFQUFnQ0MsT0FBaEMsRUFBeUM7QUFDMUQsV0FBTyxJQUFJSSxzQkFBSixDQUEyQlAsS0FBSyxDQUFDUSxVQUFOLENBQWlCTixRQUFqQixFQUEyQkMsT0FBM0IsQ0FBM0IsRUFBZ0VBLE9BQWhFLENBQVA7QUFDSCxHQUZEOztBQUlBSCxFQUFBQSxLQUFLLENBQUNTLGVBQU4sR0FBd0IsSUFBeEIsQ0FYNkIsQ0FjN0I7O0FBQ0FULEVBQUFBLEtBQUssQ0FBQ0ksc0JBQU4sR0FBK0JBLHNCQUEvQjtBQUNBSixFQUFBQSxLQUFLLENBQUNPLHNCQUFOLEdBQStCQSxzQkFBL0I7QUFDQVAsRUFBQUEsS0FBSyxDQUFDVSxRQUFOLEdBQWlCSCxzQkFBc0IsQ0FBQ0ksU0FBdkIsQ0FBaUNDLE9BQWxEO0FBQ0gsQ0FsQkQsQyxDQXFCQTs7O0FBQ0EsU0FBU1Isc0JBQVQsQ0FBZ0NTLElBQWhDLEVBQXNDVixPQUF0QyxFQUErQztBQUMzQyxPQUFLVSxJQUFMLEdBQVlBLElBQVo7QUFDQVYsRUFBQUEsT0FBTyxHQUFHQSxPQUFPLElBQUksRUFBckI7QUFDQUEsRUFBQUEsT0FBTyxDQUFDVyxhQUFSLEdBQXdCLEtBQXhCLENBSDJDLENBR1o7O0FBQy9CakIsRUFBQUEsU0FBUyxDQUFDa0IsSUFBVixDQUFlLElBQWYsRUFBcUJaLE9BQXJCO0FBQ0g7O0FBRURDLHNCQUFzQixDQUFDTyxTQUF2QixHQUFtQ0ssTUFBTSxDQUFDQyxNQUFQLENBQWNwQixTQUFTLENBQUNjLFNBQXhCLEVBQW1DO0FBQ2xFTyxFQUFBQSxXQUFXLEVBQUU7QUFBRUMsSUFBQUEsS0FBSyxFQUFFZjtBQUFUO0FBRHFELENBQW5DLENBQW5DOztBQUlBQSxzQkFBc0IsQ0FBQ08sU0FBdkIsQ0FBaUNTLFVBQWpDLEdBQThDLFVBQVNDLEtBQVQsRUFBZ0JuQixRQUFoQixFQUEwQm9CLElBQTFCLEVBQWdDO0FBQzFFLE1BQUksT0FBT0QsS0FBUCxJQUFnQixRQUFwQixFQUNJLE9BQU9DLElBQUksQ0FBQyxJQUFJQyxLQUFKLENBQVUsbURBQVYsQ0FBRCxDQUFYOztBQUNKLE1BQUk7QUFDQSxRQUFJQyxHQUFHLEdBQUcsS0FBS1gsSUFBTCxDQUFVWSxLQUFWLENBQWdCSixLQUFoQixDQUFWO0FBQ0EsUUFBSUcsR0FBRyxJQUFJQSxHQUFHLENBQUNFLE1BQWYsRUFBdUIsS0FBS0MsSUFBTCxDQUFVSCxHQUFWO0FBQ3ZCRixJQUFBQSxJQUFJO0FBQ1AsR0FKRCxDQUtBLE9BQU9NLENBQVAsRUFBVTtBQUNOTixJQUFBQSxJQUFJLENBQUNNLENBQUQsQ0FBSjtBQUNIO0FBQ0osQ0FYRDs7QUFhQXhCLHNCQUFzQixDQUFDTyxTQUF2QixDQUFpQ2tCLE1BQWpDLEdBQTBDLFVBQVNQLElBQVQsRUFBZTtBQUNyRCxNQUFJO0FBQ0EsUUFBSUUsR0FBRyxHQUFHLEtBQUtYLElBQUwsQ0FBVWlCLEdBQVYsRUFBVjtBQUNBLFFBQUlOLEdBQUcsSUFBSUEsR0FBRyxDQUFDRSxNQUFmLEVBQXVCLEtBQUtDLElBQUwsQ0FBVUgsR0FBVjtBQUN2QkYsSUFBQUEsSUFBSTtBQUNQLEdBSkQsQ0FLQSxPQUFPTSxDQUFQLEVBQVU7QUFDTk4sSUFBQUEsSUFBSSxDQUFDTSxDQUFELENBQUo7QUFDSDtBQUNKLENBVEQ7O0FBV0F4QixzQkFBc0IsQ0FBQ08sU0FBdkIsQ0FBaUNDLE9BQWpDLEdBQTJDLFVBQVNtQixFQUFULEVBQWE7QUFDcEQsTUFBSUMsTUFBTSxHQUFHLEVBQWI7QUFDQSxPQUFLQyxFQUFMLENBQVEsT0FBUixFQUFpQkYsRUFBakI7QUFDQSxPQUFLRSxFQUFMLENBQVEsTUFBUixFQUFnQixVQUFTWixLQUFULEVBQWdCO0FBQUVXLElBQUFBLE1BQU0sQ0FBQ0wsSUFBUCxDQUFZTixLQUFaO0FBQXFCLEdBQXZEO0FBQ0EsT0FBS1ksRUFBTCxDQUFRLEtBQVIsRUFBZSxZQUFXO0FBQ3RCRixJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPcEMsTUFBTSxDQUFDdUMsTUFBUCxDQUFjRixNQUFkLENBQVAsQ0FBRjtBQUNILEdBRkQ7QUFHQSxTQUFPLElBQVA7QUFDSCxDQVJELEMsQ0FXQTs7O0FBQ0EsU0FBU3pCLHNCQUFULENBQWdDTSxJQUFoQyxFQUFzQ1YsT0FBdEMsRUFBK0M7QUFDM0MsT0FBS1UsSUFBTCxHQUFZQSxJQUFaO0FBQ0FWLEVBQUFBLE9BQU8sR0FBR0EsT0FBTyxJQUFJLEVBQXJCO0FBQ0FBLEVBQUFBLE9BQU8sQ0FBQ0QsUUFBUixHQUFtQixLQUFLQSxRQUFMLEdBQWdCLE1BQW5DLENBSDJDLENBR0E7O0FBQzNDTCxFQUFBQSxTQUFTLENBQUNrQixJQUFWLENBQWUsSUFBZixFQUFxQlosT0FBckI7QUFDSDs7QUFFREksc0JBQXNCLENBQUNJLFNBQXZCLEdBQW1DSyxNQUFNLENBQUNDLE1BQVAsQ0FBY3BCLFNBQVMsQ0FBQ2MsU0FBeEIsRUFBbUM7QUFDbEVPLEVBQUFBLFdBQVcsRUFBRTtBQUFFQyxJQUFBQSxLQUFLLEVBQUVaO0FBQVQ7QUFEcUQsQ0FBbkMsQ0FBbkM7O0FBSUFBLHNCQUFzQixDQUFDSSxTQUF2QixDQUFpQ1MsVUFBakMsR0FBOEMsVUFBU0MsS0FBVCxFQUFnQm5CLFFBQWhCLEVBQTBCb0IsSUFBMUIsRUFBZ0M7QUFDMUUsTUFBSSxDQUFDM0IsTUFBTSxDQUFDd0MsUUFBUCxDQUFnQmQsS0FBaEIsQ0FBTCxFQUNJLE9BQU9DLElBQUksQ0FBQyxJQUFJQyxLQUFKLENBQVUsbURBQVYsQ0FBRCxDQUFYOztBQUNKLE1BQUk7QUFDQSxRQUFJQyxHQUFHLEdBQUcsS0FBS1gsSUFBTCxDQUFVWSxLQUFWLENBQWdCSixLQUFoQixDQUFWO0FBQ0EsUUFBSUcsR0FBRyxJQUFJQSxHQUFHLENBQUNFLE1BQWYsRUFBdUIsS0FBS0MsSUFBTCxDQUFVSCxHQUFWLEVBQWUsS0FBS3RCLFFBQXBCO0FBQ3ZCb0IsSUFBQUEsSUFBSTtBQUNQLEdBSkQsQ0FLQSxPQUFPTSxDQUFQLEVBQVU7QUFDTk4sSUFBQUEsSUFBSSxDQUFDTSxDQUFELENBQUo7QUFDSDtBQUNKLENBWEQ7O0FBYUFyQixzQkFBc0IsQ0FBQ0ksU0FBdkIsQ0FBaUNrQixNQUFqQyxHQUEwQyxVQUFTUCxJQUFULEVBQWU7QUFDckQsTUFBSTtBQUNBLFFBQUlFLEdBQUcsR0FBRyxLQUFLWCxJQUFMLENBQVVpQixHQUFWLEVBQVY7QUFDQSxRQUFJTixHQUFHLElBQUlBLEdBQUcsQ0FBQ0UsTUFBZixFQUF1QixLQUFLQyxJQUFMLENBQVVILEdBQVYsRUFBZSxLQUFLdEIsUUFBcEI7QUFDdkJvQixJQUFBQSxJQUFJO0FBQ1AsR0FKRCxDQUtBLE9BQU9NLENBQVAsRUFBVTtBQUNOTixJQUFBQSxJQUFJLENBQUNNLENBQUQsQ0FBSjtBQUNIO0FBQ0osQ0FURDs7QUFXQXJCLHNCQUFzQixDQUFDSSxTQUF2QixDQUFpQ0MsT0FBakMsR0FBMkMsVUFBU21CLEVBQVQsRUFBYTtBQUNwRCxNQUFJUCxHQUFHLEdBQUcsRUFBVjtBQUNBLE9BQUtTLEVBQUwsQ0FBUSxPQUFSLEVBQWlCRixFQUFqQjtBQUNBLE9BQUtFLEVBQUwsQ0FBUSxNQUFSLEVBQWdCLFVBQVNaLEtBQVQsRUFBZ0I7QUFBRUcsSUFBQUEsR0FBRyxJQUFJSCxLQUFQO0FBQWUsR0FBakQ7QUFDQSxPQUFLWSxFQUFMLENBQVEsS0FBUixFQUFlLFlBQVc7QUFDdEJGLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU9QLEdBQVAsQ0FBRjtBQUNILEdBRkQ7QUFHQSxTQUFPLElBQVA7QUFDSCxDQVJEIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcbm9kZV9tb2R1bGVzXFxpY29udi1saXRlXFxsaWJcXCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoXCJidWZmZXJcIikuQnVmZmVyLFxyXG4gICAgVHJhbnNmb3JtID0gcmVxdWlyZShcInN0cmVhbVwiKS5UcmFuc2Zvcm07XHJcblxyXG5cclxuLy8gPT0gRXhwb3J0cyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpY29udikge1xyXG4gICAgXHJcbiAgICAvLyBBZGRpdGlvbmFsIFB1YmxpYyBBUEkuXHJcbiAgICBpY29udi5lbmNvZGVTdHJlYW0gPSBmdW5jdGlvbiBlbmNvZGVTdHJlYW0oZW5jb2RpbmcsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gbmV3IEljb252TGl0ZUVuY29kZXJTdHJlYW0oaWNvbnYuZ2V0RW5jb2RlcihlbmNvZGluZywgb3B0aW9ucyksIG9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIGljb252LmRlY29kZVN0cmVhbSA9IGZ1bmN0aW9uIGRlY29kZVN0cmVhbShlbmNvZGluZywgb3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBuZXcgSWNvbnZMaXRlRGVjb2RlclN0cmVhbShpY29udi5nZXREZWNvZGVyKGVuY29kaW5nLCBvcHRpb25zKSwgb3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWNvbnYuc3VwcG9ydHNTdHJlYW1zID0gdHJ1ZTtcclxuXHJcblxyXG4gICAgLy8gTm90IHB1Ymxpc2hlZCB5ZXQuXHJcbiAgICBpY29udi5JY29udkxpdGVFbmNvZGVyU3RyZWFtID0gSWNvbnZMaXRlRW5jb2RlclN0cmVhbTtcclxuICAgIGljb252Lkljb252TGl0ZURlY29kZXJTdHJlYW0gPSBJY29udkxpdGVEZWNvZGVyU3RyZWFtO1xyXG4gICAgaWNvbnYuX2NvbGxlY3QgPSBJY29udkxpdGVEZWNvZGVyU3RyZWFtLnByb3RvdHlwZS5jb2xsZWN0O1xyXG59O1xyXG5cclxuXHJcbi8vID09IEVuY29kZXIgc3RyZWFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZnVuY3Rpb24gSWNvbnZMaXRlRW5jb2RlclN0cmVhbShjb252LCBvcHRpb25zKSB7XHJcbiAgICB0aGlzLmNvbnYgPSBjb252O1xyXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcbiAgICBvcHRpb25zLmRlY29kZVN0cmluZ3MgPSBmYWxzZTsgLy8gV2UgYWNjZXB0IG9ubHkgc3RyaW5ncywgc28gd2UgZG9uJ3QgbmVlZCB0byBkZWNvZGUgdGhlbS5cclxuICAgIFRyYW5zZm9ybS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xyXG59XHJcblxyXG5JY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVHJhbnNmb3JtLnByb3RvdHlwZSwge1xyXG4gICAgY29uc3RydWN0b3I6IHsgdmFsdWU6IEljb252TGl0ZUVuY29kZXJTdHJlYW0gfVxyXG59KTtcclxuXHJcbkljb252TGl0ZUVuY29kZXJTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGRvbmUpIHtcclxuICAgIGlmICh0eXBlb2YgY2h1bmsgIT0gJ3N0cmluZycpXHJcbiAgICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKFwiSWNvbnYgZW5jb2Rpbmcgc3RyZWFtIG5lZWRzIHN0cmluZ3MgYXMgaXRzIGlucHV0LlwiKSk7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHZhciByZXMgPSB0aGlzLmNvbnYud3JpdGUoY2h1bmspO1xyXG4gICAgICAgIGlmIChyZXMgJiYgcmVzLmxlbmd0aCkgdGhpcy5wdXNoKHJlcyk7XHJcbiAgICAgICAgZG9uZSgpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICBkb25lKGUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5JY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZS5fZmx1c2ggPSBmdW5jdGlvbihkb25lKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHZhciByZXMgPSB0aGlzLmNvbnYuZW5kKCk7XHJcbiAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzKTtcclxuICAgICAgICBkb25lKCk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGRvbmUoZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkljb252TGl0ZUVuY29kZXJTdHJlYW0ucHJvdG90eXBlLmNvbGxlY3QgPSBmdW5jdGlvbihjYikge1xyXG4gICAgdmFyIGNodW5rcyA9IFtdO1xyXG4gICAgdGhpcy5vbignZXJyb3InLCBjYik7XHJcbiAgICB0aGlzLm9uKCdkYXRhJywgZnVuY3Rpb24oY2h1bmspIHsgY2h1bmtzLnB1c2goY2h1bmspOyB9KTtcclxuICAgIHRoaXMub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNiKG51bGwsIEJ1ZmZlci5jb25jYXQoY2h1bmtzKSk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiB0aGlzO1xyXG59XHJcblxyXG5cclxuLy8gPT0gRGVjb2RlciBzdHJlYW0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5mdW5jdGlvbiBJY29udkxpdGVEZWNvZGVyU3RyZWFtKGNvbnYsIG9wdGlvbnMpIHtcclxuICAgIHRoaXMuY29udiA9IGNvbnY7XHJcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuICAgIG9wdGlvbnMuZW5jb2RpbmcgPSB0aGlzLmVuY29kaW5nID0gJ3V0ZjgnOyAvLyBXZSBvdXRwdXQgc3RyaW5ncy5cclxuICAgIFRyYW5zZm9ybS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xyXG59XHJcblxyXG5JY29udkxpdGVEZWNvZGVyU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVHJhbnNmb3JtLnByb3RvdHlwZSwge1xyXG4gICAgY29uc3RydWN0b3I6IHsgdmFsdWU6IEljb252TGl0ZURlY29kZXJTdHJlYW0gfVxyXG59KTtcclxuXHJcbkljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGRvbmUpIHtcclxuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKGNodW5rKSlcclxuICAgICAgICByZXR1cm4gZG9uZShuZXcgRXJyb3IoXCJJY29udiBkZWNvZGluZyBzdHJlYW0gbmVlZHMgYnVmZmVycyBhcyBpdHMgaW5wdXQuXCIpKTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgdmFyIHJlcyA9IHRoaXMuY29udi53cml0ZShjaHVuayk7XHJcbiAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzLCB0aGlzLmVuY29kaW5nKTtcclxuICAgICAgICBkb25lKCk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGRvbmUoZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlLl9mbHVzaCA9IGZ1bmN0aW9uKGRvbmUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgdmFyIHJlcyA9IHRoaXMuY29udi5lbmQoKTtcclxuICAgICAgICBpZiAocmVzICYmIHJlcy5sZW5ndGgpIHRoaXMucHVzaChyZXMsIHRoaXMuZW5jb2RpbmcpOyAgICAgICAgICAgICAgICBcclxuICAgICAgICBkb25lKCk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGRvbmUoZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlLmNvbGxlY3QgPSBmdW5jdGlvbihjYikge1xyXG4gICAgdmFyIHJlcyA9ICcnO1xyXG4gICAgdGhpcy5vbignZXJyb3InLCBjYik7XHJcbiAgICB0aGlzLm9uKCdkYXRhJywgZnVuY3Rpb24oY2h1bmspIHsgcmVzICs9IGNodW5rOyB9KTtcclxuICAgIHRoaXMub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNiKG51bGwsIHJlcyk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiB0aGlzO1xyXG59XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "streams.js"
      ],
      "names": [
        "Buffer",
        "require",
        "Transform",
        "module",
        "exports",
        "iconv",
        "encodeStream",
        "encoding",
        "options",
        "IconvLiteEncoderStream",
        "getEncoder",
        "decodeStream",
        "IconvLiteDecoderStream",
        "getDecoder",
        "supportsStreams",
        "_collect",
        "prototype",
        "collect",
        "conv",
        "decodeStrings",
        "call",
        "Object",
        "create",
        "constructor",
        "value",
        "_transform",
        "chunk",
        "done",
        "Error",
        "res",
        "write",
        "length",
        "push",
        "e",
        "_flush",
        "end",
        "cb",
        "chunks",
        "on",
        "concat",
        "isBuffer"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "sourcesContent": [
        "\"use strict\";\r\n\r\nvar Buffer = require(\"buffer\").Buffer,\r\n    Transform = require(\"stream\").Transform;\r\n\r\n\r\n// == Exports ==================================================================\r\nmodule.exports = function(iconv) {\r\n    \r\n    // Additional Public API.\r\n    iconv.encodeStream = function encodeStream(encoding, options) {\r\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\r\n    }\r\n\r\n    iconv.decodeStream = function decodeStream(encoding, options) {\r\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\r\n    }\r\n\r\n    iconv.supportsStreams = true;\r\n\r\n\r\n    // Not published yet.\r\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\r\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\r\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\r\n};\r\n\r\n\r\n// == Encoder stream =======================================================\r\nfunction IconvLiteEncoderStream(conv, options) {\r\n    this.conv = conv;\r\n    options = options || {};\r\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\r\n    Transform.call(this, options);\r\n}\r\n\r\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\r\n    constructor: { value: IconvLiteEncoderStream }\r\n});\r\n\r\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\r\n    if (typeof chunk != 'string')\r\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\r\n    try {\r\n        var res = this.conv.write(chunk);\r\n        if (res && res.length) this.push(res);\r\n        done();\r\n    }\r\n    catch (e) {\r\n        done(e);\r\n    }\r\n}\r\n\r\nIconvLiteEncoderStream.prototype._flush = function(done) {\r\n    try {\r\n        var res = this.conv.end();\r\n        if (res && res.length) this.push(res);\r\n        done();\r\n    }\r\n    catch (e) {\r\n        done(e);\r\n    }\r\n}\r\n\r\nIconvLiteEncoderStream.prototype.collect = function(cb) {\r\n    var chunks = [];\r\n    this.on('error', cb);\r\n    this.on('data', function(chunk) { chunks.push(chunk); });\r\n    this.on('end', function() {\r\n        cb(null, Buffer.concat(chunks));\r\n    });\r\n    return this;\r\n}\r\n\r\n\r\n// == Decoder stream =======================================================\r\nfunction IconvLiteDecoderStream(conv, options) {\r\n    this.conv = conv;\r\n    options = options || {};\r\n    options.encoding = this.encoding = 'utf8'; // We output strings.\r\n    Transform.call(this, options);\r\n}\r\n\r\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\r\n    constructor: { value: IconvLiteDecoderStream }\r\n});\r\n\r\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\r\n    if (!Buffer.isBuffer(chunk))\r\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\r\n    try {\r\n        var res = this.conv.write(chunk);\r\n        if (res && res.length) this.push(res, this.encoding);\r\n        done();\r\n    }\r\n    catch (e) {\r\n        done(e);\r\n    }\r\n}\r\n\r\nIconvLiteDecoderStream.prototype._flush = function(done) {\r\n    try {\r\n        var res = this.conv.end();\r\n        if (res && res.length) this.push(res, this.encoding);                \r\n        done();\r\n    }\r\n    catch (e) {\r\n        done(e);\r\n    }\r\n}\r\n\r\nIconvLiteDecoderStream.prototype.collect = function(cb) {\r\n    var res = '';\r\n    this.on('error', cb);\r\n    this.on('data', function(chunk) { res += chunk; });\r\n    this.on('end', function() {\r\n        cb(null, res);\r\n    });\r\n    return this;\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211430
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\iconv-lite\\\\lib\\\\extend-node.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\extend-node.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\extend-node.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\extend-node.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
        "sourceFileName": "extend-node.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer; // Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n// == Extend Node primitives to use iconv-lite =================================\n\n\nmodule.exports = function (iconv) {\n  var original = undefined; // Place to keep original methods.\n  // Node authors rewrote Buffer internals to make it compatible with\n  // Uint8Array and we cannot patch key functions since then.\n  // Note: this does use older Buffer API on a purpose\n\n  iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n  iconv.extendNodeEncodings = function extendNodeEncodings() {\n    if (original) return;\n    original = {};\n\n    if (!iconv.supportsNodeEncodingsExtension) {\n      console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n      console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n      return;\n    }\n\n    var nodeNativeEncodings = {\n      'hex': true,\n      'utf8': true,\n      'utf-8': true,\n      'ascii': true,\n      'binary': true,\n      'base64': true,\n      'ucs2': true,\n      'ucs-2': true,\n      'utf16le': true,\n      'utf-16le': true\n    };\n\n    Buffer.isNativeEncoding = function (enc) {\n      return enc && nodeNativeEncodings[enc.toLowerCase()];\n    }; // -- SlowBuffer -----------------------------------------------------------\n\n\n    var SlowBuffer = require('buffer').SlowBuffer;\n\n    original.SlowBufferToString = SlowBuffer.prototype.toString;\n\n    SlowBuffer.prototype.toString = function (encoding, start, end) {\n      encoding = String(encoding || 'utf8').toLowerCase(); // Use native conversion when possible\n\n      if (Buffer.isNativeEncoding(encoding)) return original.SlowBufferToString.call(this, encoding, start, end); // Otherwise, use our decoding method.\n\n      if (typeof start == 'undefined') start = 0;\n      if (typeof end == 'undefined') end = this.length;\n      return iconv.decode(this.slice(start, end), encoding);\n    };\n\n    original.SlowBufferWrite = SlowBuffer.prototype.write;\n\n    SlowBuffer.prototype.write = function (string, offset, length, encoding) {\n      // Support both (string, offset, length, encoding)\n      // and the legacy (string, encoding, offset, length)\n      if (isFinite(offset)) {\n        if (!isFinite(length)) {\n          encoding = length;\n          length = undefined;\n        }\n      } else {\n        // legacy\n        var swap = encoding;\n        encoding = offset;\n        offset = length;\n        length = swap;\n      }\n\n      offset = +offset || 0;\n      var remaining = this.length - offset;\n\n      if (!length) {\n        length = remaining;\n      } else {\n        length = +length;\n\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      encoding = String(encoding || 'utf8').toLowerCase(); // Use native conversion when possible\n\n      if (Buffer.isNativeEncoding(encoding)) return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n      if (string.length > 0 && (length < 0 || offset < 0)) throw new RangeError('attempt to write beyond buffer bounds'); // Otherwise, use our encoding method.\n\n      var buf = iconv.encode(string, encoding);\n      if (buf.length < length) length = buf.length;\n      buf.copy(this, offset, 0, length);\n      return length;\n    }; // -- Buffer ---------------------------------------------------------------\n\n\n    original.BufferIsEncoding = Buffer.isEncoding;\n\n    Buffer.isEncoding = function (encoding) {\n      return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n    };\n\n    original.BufferByteLength = Buffer.byteLength;\n\n    Buffer.byteLength = SlowBuffer.byteLength = function (str, encoding) {\n      encoding = String(encoding || 'utf8').toLowerCase(); // Use native conversion when possible\n\n      if (Buffer.isNativeEncoding(encoding)) return original.BufferByteLength.call(this, str, encoding); // Slow, I know, but we don't have a better way yet.\n\n      return iconv.encode(str, encoding).length;\n    };\n\n    original.BufferToString = Buffer.prototype.toString;\n\n    Buffer.prototype.toString = function (encoding, start, end) {\n      encoding = String(encoding || 'utf8').toLowerCase(); // Use native conversion when possible\n\n      if (Buffer.isNativeEncoding(encoding)) return original.BufferToString.call(this, encoding, start, end); // Otherwise, use our decoding method.\n\n      if (typeof start == 'undefined') start = 0;\n      if (typeof end == 'undefined') end = this.length;\n      return iconv.decode(this.slice(start, end), encoding);\n    };\n\n    original.BufferWrite = Buffer.prototype.write;\n\n    Buffer.prototype.write = function (string, offset, length, encoding) {\n      var _offset = offset,\n          _length = length,\n          _encoding = encoding; // Support both (string, offset, length, encoding)\n      // and the legacy (string, encoding, offset, length)\n\n      if (isFinite(offset)) {\n        if (!isFinite(length)) {\n          encoding = length;\n          length = undefined;\n        }\n      } else {\n        // legacy\n        var swap = encoding;\n        encoding = offset;\n        offset = length;\n        length = swap;\n      }\n\n      encoding = String(encoding || 'utf8').toLowerCase(); // Use native conversion when possible\n\n      if (Buffer.isNativeEncoding(encoding)) return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n      offset = +offset || 0;\n      var remaining = this.length - offset;\n\n      if (!length) {\n        length = remaining;\n      } else {\n        length = +length;\n\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      if (string.length > 0 && (length < 0 || offset < 0)) throw new RangeError('attempt to write beyond buffer bounds'); // Otherwise, use our encoding method.\n\n      var buf = iconv.encode(string, encoding);\n      if (buf.length < length) length = buf.length;\n      buf.copy(this, offset, 0, length);\n      return length; // TODO: Set _charsWritten.\n    }; // -- Readable -------------------------------------------------------------\n\n\n    if (iconv.supportsStreams) {\n      var Readable = require('stream').Readable;\n\n      original.ReadableSetEncoding = Readable.prototype.setEncoding;\n\n      Readable.prototype.setEncoding = function setEncoding(enc, options) {\n        // Use our own decoder, it has the same interface.\n        // We cannot use original function as it doesn't handle BOM-s.\n        this._readableState.decoder = iconv.getDecoder(enc, options);\n        this._readableState.encoding = enc;\n      };\n\n      Readable.prototype.collect = iconv._collect;\n    }\n  }; // Remove iconv-lite Node primitive extensions.\n\n\n  iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n    if (!iconv.supportsNodeEncodingsExtension) return;\n    if (!original) throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\");\n    delete Buffer.isNativeEncoding;\n\n    var SlowBuffer = require('buffer').SlowBuffer;\n\n    SlowBuffer.prototype.toString = original.SlowBufferToString;\n    SlowBuffer.prototype.write = original.SlowBufferWrite;\n    Buffer.isEncoding = original.BufferIsEncoding;\n    Buffer.byteLength = original.BufferByteLength;\n    Buffer.prototype.toString = original.BufferToString;\n    Buffer.prototype.write = original.BufferWrite;\n\n    if (iconv.supportsStreams) {\n      var Readable = require('stream').Readable;\n\n      Readable.prototype.setEncoding = original.ReadableSetEncoding;\n      delete Readable.prototype.collect;\n    }\n\n    original = undefined;\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "extend-node.js"
      ],
      "names": [
        "Buffer",
        "require",
        "module",
        "exports",
        "iconv",
        "original",
        "undefined",
        "supportsNodeEncodingsExtension",
        "from",
        "Uint8Array",
        "extendNodeEncodings",
        "console",
        "error",
        "nodeNativeEncodings",
        "isNativeEncoding",
        "enc",
        "toLowerCase",
        "SlowBuffer",
        "SlowBufferToString",
        "prototype",
        "toString",
        "encoding",
        "start",
        "end",
        "String",
        "call",
        "length",
        "decode",
        "slice",
        "SlowBufferWrite",
        "write",
        "string",
        "offset",
        "isFinite",
        "swap",
        "remaining",
        "RangeError",
        "buf",
        "encode",
        "copy",
        "BufferIsEncoding",
        "isEncoding",
        "encodingExists",
        "BufferByteLength",
        "byteLength",
        "str",
        "BufferToString",
        "BufferWrite",
        "_offset",
        "_length",
        "_encoding",
        "supportsStreams",
        "Readable",
        "ReadableSetEncoding",
        "setEncoding",
        "options",
        "_readableState",
        "decoder",
        "getDecoder",
        "collect",
        "_collect",
        "undoExtendNodeEncodings",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\iconv-lite\\lib\\",
      "sourcesContent": [
        "\"use strict\";\r\nvar Buffer = require(\"buffer\").Buffer;\r\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\r\n\r\n// == Extend Node primitives to use iconv-lite =================================\r\n\r\nmodule.exports = function (iconv) {\r\n    var original = undefined; // Place to keep original methods.\r\n\r\n    // Node authors rewrote Buffer internals to make it compatible with\r\n    // Uint8Array and we cannot patch key functions since then.\r\n    // Note: this does use older Buffer API on a purpose\r\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\r\n\r\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\r\n        if (original) return;\r\n        original = {};\r\n\r\n        if (!iconv.supportsNodeEncodingsExtension) {\r\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\r\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\r\n            return;\r\n        }\r\n\r\n        var nodeNativeEncodings = {\r\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \r\n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\r\n        };\r\n\r\n        Buffer.isNativeEncoding = function(enc) {\r\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\r\n        }\r\n\r\n        // -- SlowBuffer -----------------------------------------------------------\r\n        var SlowBuffer = require('buffer').SlowBuffer;\r\n\r\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\r\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\r\n            encoding = String(encoding || 'utf8').toLowerCase();\r\n\r\n            // Use native conversion when possible\r\n            if (Buffer.isNativeEncoding(encoding))\r\n                return original.SlowBufferToString.call(this, encoding, start, end);\r\n\r\n            // Otherwise, use our decoding method.\r\n            if (typeof start == 'undefined') start = 0;\r\n            if (typeof end == 'undefined') end = this.length;\r\n            return iconv.decode(this.slice(start, end), encoding);\r\n        }\r\n\r\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\r\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\r\n            // Support both (string, offset, length, encoding)\r\n            // and the legacy (string, encoding, offset, length)\r\n            if (isFinite(offset)) {\r\n                if (!isFinite(length)) {\r\n                    encoding = length;\r\n                    length = undefined;\r\n                }\r\n            } else {  // legacy\r\n                var swap = encoding;\r\n                encoding = offset;\r\n                offset = length;\r\n                length = swap;\r\n            }\r\n\r\n            offset = +offset || 0;\r\n            var remaining = this.length - offset;\r\n            if (!length) {\r\n                length = remaining;\r\n            } else {\r\n                length = +length;\r\n                if (length > remaining) {\r\n                    length = remaining;\r\n                }\r\n            }\r\n            encoding = String(encoding || 'utf8').toLowerCase();\r\n\r\n            // Use native conversion when possible\r\n            if (Buffer.isNativeEncoding(encoding))\r\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\r\n\r\n            if (string.length > 0 && (length < 0 || offset < 0))\r\n                throw new RangeError('attempt to write beyond buffer bounds');\r\n\r\n            // Otherwise, use our encoding method.\r\n            var buf = iconv.encode(string, encoding);\r\n            if (buf.length < length) length = buf.length;\r\n            buf.copy(this, offset, 0, length);\r\n            return length;\r\n        }\r\n\r\n        // -- Buffer ---------------------------------------------------------------\r\n\r\n        original.BufferIsEncoding = Buffer.isEncoding;\r\n        Buffer.isEncoding = function(encoding) {\r\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\r\n        }\r\n\r\n        original.BufferByteLength = Buffer.byteLength;\r\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\r\n            encoding = String(encoding || 'utf8').toLowerCase();\r\n\r\n            // Use native conversion when possible\r\n            if (Buffer.isNativeEncoding(encoding))\r\n                return original.BufferByteLength.call(this, str, encoding);\r\n\r\n            // Slow, I know, but we don't have a better way yet.\r\n            return iconv.encode(str, encoding).length;\r\n        }\r\n\r\n        original.BufferToString = Buffer.prototype.toString;\r\n        Buffer.prototype.toString = function(encoding, start, end) {\r\n            encoding = String(encoding || 'utf8').toLowerCase();\r\n\r\n            // Use native conversion when possible\r\n            if (Buffer.isNativeEncoding(encoding))\r\n                return original.BufferToString.call(this, encoding, start, end);\r\n\r\n            // Otherwise, use our decoding method.\r\n            if (typeof start == 'undefined') start = 0;\r\n            if (typeof end == 'undefined') end = this.length;\r\n            return iconv.decode(this.slice(start, end), encoding);\r\n        }\r\n\r\n        original.BufferWrite = Buffer.prototype.write;\r\n        Buffer.prototype.write = function(string, offset, length, encoding) {\r\n            var _offset = offset, _length = length, _encoding = encoding;\r\n            // Support both (string, offset, length, encoding)\r\n            // and the legacy (string, encoding, offset, length)\r\n            if (isFinite(offset)) {\r\n                if (!isFinite(length)) {\r\n                    encoding = length;\r\n                    length = undefined;\r\n                }\r\n            } else {  // legacy\r\n                var swap = encoding;\r\n                encoding = offset;\r\n                offset = length;\r\n                length = swap;\r\n            }\r\n\r\n            encoding = String(encoding || 'utf8').toLowerCase();\r\n\r\n            // Use native conversion when possible\r\n            if (Buffer.isNativeEncoding(encoding))\r\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\r\n\r\n            offset = +offset || 0;\r\n            var remaining = this.length - offset;\r\n            if (!length) {\r\n                length = remaining;\r\n            } else {\r\n                length = +length;\r\n                if (length > remaining) {\r\n                    length = remaining;\r\n                }\r\n            }\r\n\r\n            if (string.length > 0 && (length < 0 || offset < 0))\r\n                throw new RangeError('attempt to write beyond buffer bounds');\r\n\r\n            // Otherwise, use our encoding method.\r\n            var buf = iconv.encode(string, encoding);\r\n            if (buf.length < length) length = buf.length;\r\n            buf.copy(this, offset, 0, length);\r\n            return length;\r\n\r\n            // TODO: Set _charsWritten.\r\n        }\r\n\r\n\r\n        // -- Readable -------------------------------------------------------------\r\n        if (iconv.supportsStreams) {\r\n            var Readable = require('stream').Readable;\r\n\r\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\r\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\r\n                // Use our own decoder, it has the same interface.\r\n                // We cannot use original function as it doesn't handle BOM-s.\r\n                this._readableState.decoder = iconv.getDecoder(enc, options);\r\n                this._readableState.encoding = enc;\r\n            }\r\n\r\n            Readable.prototype.collect = iconv._collect;\r\n        }\r\n    }\r\n\r\n    // Remove iconv-lite Node primitive extensions.\r\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\r\n        if (!iconv.supportsNodeEncodingsExtension)\r\n            return;\r\n        if (!original)\r\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\r\n\r\n        delete Buffer.isNativeEncoding;\r\n\r\n        var SlowBuffer = require('buffer').SlowBuffer;\r\n\r\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\r\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\r\n\r\n        Buffer.isEncoding = original.BufferIsEncoding;\r\n        Buffer.byteLength = original.BufferByteLength;\r\n        Buffer.prototype.toString = original.BufferToString;\r\n        Buffer.prototype.write = original.BufferWrite;\r\n\r\n        if (iconv.supportsStreams) {\r\n            var Readable = require('stream').Readable;\r\n\r\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\r\n            delete Readable.prototype.collect;\r\n        }\r\n\r\n        original = undefined;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211430
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\raw.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\raw.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\raw.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\raw.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
        "sourceFileName": "raw.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n */\n\nvar bytes = require('bytes');\n\nvar debug = require('debug')('body-parser:raw');\n\nvar read = require('../read');\n\nvar typeis = require('type-is');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = raw;\n/**\r\n * Create a middleware to parse raw bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @api public\r\n */\n\nfunction raw(options) {\n  var opts = options || {};\n  var inflate = opts.inflate !== false;\n  var limit = typeof opts.limit !== 'number' ? bytes.parse(opts.limit || '100kb') : opts.limit;\n  var type = opts.type || 'application/octet-stream';\n  var verify = opts.verify || false;\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function');\n  } // create the appropriate type checking function\n\n\n  var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;\n\n  function parse(buf) {\n    return buf;\n  }\n\n  return function rawParser(req, res, next) {\n    if (req._body) {\n      debug('body already parsed');\n      next();\n      return;\n    }\n\n    req.body = req.body || {}; // skip requests without bodies\n\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body');\n      next();\n      return;\n    }\n\n    debug('content-type %j', req.headers['content-type']); // determine if request should be parsed\n\n    if (!shouldParse(req)) {\n      debug('skip parsing');\n      next();\n      return;\n    } // read\n\n\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    });\n  };\n}\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\n\n\nfunction typeChecker(type) {\n  return function checkType(req) {\n    return Boolean(typeis(req, type));\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhdy5qcyJdLCJuYW1lcyI6WyJieXRlcyIsInJlcXVpcmUiLCJkZWJ1ZyIsInJlYWQiLCJ0eXBlaXMiLCJtb2R1bGUiLCJleHBvcnRzIiwicmF3Iiwib3B0aW9ucyIsIm9wdHMiLCJpbmZsYXRlIiwibGltaXQiLCJwYXJzZSIsInR5cGUiLCJ2ZXJpZnkiLCJUeXBlRXJyb3IiLCJzaG91bGRQYXJzZSIsInR5cGVDaGVja2VyIiwiYnVmIiwicmF3UGFyc2VyIiwicmVxIiwicmVzIiwibmV4dCIsIl9ib2R5IiwiYm9keSIsImhhc0JvZHkiLCJoZWFkZXJzIiwiZW5jb2RpbmciLCJjaGVja1R5cGUiLCJCb29sZWFuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFDQSxJQUFJQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQVAsQ0FBaUIsaUJBQWpCLENBQVo7O0FBQ0EsSUFBSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsU0FBRCxDQUFsQjs7QUFDQSxJQUFJRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQXBCO0FBRUE7QUFDQTtBQUNBOzs7QUFFQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxHQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLEdBQVQsQ0FBY0MsT0FBZCxFQUF1QjtBQUNyQixNQUFJQyxJQUFJLEdBQUdELE9BQU8sSUFBSSxFQUF0QjtBQUVBLE1BQUlFLE9BQU8sR0FBR0QsSUFBSSxDQUFDQyxPQUFMLEtBQWlCLEtBQS9CO0FBQ0EsTUFBSUMsS0FBSyxHQUFHLE9BQU9GLElBQUksQ0FBQ0UsS0FBWixLQUFzQixRQUF0QixHQUNSWCxLQUFLLENBQUNZLEtBQU4sQ0FBWUgsSUFBSSxDQUFDRSxLQUFMLElBQWMsT0FBMUIsQ0FEUSxHQUVSRixJQUFJLENBQUNFLEtBRlQ7QUFHQSxNQUFJRSxJQUFJLEdBQUdKLElBQUksQ0FBQ0ksSUFBTCxJQUFhLDBCQUF4QjtBQUNBLE1BQUlDLE1BQU0sR0FBR0wsSUFBSSxDQUFDSyxNQUFMLElBQWUsS0FBNUI7O0FBRUEsTUFBSUEsTUFBTSxLQUFLLEtBQVgsSUFBb0IsT0FBT0EsTUFBUCxLQUFrQixVQUExQyxFQUFzRDtBQUNwRCxVQUFNLElBQUlDLFNBQUosQ0FBYyxnQ0FBZCxDQUFOO0FBQ0QsR0Fab0IsQ0FjckI7OztBQUNBLE1BQUlDLFdBQVcsR0FBRyxPQUFPSCxJQUFQLEtBQWdCLFVBQWhCLEdBQ2RJLFdBQVcsQ0FBQ0osSUFBRCxDQURHLEdBRWRBLElBRko7O0FBSUEsV0FBU0QsS0FBVCxDQUFnQk0sR0FBaEIsRUFBcUI7QUFDbkIsV0FBT0EsR0FBUDtBQUNEOztBQUVELFNBQU8sU0FBU0MsU0FBVCxDQUFvQkMsR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUN6QyxRQUFJRixHQUFHLENBQUNHLEtBQVIsRUFBZTtBQUNickIsTUFBQUEsS0FBSyxDQUFDLHFCQUFELENBQUw7QUFDQW9CLE1BQUFBLElBQUk7QUFDSjtBQUNEOztBQUVERixJQUFBQSxHQUFHLENBQUNJLElBQUosR0FBV0osR0FBRyxDQUFDSSxJQUFKLElBQVksRUFBdkIsQ0FQeUMsQ0FTekM7O0FBQ0EsUUFBSSxDQUFDcEIsTUFBTSxDQUFDcUIsT0FBUCxDQUFlTCxHQUFmLENBQUwsRUFBMEI7QUFDeEJsQixNQUFBQSxLQUFLLENBQUMsaUJBQUQsQ0FBTDtBQUNBb0IsTUFBQUEsSUFBSTtBQUNKO0FBQ0Q7O0FBRURwQixJQUFBQSxLQUFLLENBQUMsaUJBQUQsRUFBb0JrQixHQUFHLENBQUNNLE9BQUosQ0FBWSxjQUFaLENBQXBCLENBQUwsQ0FoQnlDLENBa0J6Qzs7QUFDQSxRQUFJLENBQUNWLFdBQVcsQ0FBQ0ksR0FBRCxDQUFoQixFQUF1QjtBQUNyQmxCLE1BQUFBLEtBQUssQ0FBQyxjQUFELENBQUw7QUFDQW9CLE1BQUFBLElBQUk7QUFDSjtBQUNELEtBdkJ3QyxDQXlCekM7OztBQUNBbkIsSUFBQUEsSUFBSSxDQUFDaUIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBaUJWLEtBQWpCLEVBQXdCVixLQUF4QixFQUErQjtBQUNqQ3lCLE1BQUFBLFFBQVEsRUFBRSxJQUR1QjtBQUVqQ2pCLE1BQUFBLE9BQU8sRUFBRUEsT0FGd0I7QUFHakNDLE1BQUFBLEtBQUssRUFBRUEsS0FIMEI7QUFJakNHLE1BQUFBLE1BQU0sRUFBRUE7QUFKeUIsS0FBL0IsQ0FBSjtBQU1ELEdBaENEO0FBaUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxTQUFTRyxXQUFULENBQXNCSixJQUF0QixFQUE0QjtBQUMxQixTQUFPLFNBQVNlLFNBQVQsQ0FBb0JSLEdBQXBCLEVBQXlCO0FBQzlCLFdBQU9TLE9BQU8sQ0FBQ3pCLE1BQU0sQ0FBQ2dCLEdBQUQsRUFBTVAsSUFBTixDQUFQLENBQWQ7QUFDRCxHQUZEO0FBR0QiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFxub2RlX21vZHVsZXNcXGJvZHktcGFyc2VyXFxsaWJcXHR5cGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogYm9keS1wYXJzZXJcclxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxyXG4gKiBNSVQgTGljZW5zZWRcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxyXG4gKi9cclxuXHJcbnZhciBieXRlcyA9IHJlcXVpcmUoJ2J5dGVzJylcclxudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnYm9keS1wYXJzZXI6cmF3JylcclxudmFyIHJlYWQgPSByZXF1aXJlKCcuLi9yZWFkJylcclxudmFyIHR5cGVpcyA9IHJlcXVpcmUoJ3R5cGUtaXMnKVxyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKi9cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcmF3XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGEgbWlkZGxld2FyZSB0byBwYXJzZSByYXcgYm9kaWVzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXHJcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHJhdyAob3B0aW9ucykge1xyXG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICB2YXIgaW5mbGF0ZSA9IG9wdHMuaW5mbGF0ZSAhPT0gZmFsc2VcclxuICB2YXIgbGltaXQgPSB0eXBlb2Ygb3B0cy5saW1pdCAhPT0gJ251bWJlcidcclxuICAgID8gYnl0ZXMucGFyc2Uob3B0cy5saW1pdCB8fCAnMTAwa2InKVxyXG4gICAgOiBvcHRzLmxpbWl0XHJcbiAgdmFyIHR5cGUgPSBvcHRzLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSdcclxuICB2YXIgdmVyaWZ5ID0gb3B0cy52ZXJpZnkgfHwgZmFsc2VcclxuXHJcbiAgaWYgKHZlcmlmeSAhPT0gZmFsc2UgJiYgdHlwZW9mIHZlcmlmeSAhPT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHZlcmlmeSBtdXN0IGJlIGZ1bmN0aW9uJylcclxuICB9XHJcblxyXG4gIC8vIGNyZWF0ZSB0aGUgYXBwcm9wcmlhdGUgdHlwZSBjaGVja2luZyBmdW5jdGlvblxyXG4gIHZhciBzaG91bGRQYXJzZSA9IHR5cGVvZiB0eXBlICE9PSAnZnVuY3Rpb24nXHJcbiAgICA/IHR5cGVDaGVja2VyKHR5cGUpXHJcbiAgICA6IHR5cGVcclxuXHJcbiAgZnVuY3Rpb24gcGFyc2UgKGJ1Zikge1xyXG4gICAgcmV0dXJuIGJ1ZlxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZ1bmN0aW9uIHJhd1BhcnNlciAocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGlmIChyZXEuX2JvZHkpIHtcclxuICAgICAgZGVidWcoJ2JvZHkgYWxyZWFkeSBwYXJzZWQnKVxyXG4gICAgICBuZXh0KClcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgcmVxLmJvZHkgPSByZXEuYm9keSB8fCB7fVxyXG5cclxuICAgIC8vIHNraXAgcmVxdWVzdHMgd2l0aG91dCBib2RpZXNcclxuICAgIGlmICghdHlwZWlzLmhhc0JvZHkocmVxKSkge1xyXG4gICAgICBkZWJ1Zygnc2tpcCBlbXB0eSBib2R5JylcclxuICAgICAgbmV4dCgpXHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG5cclxuICAgIGRlYnVnKCdjb250ZW50LXR5cGUgJWonLCByZXEuaGVhZGVyc1snY29udGVudC10eXBlJ10pXHJcblxyXG4gICAgLy8gZGV0ZXJtaW5lIGlmIHJlcXVlc3Qgc2hvdWxkIGJlIHBhcnNlZFxyXG4gICAgaWYgKCFzaG91bGRQYXJzZShyZXEpKSB7XHJcbiAgICAgIGRlYnVnKCdza2lwIHBhcnNpbmcnKVxyXG4gICAgICBuZXh0KClcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgLy8gcmVhZFxyXG4gICAgcmVhZChyZXEsIHJlcywgbmV4dCwgcGFyc2UsIGRlYnVnLCB7XHJcbiAgICAgIGVuY29kaW5nOiBudWxsLFxyXG4gICAgICBpbmZsYXRlOiBpbmZsYXRlLFxyXG4gICAgICBsaW1pdDogbGltaXQsXHJcbiAgICAgIHZlcmlmeTogdmVyaWZ5XHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCB0aGUgc2ltcGxlIHR5cGUgY2hlY2tlci5cclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcclxuICogQHJldHVybiB7ZnVuY3Rpb259XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gdHlwZUNoZWNrZXIgKHR5cGUpIHtcclxuICByZXR1cm4gZnVuY3Rpb24gY2hlY2tUeXBlIChyZXEpIHtcclxuICAgIHJldHVybiBCb29sZWFuKHR5cGVpcyhyZXEsIHR5cGUpKVxyXG4gIH1cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "raw.js"
      ],
      "names": [
        "bytes",
        "require",
        "debug",
        "read",
        "typeis",
        "module",
        "exports",
        "raw",
        "options",
        "opts",
        "inflate",
        "limit",
        "parse",
        "type",
        "verify",
        "TypeError",
        "shouldParse",
        "typeChecker",
        "buf",
        "rawParser",
        "req",
        "res",
        "next",
        "_body",
        "body",
        "hasBody",
        "headers",
        "encoding",
        "checkType",
        "Boolean"
      ],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiB,iBAAjB,CAAZ;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;AAEA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAT,CAAcC,OAAd,EAAuB;AACrB,MAAIC,IAAI,GAAGD,OAAO,IAAI,EAAtB;AAEA,MAAIE,OAAO,GAAGD,IAAI,CAACC,OAAL,KAAiB,KAA/B;AACA,MAAIC,KAAK,GAAG,OAAOF,IAAI,CAACE,KAAZ,KAAsB,QAAtB,GACRX,KAAK,CAACY,KAAN,CAAYH,IAAI,CAACE,KAAL,IAAc,OAA1B,CADQ,GAERF,IAAI,CAACE,KAFT;AAGA,MAAIE,IAAI,GAAGJ,IAAI,CAACI,IAAL,IAAa,0BAAxB;AACA,MAAIC,MAAM,GAAGL,IAAI,CAACK,MAAL,IAAe,KAA5B;;AAEA,MAAIA,MAAM,KAAK,KAAX,IAAoB,OAAOA,MAAP,KAAkB,UAA1C,EAAsD;AACpD,UAAM,IAAIC,SAAJ,CAAc,gCAAd,CAAN;AACD,GAZoB,CAcrB;;;AACA,MAAIC,WAAW,GAAG,OAAOH,IAAP,KAAgB,UAAhB,GACdI,WAAW,CAACJ,IAAD,CADG,GAEdA,IAFJ;;AAIA,WAASD,KAAT,CAAgBM,GAAhB,EAAqB;AACnB,WAAOA,GAAP;AACD;;AAED,SAAO,SAASC,SAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AACzC,QAAIF,GAAG,CAACG,KAAR,EAAe;AACbrB,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACAoB,MAAAA,IAAI;AACJ;AACD;;AAEDF,IAAAA,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAJ,IAAY,EAAvB,CAPyC,CASzC;;AACA,QAAI,CAACpB,MAAM,CAACqB,OAAP,CAAeL,GAAf,CAAL,EAA0B;AACxBlB,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACAoB,MAAAA,IAAI;AACJ;AACD;;AAEDpB,IAAAA,KAAK,CAAC,iBAAD,EAAoBkB,GAAG,CAACM,OAAJ,CAAY,cAAZ,CAApB,CAAL,CAhByC,CAkBzC;;AACA,QAAI,CAACV,WAAW,CAACI,GAAD,CAAhB,EAAuB;AACrBlB,MAAAA,KAAK,CAAC,cAAD,CAAL;AACAoB,MAAAA,IAAI;AACJ;AACD,KAvBwC,CAyBzC;;;AACAnB,IAAAA,IAAI,CAACiB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBV,KAAjB,EAAwBV,KAAxB,EAA+B;AACjCyB,MAAAA,QAAQ,EAAE,IADuB;AAEjCjB,MAAAA,OAAO,EAAEA,OAFwB;AAGjCC,MAAAA,KAAK,EAAEA,KAH0B;AAIjCG,MAAAA,MAAM,EAAEA;AAJyB,KAA/B,CAAJ;AAMD,GAhCD;AAiCD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASG,WAAT,CAAsBJ,IAAtB,EAA4B;AAC1B,SAAO,SAASe,SAAT,CAAoBR,GAApB,EAAyB;AAC9B,WAAOS,OAAO,CAACzB,MAAM,CAACgB,GAAD,EAAMP,IAAN,CAAP,CAAd;AACD,GAFD;AAGD",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "sourcesContent": [
        "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar debug = require('debug')('body-parser:raw')\r\nvar read = require('../read')\r\nvar typeis = require('type-is')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = raw\r\n\r\n/**\r\n * Create a middleware to parse raw bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @api public\r\n */\r\n\r\nfunction raw (options) {\r\n  var opts = options || {}\r\n\r\n  var inflate = opts.inflate !== false\r\n  var limit = typeof opts.limit !== 'number'\r\n    ? bytes.parse(opts.limit || '100kb')\r\n    : opts.limit\r\n  var type = opts.type || 'application/octet-stream'\r\n  var verify = opts.verify || false\r\n\r\n  if (verify !== false && typeof verify !== 'function') {\r\n    throw new TypeError('option verify must be function')\r\n  }\r\n\r\n  // create the appropriate type checking function\r\n  var shouldParse = typeof type !== 'function'\r\n    ? typeChecker(type)\r\n    : type\r\n\r\n  function parse (buf) {\r\n    return buf\r\n  }\r\n\r\n  return function rawParser (req, res, next) {\r\n    if (req._body) {\r\n      debug('body already parsed')\r\n      next()\r\n      return\r\n    }\r\n\r\n    req.body = req.body || {}\r\n\r\n    // skip requests without bodies\r\n    if (!typeis.hasBody(req)) {\r\n      debug('skip empty body')\r\n      next()\r\n      return\r\n    }\r\n\r\n    debug('content-type %j', req.headers['content-type'])\r\n\r\n    // determine if request should be parsed\r\n    if (!shouldParse(req)) {\r\n      debug('skip parsing')\r\n      next()\r\n      return\r\n    }\r\n\r\n    // read\r\n    read(req, res, next, parse, debug, {\r\n      encoding: null,\r\n      inflate: inflate,\r\n      limit: limit,\r\n      verify: verify\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\r\n\r\nfunction typeChecker (type) {\r\n  return function checkType (req) {\r\n    return Boolean(typeis(req, type))\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210743
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\serve-static\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\serve-static\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\serve-static\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\serve-static\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\serve-static\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\serve-static\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\serve-static\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * serve-static\r\n * Copyright(c) 2010 Sencha Inc.\r\n * Copyright(c) 2011 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar parseUrl = require('parseurl');\n\nvar resolve = require('path').resolve;\n\nvar send = require('send');\n\nvar url = require('url');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = serveStatic;\nmodule.exports.mime = send.mime;\n/**\r\n * @param {string} root\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\n\nfunction serveStatic(root, options) {\n  if (!root) {\n    throw new TypeError('root path required');\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string');\n  } // copy options object\n\n\n  var opts = Object.create(options || null); // fall-though\n\n  var fallthrough = opts.fallthrough !== false; // default redirect\n\n  var redirect = opts.redirect !== false; // headers listener\n\n  var setHeaders = opts.setHeaders;\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function');\n  } // setup options for send\n\n\n  opts.maxage = opts.maxage || opts.maxAge || 0;\n  opts.root = resolve(root); // construct directory listener\n\n  var onDirectory = redirect ? createRedirectDirectoryListener() : createNotFoundDirectoryListener();\n  return function serveStatic(req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next();\n      } // method not allowed\n\n\n      res.statusCode = 405;\n      res.setHeader('Allow', 'GET, HEAD');\n      res.setHeader('Content-Length', '0');\n      res.end();\n      return;\n    }\n\n    var forwardError = !fallthrough;\n    var originalUrl = parseUrl.original(req);\n    var path = parseUrl(req).pathname; // make sure redirect occurs at mount\n\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = '';\n    } // create send stream\n\n\n    var stream = send(req, path, opts); // add directory handler\n\n    stream.on('directory', onDirectory); // add headers listener\n\n    if (setHeaders) {\n      stream.on('headers', setHeaders);\n    } // add file listener for fallthrough\n\n\n    if (fallthrough) {\n      stream.on('file', function onFile() {\n        // once file is determined, always forward error\n        forwardError = true;\n      });\n    } // forward errors\n\n\n    stream.on('error', function error(err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err);\n        return;\n      }\n\n      next();\n    }); // pipe\n\n    stream.pipe(res);\n  };\n}\n/**\r\n * Collapse all leading slashes into a single slash\r\n * @private\r\n */\n\n\nfunction collapseLeadingSlashes(str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f\n    /* / */\n    ) {\n      break;\n    }\n  }\n\n  return i > 1 ? '/' + str.substr(i) : str;\n}\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\n\n\nfunction createHtmlDocument(title, body) {\n  return '<!DOCTYPE html>\\n' + '<html lang=\"en\">\\n' + '<head>\\n' + '<meta charset=\"utf-8\">\\n' + '<title>' + title + '</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>' + body + '</pre>\\n' + '</body>\\n' + '</html>\\n';\n}\n/**\r\n * Create a directory listener that just 404s.\r\n * @private\r\n */\n\n\nfunction createNotFoundDirectoryListener() {\n  return function notFound() {\n    this.error(404);\n  };\n}\n/**\r\n * Create a directory listener that performs a redirect.\r\n * @private\r\n */\n\n\nfunction createRedirectDirectoryListener() {\n  return function redirect(res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404);\n      return;\n    } // get original URL\n\n\n    var originalUrl = parseUrl.original(this.req); // append trailing slash\n\n    originalUrl.path = null;\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/'); // reformat the URL\n\n    var loc = encodeUrl(url.format(originalUrl));\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' + escapeHtml(loc) + '</a>'); // send redirect response\n\n    res.statusCode = 301;\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n    res.setHeader('Content-Length', Buffer.byteLength(doc));\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n    res.setHeader('Location', loc);\n    res.end(doc);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "encodeUrl",
        "require",
        "escapeHtml",
        "parseUrl",
        "resolve",
        "send",
        "url",
        "module",
        "exports",
        "serveStatic",
        "mime",
        "root",
        "options",
        "TypeError",
        "opts",
        "Object",
        "create",
        "fallthrough",
        "redirect",
        "setHeaders",
        "maxage",
        "maxAge",
        "onDirectory",
        "createRedirectDirectoryListener",
        "createNotFoundDirectoryListener",
        "req",
        "res",
        "next",
        "method",
        "statusCode",
        "setHeader",
        "end",
        "forwardError",
        "originalUrl",
        "original",
        "path",
        "pathname",
        "substr",
        "stream",
        "on",
        "onFile",
        "error",
        "err",
        "pipe",
        "collapseLeadingSlashes",
        "str",
        "i",
        "length",
        "charCodeAt",
        "createHtmlDocument",
        "title",
        "body",
        "notFound",
        "hasTrailingSlash",
        "loc",
        "format",
        "doc",
        "Buffer",
        "byteLength"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\serve-static\\",
      "sourcesContent": [
        "/*!\r\n * serve-static\r\n * Copyright(c) 2010 Sencha Inc.\r\n * Copyright(c) 2011 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar parseUrl = require('parseurl')\r\nvar resolve = require('path').resolve\r\nvar send = require('send')\r\nvar url = require('url')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = serveStatic\r\nmodule.exports.mime = send.mime\r\n\r\n/**\r\n * @param {string} root\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction serveStatic (root, options) {\r\n  if (!root) {\r\n    throw new TypeError('root path required')\r\n  }\r\n\r\n  if (typeof root !== 'string') {\r\n    throw new TypeError('root path must be a string')\r\n  }\r\n\r\n  // copy options object\r\n  var opts = Object.create(options || null)\r\n\r\n  // fall-though\r\n  var fallthrough = opts.fallthrough !== false\r\n\r\n  // default redirect\r\n  var redirect = opts.redirect !== false\r\n\r\n  // headers listener\r\n  var setHeaders = opts.setHeaders\r\n\r\n  if (setHeaders && typeof setHeaders !== 'function') {\r\n    throw new TypeError('option setHeaders must be function')\r\n  }\r\n\r\n  // setup options for send\r\n  opts.maxage = opts.maxage || opts.maxAge || 0\r\n  opts.root = resolve(root)\r\n\r\n  // construct directory listener\r\n  var onDirectory = redirect\r\n    ? createRedirectDirectoryListener()\r\n    : createNotFoundDirectoryListener()\r\n\r\n  return function serveStatic (req, res, next) {\r\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\r\n      if (fallthrough) {\r\n        return next()\r\n      }\r\n\r\n      // method not allowed\r\n      res.statusCode = 405\r\n      res.setHeader('Allow', 'GET, HEAD')\r\n      res.setHeader('Content-Length', '0')\r\n      res.end()\r\n      return\r\n    }\r\n\r\n    var forwardError = !fallthrough\r\n    var originalUrl = parseUrl.original(req)\r\n    var path = parseUrl(req).pathname\r\n\r\n    // make sure redirect occurs at mount\r\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\r\n      path = ''\r\n    }\r\n\r\n    // create send stream\r\n    var stream = send(req, path, opts)\r\n\r\n    // add directory handler\r\n    stream.on('directory', onDirectory)\r\n\r\n    // add headers listener\r\n    if (setHeaders) {\r\n      stream.on('headers', setHeaders)\r\n    }\r\n\r\n    // add file listener for fallthrough\r\n    if (fallthrough) {\r\n      stream.on('file', function onFile () {\r\n        // once file is determined, always forward error\r\n        forwardError = true\r\n      })\r\n    }\r\n\r\n    // forward errors\r\n    stream.on('error', function error (err) {\r\n      if (forwardError || !(err.statusCode < 500)) {\r\n        next(err)\r\n        return\r\n      }\r\n\r\n      next()\r\n    })\r\n\r\n    // pipe\r\n    stream.pipe(res)\r\n  }\r\n}\r\n\r\n/**\r\n * Collapse all leading slashes into a single slash\r\n * @private\r\n */\r\nfunction collapseLeadingSlashes (str) {\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\r\n      break\r\n    }\r\n  }\r\n\r\n  return i > 1\r\n    ? '/' + str.substr(i)\r\n    : str\r\n}\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (title, body) {\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>' + title + '</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Create a directory listener that just 404s.\r\n * @private\r\n */\r\n\r\nfunction createNotFoundDirectoryListener () {\r\n  return function notFound () {\r\n    this.error(404)\r\n  }\r\n}\r\n\r\n/**\r\n * Create a directory listener that performs a redirect.\r\n * @private\r\n */\r\n\r\nfunction createRedirectDirectoryListener () {\r\n  return function redirect (res) {\r\n    if (this.hasTrailingSlash()) {\r\n      this.error(404)\r\n      return\r\n    }\r\n\r\n    // get original URL\r\n    var originalUrl = parseUrl.original(this.req)\r\n\r\n    // append trailing slash\r\n    originalUrl.path = null\r\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\r\n\r\n    // reformat the URL\r\n    var loc = encodeUrl(url.format(originalUrl))\r\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\r\n      escapeHtml(loc) + '</a>')\r\n\r\n    // send redirect response\r\n    res.statusCode = 301\r\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n    res.setHeader('Location', loc)\r\n    res.end(doc)\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464211945
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\text.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\text.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\text.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\text.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
        "sourceFileName": "text.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n */\n\nvar bytes = require('bytes');\n\nvar contentType = require('content-type');\n\nvar debug = require('debug')('body-parser:text');\n\nvar read = require('../read');\n\nvar typeis = require('type-is');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = text;\n/**\r\n * Create a middleware to parse text bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @api public\r\n */\n\nfunction text(options) {\n  var opts = options || {};\n  var defaultCharset = opts.defaultCharset || 'utf-8';\n  var inflate = opts.inflate !== false;\n  var limit = typeof opts.limit !== 'number' ? bytes.parse(opts.limit || '100kb') : opts.limit;\n  var type = opts.type || 'text/plain';\n  var verify = opts.verify || false;\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function');\n  } // create the appropriate type checking function\n\n\n  var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;\n\n  function parse(buf) {\n    return buf;\n  }\n\n  return function textParser(req, res, next) {\n    if (req._body) {\n      debug('body already parsed');\n      next();\n      return;\n    }\n\n    req.body = req.body || {}; // skip requests without bodies\n\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body');\n      next();\n      return;\n    }\n\n    debug('content-type %j', req.headers['content-type']); // determine if request should be parsed\n\n    if (!shouldParse(req)) {\n      debug('skip parsing');\n      next();\n      return;\n    } // get charset\n\n\n    var charset = getCharset(req) || defaultCharset; // read\n\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    });\n  };\n}\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\n\n\nfunction getCharset(req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase();\n  } catch (e) {\n    return undefined;\n  }\n}\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\n\n\nfunction typeChecker(type) {\n  return function checkType(req) {\n    return Boolean(typeis(req, type));\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHQuanMiXSwibmFtZXMiOlsiYnl0ZXMiLCJyZXF1aXJlIiwiY29udGVudFR5cGUiLCJkZWJ1ZyIsInJlYWQiLCJ0eXBlaXMiLCJtb2R1bGUiLCJleHBvcnRzIiwidGV4dCIsIm9wdGlvbnMiLCJvcHRzIiwiZGVmYXVsdENoYXJzZXQiLCJpbmZsYXRlIiwibGltaXQiLCJwYXJzZSIsInR5cGUiLCJ2ZXJpZnkiLCJUeXBlRXJyb3IiLCJzaG91bGRQYXJzZSIsInR5cGVDaGVja2VyIiwiYnVmIiwidGV4dFBhcnNlciIsInJlcSIsInJlcyIsIm5leHQiLCJfYm9keSIsImJvZHkiLCJoYXNCb2R5IiwiaGVhZGVycyIsImNoYXJzZXQiLCJnZXRDaGFyc2V0IiwiZW5jb2RpbmciLCJwYXJhbWV0ZXJzIiwidG9Mb3dlckNhc2UiLCJlIiwidW5kZWZpbmVkIiwiY2hlY2tUeXBlIiwiQm9vbGVhbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBOztBQUVBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBSUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUF6Qjs7QUFDQSxJQUFJRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQVAsQ0FBaUIsa0JBQWpCLENBQVo7O0FBQ0EsSUFBSUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsU0FBRCxDQUFsQjs7QUFDQSxJQUFJSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxTQUFELENBQXBCO0FBRUE7QUFDQTtBQUNBOzs7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxJQUFqQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLElBQVQsQ0FBZUMsT0FBZixFQUF3QjtBQUN0QixNQUFJQyxJQUFJLEdBQUdELE9BQU8sSUFBSSxFQUF0QjtBQUVBLE1BQUlFLGNBQWMsR0FBR0QsSUFBSSxDQUFD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QUFDaEMsTUFBTSxDQUFDaUIsR0FBRCxFQUFNUCxJQUFOLENBQVAsQ0FBZDtBQUNELEdBRkQ7QUFHRCIsInNvdXJjZVJvb3QiOiJEOlxcVXN1YXJpbyBQYWJsb1xcRGVza3RvcFxcQ29kZXJob3VzZVxcamFtYXpvbmFcXGJhY2tlbmRcXG5vZGVfbW9kdWxlc1xcYm9keS1wYXJzZXJcXGxpYlxcdHlwZXNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBib2R5LXBhcnNlclxyXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXHJcbiAqIE1JVCBMaWNlbnNlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqL1xyXG5cclxudmFyIGJ5dGVzID0gcmVxdWlyZSgnYnl0ZXMnKVxyXG52YXIgY29udGVudFR5cGUgPSByZXF1aXJlKCdjb250ZW50LXR5cGUnKVxyXG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdib2R5LXBhcnNlcjp0ZXh0JylcclxudmFyIHJlYWQgPSByZXF1aXJlKCcuLi9yZWFkJylcclxudmFyIHR5cGVpcyA9IHJlcXVpcmUoJ3R5cGUtaXMnKVxyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKi9cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gdGV4dFxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIG1pZGRsZXdhcmUgdG8gcGFyc2UgdGV4dCBib2RpZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cclxuICogQHJldHVybiB7ZnVuY3Rpb259XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gdGV4dCAob3B0aW9ucykge1xyXG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICB2YXIgZGVmYXVsdENoYXJzZXQgPSBvcHRzLmRlZmF1bHRDaGFyc2V0IHx8ICd1dGYtOCdcclxuICB2YXIgaW5mbGF0ZSA9IG9wdHMuaW5mbGF0ZSAhPT0gZmFsc2VcclxuICB2YXIgbGltaXQgPSB0eXBlb2Ygb3B0cy5saW1pdCAhPT0gJ251bWJlcidcclxuICAgID8gYnl0ZXMucGFyc2Uob3B0cy5saW1pdCB8fCAnMTAwa2InKVxyXG4gICAgOiBvcHRzLmxpbWl0XHJcbiAgdmFyIHR5cGUgPSBvcHRzLnR5cGUgfHwgJ3RleHQvcGxhaW4nXHJcbiAgdmFyIHZlcmlmeSA9IG9wdHMudmVyaWZ5IHx8IGZhbHNlXHJcblxyXG4gIGlmICh2ZXJpZnkgIT09IGZhbHNlICYmIHR5cGVvZiB2ZXJpZnkgIT09ICdmdW5jdGlvbicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiB2ZXJpZnkgbXVzdCBiZSBmdW5jdGlvbicpXHJcbiAgfVxyXG5cclxuICAvLyBjcmVhdGUgdGhlIGFwcHJvcHJpYXRlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25cclxuICB2YXIgc2hvdWxkUGFyc2UgPSB0eXBlb2YgdHlwZSAhPT0gJ2Z1bmN0aW9uJ1xyXG4gICAgPyB0eXBlQ2hlY2tlcih0eXBlKVxyXG4gICAgOiB0eXBlXHJcblxyXG4gIGZ1bmN0aW9uIHBhcnNlIChidWYpIHtcclxuICAgIHJldHVybiBidWZcclxuICB9XHJcblxyXG4gIHJldHVybiBmdW5jdGlvbiB0ZXh0UGFyc2VyIChyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgaWYgKHJlcS5fYm9keSkge1xyXG4gICAgICBkZWJ1ZygnYm9keSBhbHJlYWR5IHBhcnNlZCcpXHJcbiAgICAgIG5leHQoKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICByZXEuYm9keSA9IHJlcS5ib2R5IHx8IHt9XHJcblxyXG4gICAgLy8gc2tpcCByZXF1ZXN0cyB3aXRob3V0IGJvZGllc1xyXG4gICAgaWYgKCF0eXBlaXMuaGFzQm9keShyZXEpKSB7XHJcbiAgICAgIGRlYnVnKCdza2lwIGVtcHR5IGJvZHknKVxyXG4gICAgICBuZXh0KClcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgZGVidWcoJ2NvbnRlbnQtdHlwZSAlaicsIHJlcS5oZWFkZXJzWydjb250ZW50LXR5cGUnXSlcclxuXHJcbiAgICAvLyBkZXRlcm1pbmUgaWYgcmVxdWVzdCBzaG91bGQgYmUgcGFyc2VkXHJcbiAgICBpZiAoIXNob3VsZFBhcnNlKHJlcSkpIHtcclxuICAgICAgZGVidWcoJ3NraXAgcGFyc2luZycpXHJcbiAgICAgIG5leHQoKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICAvLyBnZXQgY2hhcnNldFxyXG4gICAgdmFyIGNoYXJzZXQgPSBnZXRDaGFyc2V0KHJlcSkgfHwgZGVmYXVsdENoYXJzZXRcclxuXHJcbiAgICAvLyByZWFkXHJcbiAgICByZWFkKHJlcSwgcmVzLCBuZXh0LCBwYXJzZSwgZGVidWcsIHtcclxuICAgICAgZW5jb2Rpbmc6IGNoYXJzZXQsXHJcbiAgICAgIGluZmxhdGU6IGluZmxhdGUsXHJcbiAgICAgIGxpbWl0OiBsaW1pdCxcclxuICAgICAgdmVyaWZ5OiB2ZXJpZnlcclxuICAgIH0pXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBjaGFyc2V0IG9mIGEgcmVxdWVzdC5cclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBnZXRDaGFyc2V0IChyZXEpIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIChjb250ZW50VHlwZS5wYXJzZShyZXEpLnBhcmFtZXRlcnMuY2hhcnNldCB8fCAnJykudG9Mb3dlckNhc2UoKVxyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIHJldHVybiB1bmRlZmluZWRcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgdGhlIHNpbXBsZSB0eXBlIGNoZWNrZXIuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXHJcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHR5cGVDaGVja2VyICh0eXBlKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrVHlwZSAocmVxKSB7XHJcbiAgICByZXR1cm4gQm9vbGVhbih0eXBlaXMocmVxLCB0eXBlKSlcclxuICB9XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "text.js"
      ],
      "names": [
        "bytes",
        "require",
        "contentType",
        "debug",
        "read",
        "typeis",
        "module",
        "exports",
        "text",
        "options",
        "opts",
        "defaultCharset",
        "inflate",
        "limit",
        "parse",
        "type",
        "verify",
        "TypeError",
        "shouldParse",
        "typeChecker",
        "buf",
        "textParser",
        "req",
        "res",
        "next",
        "_body",
        "body",
        "hasBody",
        "headers",
        "charset",
        "getCharset",
        "encoding",
        "parameters",
        "toLowerCase",
        "e",
        "undefined",
        "checkType",
        "Boolean"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "sourcesContent": [
        "/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar contentType = require('content-type')\r\nvar debug = require('debug')('body-parser:text')\r\nvar read = require('../read')\r\nvar typeis = require('type-is')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = text\r\n\r\n/**\r\n * Create a middleware to parse text bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @api public\r\n */\r\n\r\nfunction text (options) {\r\n  var opts = options || {}\r\n\r\n  var defaultCharset = opts.defaultCharset || 'utf-8'\r\n  var inflate = opts.inflate !== false\r\n  var limit = typeof opts.limit !== 'number'\r\n    ? bytes.parse(opts.limit || '100kb')\r\n    : opts.limit\r\n  var type = opts.type || 'text/plain'\r\n  var verify = opts.verify || false\r\n\r\n  if (verify !== false && typeof verify !== 'function') {\r\n    throw new TypeError('option verify must be function')\r\n  }\r\n\r\n  // create the appropriate type checking function\r\n  var shouldParse = typeof type !== 'function'\r\n    ? typeChecker(type)\r\n    : type\r\n\r\n  function parse (buf) {\r\n    return buf\r\n  }\r\n\r\n  return function textParser (req, res, next) {\r\n    if (req._body) {\r\n      debug('body already parsed')\r\n      next()\r\n      return\r\n    }\r\n\r\n    req.body = req.body || {}\r\n\r\n    // skip requests without bodies\r\n    if (!typeis.hasBody(req)) {\r\n      debug('skip empty body')\r\n      next()\r\n      return\r\n    }\r\n\r\n    debug('content-type %j', req.headers['content-type'])\r\n\r\n    // determine if request should be parsed\r\n    if (!shouldParse(req)) {\r\n      debug('skip parsing')\r\n      next()\r\n      return\r\n    }\r\n\r\n    // get charset\r\n    var charset = getCharset(req) || defaultCharset\r\n\r\n    // read\r\n    read(req, res, next, parse, debug, {\r\n      encoding: charset,\r\n      inflate: inflate,\r\n      limit: limit,\r\n      verify: verify\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\r\n\r\nfunction getCharset (req) {\r\n  try {\r\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\r\n\r\nfunction typeChecker (type) {\r\n  return function checkType (req) {\r\n    return Boolean(typeis(req, type))\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210775
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\node_modules\\\\body-parser\\\\lib\\\\types\\\\urlencoded.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\urlencoded.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\urlencoded.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\urlencoded.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
        "sourceFileName": "urlencoded.js"
      }
    },
    "ast": null,
    "code": "/*!\r\n * body-parser\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar bytes = require('bytes');\n\nvar contentType = require('content-type');\n\nvar createError = require('http-errors');\n\nvar debug = require('debug')('body-parser:urlencoded');\n\nvar deprecate = require('depd')('body-parser');\n\nvar read = require('../read');\n\nvar typeis = require('type-is');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = urlencoded;\n/**\r\n * Cache of parser modules.\r\n */\n\nvar parsers = Object.create(null);\n/**\r\n * Create a middleware to parse urlencoded bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\n\nfunction urlencoded(options) {\n  var opts = options || {}; // notice because option default will flip in next major\n\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option');\n  }\n\n  var extended = opts.extended !== false;\n  var inflate = opts.inflate !== false;\n  var limit = typeof opts.limit !== 'number' ? bytes.parse(opts.limit || '100kb') : opts.limit;\n  var type = opts.type || 'application/x-www-form-urlencoded';\n  var verify = opts.verify || false;\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function');\n  } // create the appropriate query parser\n\n\n  var queryparse = extended ? extendedparser(opts) : simpleparser(opts); // create the appropriate type checking function\n\n  var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;\n\n  function parse(body) {\n    return body.length ? queryparse(body) : {};\n  }\n\n  return function urlencodedParser(req, res, next) {\n    if (req._body) {\n      debug('body already parsed');\n      next();\n      return;\n    }\n\n    req.body = req.body || {}; // skip requests without bodies\n\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body');\n      next();\n      return;\n    }\n\n    debug('content-type %j', req.headers['content-type']); // determine if request should be parsed\n\n    if (!shouldParse(req)) {\n      debug('skip parsing');\n      next();\n      return;\n    } // assert charset\n\n\n    var charset = getCharset(req) || 'utf-8';\n\n    if (charset !== 'utf-8') {\n      debug('invalid charset');\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }));\n      return;\n    } // read\n\n\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    });\n  };\n}\n/**\r\n * Get the extended query parser.\r\n *\r\n * @param {object} options\r\n */\n\n\nfunction extendedparser(options) {\n  var parameterLimit = options.parameterLimit !== undefined ? options.parameterLimit : 1000;\n  var parse = parser('qs');\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number');\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0;\n  }\n\n  return function queryparse(body) {\n    var paramCount = parameterCount(body, parameterLimit);\n\n    if (paramCount === undefined) {\n      debug('too many parameters');\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      });\n    }\n\n    var arrayLimit = Math.max(100, paramCount);\n    debug('parse extended urlencoding');\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    });\n  };\n}\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\n\n\nfunction getCharset(req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase();\n  } catch (e) {\n    return undefined;\n  }\n}\n/**\r\n * Count the number of parameters, stopping once limit reached\r\n *\r\n * @param {string} body\r\n * @param {number} limit\r\n * @api private\r\n */\n\n\nfunction parameterCount(body, limit) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++;\n    index++;\n\n    if (count === limit) {\n      return undefined;\n    }\n  }\n\n  return count;\n}\n/**\r\n * Get parser for module name dynamically.\r\n *\r\n * @param {string} name\r\n * @return {function}\r\n * @api private\r\n */\n\n\nfunction parser(name) {\n  var mod = parsers[name];\n\n  if (mod !== undefined) {\n    return mod.parse;\n  } // this uses a switch for static require analysis\n\n\n  switch (name) {\n    case 'qs':\n      mod = require('qs');\n      break;\n\n    case 'querystring':\n      mod = require('querystring');\n      break;\n  } // store to prevent invoking require()\n\n\n  parsers[name] = mod;\n  return mod.parse;\n}\n/**\r\n * Get the simple query parser.\r\n *\r\n * @param {object} options\r\n */\n\n\nfunction simpleparser(options) {\n  var parameterLimit = options.parameterLimit !== undefined ? options.parameterLimit : 1000;\n  var parse = parser('querystring');\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number');\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0;\n  }\n\n  return function queryparse(body) {\n    var paramCount = parameterCount(body, parameterLimit);\n\n    if (paramCount === undefined) {\n      debug('too many parameters');\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      });\n    }\n\n    debug('parse urlencoding');\n    return parse(body, undefined, undefined, {\n      maxKeys: parameterLimit\n    });\n  };\n}\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\n\n\nfunction typeChecker(type) {\n  return function checkType(req) {\n    return Boolean(typeis(req, type));\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "urlencoded.js"
      ],
      "names": [
        "bytes",
        "require",
        "contentType",
        "createError",
        "debug",
        "deprecate",
        "read",
        "typeis",
        "module",
        "exports",
        "urlencoded",
        "parsers",
        "Object",
        "create",
        "options",
        "opts",
        "extended",
        "undefined",
        "inflate",
        "limit",
        "parse",
        "type",
        "verify",
        "TypeError",
        "queryparse",
        "extendedparser",
        "simpleparser",
        "shouldParse",
        "typeChecker",
        "body",
        "length",
        "urlencodedParser",
        "req",
        "res",
        "next",
        "_body",
        "hasBody",
        "headers",
        "charset",
        "getCharset",
        "toUpperCase",
        "encoding",
        "parameterLimit",
        "parser",
        "isNaN",
        "isFinite",
        "paramCount",
        "parameterCount",
        "arrayLimit",
        "Math",
        "max",
        "allowPrototypes",
        "depth",
        "Infinity",
        "parameters",
        "toLowerCase",
        "e",
        "count",
        "index",
        "indexOf",
        "name",
        "mod",
        "maxKeys",
        "checkType",
        "Boolean"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\node_modules\\body-parser\\lib\\types\\",
      "sourcesContent": [
        "/*!\r\n * body-parser\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar contentType = require('content-type')\r\nvar createError = require('http-errors')\r\nvar debug = require('debug')('body-parser:urlencoded')\r\nvar deprecate = require('depd')('body-parser')\r\nvar read = require('../read')\r\nvar typeis = require('type-is')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = urlencoded\r\n\r\n/**\r\n * Cache of parser modules.\r\n */\r\n\r\nvar parsers = Object.create(null)\r\n\r\n/**\r\n * Create a middleware to parse urlencoded bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction urlencoded (options) {\r\n  var opts = options || {}\r\n\r\n  // notice because option default will flip in next major\r\n  if (opts.extended === undefined) {\r\n    deprecate('undefined extended: provide extended option')\r\n  }\r\n\r\n  var extended = opts.extended !== false\r\n  var inflate = opts.inflate !== false\r\n  var limit = typeof opts.limit !== 'number'\r\n    ? bytes.parse(opts.limit || '100kb')\r\n    : opts.limit\r\n  var type = opts.type || 'application/x-www-form-urlencoded'\r\n  var verify = opts.verify || false\r\n\r\n  if (verify !== false && typeof verify !== 'function') {\r\n    throw new TypeError('option verify must be function')\r\n  }\r\n\r\n  // create the appropriate query parser\r\n  var queryparse = extended\r\n    ? extendedparser(opts)\r\n    : simpleparser(opts)\r\n\r\n  // create the appropriate type checking function\r\n  var shouldParse = typeof type !== 'function'\r\n    ? typeChecker(type)\r\n    : type\r\n\r\n  function parse (body) {\r\n    return body.length\r\n      ? queryparse(body)\r\n      : {}\r\n  }\r\n\r\n  return function urlencodedParser (req, res, next) {\r\n    if (req._body) {\r\n      debug('body already parsed')\r\n      next()\r\n      return\r\n    }\r\n\r\n    req.body = req.body || {}\r\n\r\n    // skip requests without bodies\r\n    if (!typeis.hasBody(req)) {\r\n      debug('skip empty body')\r\n      next()\r\n      return\r\n    }\r\n\r\n    debug('content-type %j', req.headers['content-type'])\r\n\r\n    // determine if request should be parsed\r\n    if (!shouldParse(req)) {\r\n      debug('skip parsing')\r\n      next()\r\n      return\r\n    }\r\n\r\n    // assert charset\r\n    var charset = getCharset(req) || 'utf-8'\r\n    if (charset !== 'utf-8') {\r\n      debug('invalid charset')\r\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\r\n        charset: charset,\r\n        type: 'charset.unsupported'\r\n      }))\r\n      return\r\n    }\r\n\r\n    // read\r\n    read(req, res, next, parse, debug, {\r\n      debug: debug,\r\n      encoding: charset,\r\n      inflate: inflate,\r\n      limit: limit,\r\n      verify: verify\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the extended query parser.\r\n *\r\n * @param {object} options\r\n */\r\n\r\nfunction extendedparser (options) {\r\n  var parameterLimit = options.parameterLimit !== undefined\r\n    ? options.parameterLimit\r\n    : 1000\r\n  var parse = parser('qs')\r\n\r\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\r\n    throw new TypeError('option parameterLimit must be a positive number')\r\n  }\r\n\r\n  if (isFinite(parameterLimit)) {\r\n    parameterLimit = parameterLimit | 0\r\n  }\r\n\r\n  return function queryparse (body) {\r\n    var paramCount = parameterCount(body, parameterLimit)\r\n\r\n    if (paramCount === undefined) {\r\n      debug('too many parameters')\r\n      throw createError(413, 'too many parameters', {\r\n        type: 'parameters.too.many'\r\n      })\r\n    }\r\n\r\n    var arrayLimit = Math.max(100, paramCount)\r\n\r\n    debug('parse extended urlencoding')\r\n    return parse(body, {\r\n      allowPrototypes: true,\r\n      arrayLimit: arrayLimit,\r\n      depth: Infinity,\r\n      parameterLimit: parameterLimit\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\r\n\r\nfunction getCharset (req) {\r\n  try {\r\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Count the number of parameters, stopping once limit reached\r\n *\r\n * @param {string} body\r\n * @param {number} limit\r\n * @api private\r\n */\r\n\r\nfunction parameterCount (body, limit) {\r\n  var count = 0\r\n  var index = 0\r\n\r\n  while ((index = body.indexOf('&', index)) !== -1) {\r\n    count++\r\n    index++\r\n\r\n    if (count === limit) {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  return count\r\n}\r\n\r\n/**\r\n * Get parser for module name dynamically.\r\n *\r\n * @param {string} name\r\n * @return {function}\r\n * @api private\r\n */\r\n\r\nfunction parser (name) {\r\n  var mod = parsers[name]\r\n\r\n  if (mod !== undefined) {\r\n    return mod.parse\r\n  }\r\n\r\n  // this uses a switch for static require analysis\r\n  switch (name) {\r\n    case 'qs':\r\n      mod = require('qs')\r\n      break\r\n    case 'querystring':\r\n      mod = require('querystring')\r\n      break\r\n  }\r\n\r\n  // store to prevent invoking require()\r\n  parsers[name] = mod\r\n\r\n  return mod.parse\r\n}\r\n\r\n/**\r\n * Get the simple query parser.\r\n *\r\n * @param {object} options\r\n */\r\n\r\nfunction simpleparser (options) {\r\n  var parameterLimit = options.parameterLimit !== undefined\r\n    ? options.parameterLimit\r\n    : 1000\r\n  var parse = parser('querystring')\r\n\r\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\r\n    throw new TypeError('option parameterLimit must be a positive number')\r\n  }\r\n\r\n  if (isFinite(parameterLimit)) {\r\n    parameterLimit = parameterLimit | 0\r\n  }\r\n\r\n  return function queryparse (body) {\r\n    var paramCount = parameterCount(body, parameterLimit)\r\n\r\n    if (paramCount === undefined) {\r\n      debug('too many parameters')\r\n      throw createError(413, 'too many parameters', {\r\n        type: 'parameters.too.many'\r\n      })\r\n    }\r\n\r\n    debug('parse urlencoding')\r\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\r\n\r\nfunction typeChecker (type) {\r\n  return function checkType (req) {\r\n    return Boolean(typeis(req, type))\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635464210821
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\data.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\data.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\data.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  mode: 'development',\n  products: [{\n    _id: '1',\n    name: 'Sika 3 sin cloruro',\n    category: 'acelerante',\n    image: './images/Sika3SC.jpg',\n    price: '$' + 3200,\n    size: 6 + \"kg\",\n    brand: 'Sika',\n    rating: 5,\n    numReviews: 10,\n    countinStock: 3,\n    description: ' Aditivo desarrollado especialmente para acelerar el fragüe de morteros y hormigones armados. No contiene cloruros. No corroe las armaduras ni los insertos metálicos.'\n  }, {\n    _id: '2',\n    name: 'Sika 1',\n    category: 'acelerante',\n    image: '/images/Sika1.jpg',\n    price: '$' + 1100,\n    size: 10 + \"L\",\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 5,\n    description: ''\n  }, {\n    _id: '3',\n    name: 'Sika 3',\n    category: 'acelerante',\n    image: '/images/Sika3.jpg',\n    price: 60,\n    size: 6 + 'kg',\n    brand: 'Sika',\n    rating: 3,\n    numReviews: 10,\n    countinStock: 1\n  }, {\n    _id: '4',\n    name: 'Sika Guard 63 Esmalte',\n    category: 'acelerante',\n    image: '/images/SikaGuard63Esmalte.jpg',\n    price: 60,\n    size: 10 + 'L',\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 1\n  }, {\n    _id: '5',\n    name: 'Sika Latex',\n    category: 'acelerante',\n    image: '/images/SikaLatex.jpg',\n    price: 60,\n    size: 5 + 'L',\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 1\n  }, {\n    _id: '6',\n    name: '1',\n    name: 'Sika WT-100',\n    category: 'acelerante',\n    image: '/images/SikaWT100.jpg',\n    price: 60,\n    size: 20 + 'kg',\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 1\n  }]\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsibW9kZSIsInByb2R1Y3RzIiwiX2lkIiwibmFtZSIsImNhdGVnb3J5IiwiaW1hZ2UiLCJwcmljZSIsInNpemUiLCJicmFuZCIsInJhdGluZyIsIm51bVJldmlld3MiLCJjb3VudGluU3RvY2siLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsSUFBSSxFQUFFLGFBRE87QUFFZEMsRUFBQUEsUUFBUSxFQUFFLENBQ1Q7QUFDQUMsSUFBQUEsR0FBRyxFQUFDLEdBREo7QUFFQUMsSUFBQUEsSUFBSSxFQUFFLG9CQUZOO0FBR0FDLElBQUFBLFFBQVEsRUFBRSxZQUhWO0FBSUFDLElBQUFBLEtBQUssRUFBRSxzQkFKUDtBQUtBQyxJQUFBQSxLQUFLLEVBQUUsTUFBTSxJQUxiO0FBTUFDLElBQUFBLElBQUksRUFBRSxJQUFJLElBTlY7QUFPQUMsSUFBQUEsS0FBSyxFQUFFLE1BUFA7QUFRQUMsSUFBQUEsTUFBTSxFQUFFLENBUlI7QUFTQUMsSUFBQUEsVUFBVSxFQUFFLEVBVFo7QUFVQUMsSUFBQUEsWUFBWSxFQUFFLENBVmQ7QUFXQUMsSUFBQUEsV0FBVyxFQUFFO0FBWGIsR0FEUyxFQWNUO0FBQ0FWLElBQUFBLEdBQUcsRUFBQyxHQURKO0FBRUFDLElBQUFBLElBQUksRUFBRSxRQUZOO0FBR0FDLElBQUFBLFFBQVEsRUFBRSxZQUhWO0FBSUFDLElBQUFBLEtBQUssRUFBRSxtQkFKUDtBQUtBQyxJQUFBQSxLQUFLLEVBQUUsTUFBTSxJQUxiO0FBTUFDLElBQUFBLElBQUksRUFBRSxLQUFLLEdBTlg7QUFPQUMsSUFBQUEsS0FBSyxFQUFFLE1BUFA7QUFRQUMsSUFBQUEsTUFBTSxFQUFFLEdBUlI7QUFTQUMsSUFBQUEsVUFBVSxFQUFFLEVBVFo7QUFVQUMsSUFBQUEsWUFBWSxFQUFFLENBVmQ7QUFXQUMsSUFBQUEsV0FBVyxFQUFFO0FBWGIsR0FkUyxFQTJCVDtBQUNBVixJQUFBQSxHQUFHLEVBQUMsR0FESjtBQUVBQyxJQUFBQSxJQUFJLEVBQUUsUUFGTjtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsWUFIVjtBQUlBQyxJQUFBQSxLQUFLLEVBQUUsbUJBSlA7QUFLQUMsSUFBQUEsS0FBSyxFQUFFLEVBTFA7QUFNQUMsSUFBQUEsSUFBSSxFQUFFLElBQUksSUFOVjtBQU9BQyxJQUFBQSxLQUFLLEVBQUUsTUFQUDtBQVFBQyxJQUFBQSxNQUFNLEVBQUUsQ0FSUjtBQVNBQyxJQUFBQSxVQUFVLEVBQUUsRUFUWjtBQVVBQyxJQUFBQSxZQUFZLEVBQUU7QUFWZCxHQTNCUyxFQXVDVDtBQUNBVCxJQUFBQSxHQUFHLEVBQUMsR0FESjtBQUVBQyxJQUFBQSxJQUFJLEVBQUUsdUJBRk47QUFHQUMsSUFBQUEsUUFBUSxFQUFFLFlBSFY7QUFJQUMsSUFBQUEsS0FBSyxFQUFFLGdDQUpQO0FBS0FDLElBQUFBLEtBQUssRUFBRSxFQUxQO0FBTUFDLElBQUFBLElBQUksRUFBRSxLQUFLLEdBTlg7QUFPQUMsSUFBQUEsS0FBSyxFQUFFLE1BUFA7QUFRQUMsSUFBQUEsTUFBTSxFQUFFLEdBUlI7QUFTQUMsSUFBQUEsVUFBVSxFQUFFLEVBVFo7QUFVQUMsSUFBQUEsWUFBWSxFQUFFO0FBVmQsR0F2Q1MsRUFtRFQ7QUFDQVQsSUFBQUEsR0FBRyxFQUFDLEdBREo7QUFFQUMsSUFBQUEsSUFBSSxFQUFFLFlBRk47QUFHQUMsSUFBQUEsUUFBUSxFQUFFLFlBSFY7QUFJQUMsSUFBQUEsS0FBSyxFQUFFLHVCQUpQO0FBS0FDLElBQUFBLEtBQUssRUFBRSxFQUxQO0FBTUFDLElBQUFBLElBQUksRUFBRSxJQUFJLEdBTlY7QUFPQUMsSUFBQUEsS0FBSyxFQUFFLE1BUFA7QUFRQUMsSUFBQUEsTUFBTSxFQUFFLEdBUlI7QUFTQUMsSUFBQUEsVUFBVSxFQUFFLEVBVFo7QUFVQUMsSUFBQUEsWUFBWSxFQUFFO0FBVmQsR0FuRFMsRUErRFQ7QUFDQVQsSUFBQUEsR0FBRyxFQUFDLEdBREo7QUFFQ0MsSUFBQUEsSUFBSSxFQUFFLEdBRlA7QUFHQUEsSUFBQUEsSUFBSSxFQUFFLGFBSE47QUFJQUMsSUFBQUEsUUFBUSxFQUFFLFlBSlY7QUFLQUMsSUFBQUEsS0FBSyxFQUFFLHVCQUxQO0FBTUFDLElBQUFBLEtBQUssRUFBRSxFQU5QO0FBT0FDLElBQUFBLElBQUksRUFBRSxLQUFLLElBUFg7QUFRQUMsSUFBQUEsS0FBSyxFQUFFLE1BUlA7QUFTQUMsSUFBQUEsTUFBTSxFQUFFLEdBVFI7QUFVQUMsSUFBQUEsVUFBVSxFQUFFLEVBVlo7QUFXQUMsSUFBQUEsWUFBWSxFQUFFO0FBWGQsR0EvRFM7QUFGSSxDIiwic291cmNlUm9vdCI6IkQ6XFxVc3VhcmlvIFBhYmxvXFxEZXNrdG9wXFxDb2RlcmhvdXNlXFxqYW1hem9uYVxcYmFja2VuZFxcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xyXG5cdCBtb2RlOiAnZGV2ZWxvcG1lbnQnLFxyXG5cdHByb2R1Y3RzOiBbXHJcblx0XHR7XHJcblx0XHRfaWQ6JzEnLCBcclxuXHRcdG5hbWU6ICdTaWthIDMgc2luIGNsb3J1cm8nLFxyXG5cdFx0Y2F0ZWdvcnk6ICdhY2VsZXJhbnRlJyxcclxuXHRcdGltYWdlOiAnLi9pbWFnZXMvU2lrYTNTQy5qcGcnLFxyXG5cdFx0cHJpY2U6ICckJyArIDMyMDAsXHJcblx0XHRzaXplOiA2ICsgXCJrZ1wiLFxyXG5cdFx0YnJhbmQ6ICdTaWthJyxcclxuXHRcdHJhdGluZzogNSxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOiAzLFxyXG5cdFx0ZGVzY3JpcHRpb246ICcgQWRpdGl2byBkZXNhcnJvbGxhZG8gZXNwZWNpYWxtZW50ZSBwYXJhIGFjZWxlcmFyIGVsIGZyYWfDvGUgZGUgbW9ydGVyb3MgeSBob3JtaWdvbmVzIGFybWFkb3MuIE5vIGNvbnRpZW5lIGNsb3J1cm9zLiBObyBjb3Jyb2UgbGFzIGFybWFkdXJhcyBuaSBsb3MgaW5zZXJ0b3MgbWV0w6FsaWNvcy4nXHJcblx0XHR9LFxyXG5cdFx0e1xyXG5cdFx0X2lkOicyJywgXHJcblx0XHRuYW1lOiAnU2lrYSAxJyxcclxuXHRcdGNhdGVnb3J5OiAnYWNlbGVyYW50ZScsXHJcblx0XHRpbWFnZTogJy9pbWFnZXMvU2lrYTEuanBnJyxcclxuXHRcdHByaWNlOiAnJCcgKyAxMTAwLFxyXG5cdFx0c2l6ZTogMTAgKyBcIkxcIixcclxuXHRcdGJyYW5kOiAnU2lrYScsXHJcblx0XHRyYXRpbmc6IDQuNSxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOiA1LFxyXG5cdFx0ZGVzY3JpcHRpb246ICcnXHJcblx0XHR9LFxyXG5cdFx0e1xyXG5cdFx0X2lkOiczJyxcclxuXHRcdG5hbWU6ICdTaWthIDMnLFxyXG5cdFx0Y2F0ZWdvcnk6ICdhY2VsZXJhbnRlJyxcclxuXHRcdGltYWdlOiAnL2ltYWdlcy9TaWthMy5qcGcnLFxyXG5cdFx0cHJpY2U6IDYwLFxyXG5cdFx0c2l6ZTogNiArICdrZycsXHJcblx0XHRicmFuZDogJ1Npa2EnLFxyXG5cdFx0cmF0aW5nOiAzLFxyXG5cdFx0bnVtUmV2aWV3czogMTAsXHJcblx0XHRjb3VudGluU3RvY2s6IDEsXHJcblx0XHR9LFxyXG5cdFx0e1xyXG5cdFx0X2lkOic0JywgXHJcblx0XHRuYW1lOiAnU2lrYSBHdWFyZCA2MyBFc21hbHRlJyxcclxuXHRcdGNhdGVnb3J5OiAnYWNlbGVyYW50ZScsXHJcblx0XHRpbWFnZTogJy9pbWFnZXMvU2lrYUd1YXJkNjNFc21hbHRlLmpwZycsXHJcblx0XHRwcmljZTogNjAsXHJcblx0XHRzaXplOiAxMCArICdMJyxcclxuXHRcdGJyYW5kOiAnU2lrYScsXHJcblx0XHRyYXRpbmc6IDQuNSxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOiAxLFxyXG5cdFx0fSxcclxuXHRcdHtcclxuXHRcdF9pZDonNScsIFxyXG5cdFx0bmFtZTogJ1Npa2EgTGF0ZXgnLFxyXG5cdFx0Y2F0ZWdvcnk6ICdhY2VsZXJhbnRlJyxcclxuXHRcdGltYWdlOiAnL2ltYWdlcy9TaWthTGF0ZXguanBnJyxcclxuXHRcdHByaWNlOiA2MCxcclxuXHRcdHNpemU6IDUgKyAnTCcsXHJcblx0XHRicmFuZDogJ1Npa2EnLFxyXG5cdFx0cmF0aW5nOiA0LjUsXHJcblx0XHRudW1SZXZpZXdzOiAxMCxcclxuXHRcdGNvdW50aW5TdG9jazogMSxcclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRfaWQ6JzYnLFxyXG5cdFx0IG5hbWU6ICcxJyxcclxuXHRcdG5hbWU6ICdTaWthIFdULTEwMCcsXHJcblx0XHRjYXRlZ29yeTogJ2FjZWxlcmFudGUnLFxyXG5cdFx0aW1hZ2U6ICcvaW1hZ2VzL1Npa2FXVDEwMC5qcGcnLFxyXG5cdFx0cHJpY2U6IDYwLFxyXG5cdFx0c2l6ZTogMjAgKyAna2cnLFxyXG5cdFx0YnJhbmQ6ICdTaWthJyxcclxuXHRcdHJhdGluZzogNC41LFxyXG5cdFx0bnVtUmV2aWV3czogMTAsXHJcblx0XHRjb3VudGluU3RvY2s6IDEsXHJcblx0XHR9LFxyXG5cdFx0XHQgICAgXSxcclxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "mode",
        "products",
        "_id",
        "name",
        "category",
        "image",
        "price",
        "size",
        "brand",
        "rating",
        "numReviews",
        "countinStock",
        "description"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,IAAI,EAAE,aADO;AAEdC,EAAAA,QAAQ,EAAE,CACT;AACAC,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,oBAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,sBAJP;AAKAC,IAAAA,KAAK,EAAE,MAAM,IALb;AAMAC,IAAAA,IAAI,EAAE,IAAI,IANV;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,CARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE,CAVd;AAWAC,IAAAA,WAAW,EAAE;AAXb,GADS,EAcT;AACAV,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,QAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,mBAJP;AAKAC,IAAAA,KAAK,EAAE,MAAM,IALb;AAMAC,IAAAA,IAAI,EAAE,KAAK,GANX;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,GARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE,CAVd;AAWAC,IAAAA,WAAW,EAAE;AAXb,GAdS,EA2BT;AACAV,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,QAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,mBAJP;AAKAC,IAAAA,KAAK,EAAE,EALP;AAMAC,IAAAA,IAAI,EAAE,IAAI,IANV;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,CARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE;AAVd,GA3BS,EAuCT;AACAT,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,uBAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,gCAJP;AAKAC,IAAAA,KAAK,EAAE,EALP;AAMAC,IAAAA,IAAI,EAAE,KAAK,GANX;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,GARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE;AAVd,GAvCS,EAmDT;AACAT,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,YAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,uBAJP;AAKAC,IAAAA,KAAK,EAAE,EALP;AAMAC,IAAAA,IAAI,EAAE,IAAI,GANV;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,GARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE;AAVd,GAnDS,EA+DT;AACAT,IAAAA,GAAG,EAAC,GADJ;AAECC,IAAAA,IAAI,EAAE,GAFP;AAGAA,IAAAA,IAAI,EAAE,aAHN;AAIAC,IAAAA,QAAQ,EAAE,YAJV;AAKAC,IAAAA,KAAK,EAAE,uBALP;AAMAC,IAAAA,KAAK,EAAE,EANP;AAOAC,IAAAA,IAAI,EAAE,KAAK,IAPX;AAQAC,IAAAA,KAAK,EAAE,MARP;AASAC,IAAAA,MAAM,EAAE,GATR;AAUAC,IAAAA,UAAU,EAAE,EAVZ;AAWAC,IAAAA,YAAY,EAAE;AAXd,GA/DS;AAFI,C",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
      "sourcesContent": [
        "export default {\r\n\t mode: 'development',\r\n\tproducts: [\r\n\t\t{\r\n\t\t_id:'1', \r\n\t\tname: 'Sika 3 sin cloruro',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: './images/Sika3SC.jpg',\r\n\t\tprice: '$' + 3200,\r\n\t\tsize: 6 + \"kg\",\r\n\t\tbrand: 'Sika',\r\n\t\trating: 5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 3,\r\n\t\tdescription: ' Aditivo desarrollado especialmente para acelerar el fragüe de morteros y hormigones armados. No contiene cloruros. No corroe las armaduras ni los insertos metálicos.'\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'2', \r\n\t\tname: 'Sika 1',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/Sika1.jpg',\r\n\t\tprice: '$' + 1100,\r\n\t\tsize: 10 + \"L\",\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 5,\r\n\t\tdescription: ''\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'3',\r\n\t\tname: 'Sika 3',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/Sika3.jpg',\r\n\t\tprice: 60,\r\n\t\tsize: 6 + 'kg',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 3,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'4', \r\n\t\tname: 'Sika Guard 63 Esmalte',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/SikaGuard63Esmalte.jpg',\r\n\t\tprice: 60,\r\n\t\tsize: 10 + 'L',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'5', \r\n\t\tname: 'Sika Latex',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/SikaLatex.jpg',\r\n\t\tprice: 60,\r\n\t\tsize: 5 + 'L',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'6',\r\n\t\t name: '1',\r\n\t\tname: 'Sika WT-100',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/SikaWT100.jpg',\r\n\t\tprice: 60,\r\n\t\tsize: 20 + 'kg',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 1,\r\n\t\t},\r\n\t\t\t    ],\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1637196740444
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"filename\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\\\\backend\\\\data.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Usuario Pablo\\\\Desktop\\\\Coderhouse\\\\jamazona\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\data.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\data.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  mode: 'development',\n  products: [{\n    _id: '1',\n    name: 'Sika 1',\n    category: 'acelerante',\n    image: '/images/Sika1.jpg',\n    price: 1100,\n    size: 10 + \"L\",\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 6,\n    description: 'Aditivo líquido que reacciona con los componentes de la mezcla de cemento y arena para bloquear los capilares y poros de morteros y hormigones. Impide el paso del agua y permite la respiración del sustrato.'\n  }, {\n    _id: '2',\n    name: 'Sika 3',\n    category: 'acelerante',\n    image: '/images/Sika3.jpg',\n    price: 1200,\n    size: 6 + 'kg',\n    brand: 'Sika',\n    rating: 3,\n    numReviews: 10,\n    countinStock: 5,\n    description: 'Aditivo acelerador del fraguado y endurecimiento, a base de cloruros, actúa aumentando la velocidad de hidratación y las reacciones químicas de los constituyentes del cemento.'\n  }, {\n    _id: '3',\n    name: 'Sika 3 sin cloruro',\n    category: 'acelerante',\n    image: './images/Sika3SC.jpg',\n    price: 3200,\n    size: 6 + \"kg\",\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 3,\n    description: ' Aditivo desarrollado especialmente para acelerar el fragüe de morteros y hormigones armados. No contiene cloruros. No corroe las armaduras ni los insertos metálicos.'\n  }, {\n    _id: '4',\n    name: 'Sika Guard 63 Esmalte',\n    category: 'acelerante',\n    image: '/images/SikaGuard63Esmalte.jpg',\n    price: 10300,\n    size: 10 + 'L',\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 10,\n    description: 'Producto de dos componentes a base de resinas epoxídicas, fácil de mezclar, aplicable a pincel, rodillo o pistolas a aire. Constituye una excelente protección química, mecánica y anticorrosiva.'\n  }, {\n    _id: '5',\n    name: 'Sika Latex',\n    category: 'acelerante',\n    image: '/images/SikaLatex.jpg',\n    price: 5000,\n    size: 5 + 'L',\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 8,\n    description: 'Emulsión a base de resinas sintéticas, que agregada al agua de empastado de lechadas de cemento, les aporta alta capacidad de adherencia entre diferentes etapas de construcción. Además, incorporado al agua de empastado de morteros, les mejorará la calidad logrando cohesión entre las partículas, aumentando su adherencia, mejorando su flexibilidad y disminuyendo la capacidad de absorber agua.'\n  }, {\n    _id: '6',\n    name: '1',\n    name: 'Sika WT-100',\n    category: 'acelerante',\n    image: '/images/SikaWT100.jpg',\n    price: 14500,\n    size: 20 + 'kg',\n    brand: 'Sika',\n    rating: 4.5,\n    numReviews: 10,\n    countinStock: 9,\n    description: 'Aditivo líquido que resiste la entrada de agua usado para reducir la permeabilidad del hormigón.'\n  }]\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsibW9kZSIsInByb2R1Y3RzIiwiX2lkIiwibmFtZSIsImNhdGVnb3J5IiwiaW1hZ2UiLCJwcmljZSIsInNpemUiLCJicmFuZCIsInJhdGluZyIsIm51bVJldmlld3MiLCJjb3VudGluU3RvY2siLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsSUFBSSxFQUFFLGFBRE87QUFFZEMsRUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDREMsSUFBQUEsR0FBRyxFQUFDLEdBREg7QUFFREMsSUFBQUEsSUFBSSxFQUFFLFFBRkw7QUFHREMsSUFBQUEsUUFBUSxFQUFFLFlBSFQ7QUFJREMsSUFBQUEsS0FBSyxFQUFFLG1CQUpOO0FBS0RDLElBQUFBLEtBQUssRUFBRSxJQUxOO0FBTURDLElBQUFBLElBQUksRUFBRSxLQUFLLEdBTlY7QUFPREMsSUFBQUEsS0FBSyxFQUFFLE1BUE47QUFRREMsSUFBQUEsTUFBTSxFQUFFLEdBUlA7QUFTREMsSUFBQUEsVUFBVSxFQUFFLEVBVFg7QUFVREMsSUFBQUEsWUFBWSxFQUFFLENBVmI7QUFXREMsSUFBQUEsV0FBVyxFQUFFO0FBWFosR0FEUSxFQWNUO0FBQ0FWLElBQUFBLEdBQUcsRUFBQyxHQURKO0FBRUFDLElBQUFBLElBQUksRUFBRSxRQUZOO0FBR0FDLElBQUFBLFFBQVEsRUFBRSxZQUhWO0FBSUFDLElBQUFBLEtBQUssRUFBRSxtQkFKUDtBQUtBQyxJQUFBQSxLQUFLLEVBQUUsSUFMUDtBQU1BQyxJQUFBQSxJQUFJLEVBQUUsSUFBSSxJQU5WO0FBT0FDLElBQUFBLEtBQUssRUFBRSxNQVBQO0FBUUFDLElBQUFBLE1BQU0sRUFBRSxDQVJSO0FBU0FDLElBQUFBLFVBQVUsRUFBRSxFQVRaO0FBVUFDLElBQUFBLFlBQVksRUFBRSxDQVZkO0FBV0FDLElBQUFBLFdBQVcsRUFBRTtBQVhiLEdBZFMsRUEyQlQ7QUFDQVYsSUFBQUEsR0FBRyxFQUFDLEdBREo7QUFFQUMsSUFBQUEsSUFBSSxFQUFFLG9CQUZOO0FBR0FDLElBQUFBLFFBQVEsRUFBRSxZQUhWO0FBSUFDLElBQUFBLEtBQUssRUFBRSxzQkFKUDtBQUtBQyxJQUFBQSxLQUFLLEVBQUUsSUFMUDtBQU1BQyxJQUFBQSxJQUFJLEVBQUUsSUFBSSxJQU5WO0FBT0FDLElBQUFBLEtBQUssRUFBRSxNQVBQO0FBUUFDLElBQUFBLE1BQU0sRUFBRSxHQVJSO0FBU0FDLElBQUFBLFVBQVUsRUFBRSxFQVRaO0FBVUFDLElBQUFBLFlBQVksRUFBRSxDQVZkO0FBV0FDLElBQUFBLFdBQVcsRUFBRTtBQVhiLEdBM0JTLEVBd0NUO0FBQ0FWLElBQUFBLEdBQUcsRUFBQyxHQURKO0FBRUFDLElBQUFBLElBQUksRUFBRSx1QkFGTjtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsWUFIVjtBQUlBQyxJQUFBQSxLQUFLLEVBQUUsZ0NBSlA7QUFLQUMsSUFBQUEsS0FBSyxFQUFFLEtBTFA7QUFNQUMsSUFBQUEsSUFBSSxFQUFFLEtBQUssR0FOWDtBQU9BQyxJQUFBQSxLQUFLLEVBQUUsTUFQUDtBQVFBQyxJQUFBQSxNQUFNLEVBQUUsR0FSUjtBQVNBQyxJQUFBQSxVQUFVLEVBQUUsRUFUWjtBQVVBQyxJQUFBQSxZQUFZLEVBQUMsRUFWYjtBQVdBQyxJQUFBQSxXQUFXLEVBQUU7QUFYYixHQXhDUyxFQXFEVDtBQUNBVixJQUFBQSxHQUFHLEVBQUMsR0FESjtBQUVBQyxJQUFBQSxJQUFJLEVBQUUsWUFGTjtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsWUFIVjtBQUlBQyxJQUFBQSxLQUFLLEVBQUUsdUJBSlA7QUFLQUMsSUFBQUEsS0FBSyxFQUFFLElBTFA7QUFNQUMsSUFBQUEsSUFBSSxFQUFFLElBQUksR0FOVjtBQU9BQyxJQUFBQSxLQUFLLEVBQUUsTUFQUDtBQVFBQyxJQUFBQSxNQUFNLEVBQUUsR0FSUjtBQVNBQyxJQUFBQSxVQUFVLEVBQUUsRUFUWjtBQVVBQyxJQUFBQSxZQUFZLEVBQUUsQ0FWZDtBQVdBQyxJQUFBQSxXQUFXLEVBQUU7QUFYYixHQXJEUyxFQWtFVDtBQUNBVixJQUFBQSxHQUFHLEVBQUMsR0FESjtBQUVDQyxJQUFBQSxJQUFJLEVBQUUsR0FGUDtBQUdBQSxJQUFBQSxJQUFJLEVBQUUsYUFITjtBQUlBQyxJQUFBQSxRQUFRLEVBQUUsWUFKVjtBQUtBQyxJQUFBQSxLQUFLLEVBQUUsdUJBTFA7QUFNQUMsSUFBQUEsS0FBSyxFQUFFLEtBTlA7QUFPQUMsSUFBQUEsSUFBSSxFQUFFLEtBQUssSUFQWDtBQVFBQyxJQUFBQSxLQUFLLEVBQUUsTUFSUDtBQVNBQyxJQUFBQSxNQUFNLEVBQUUsR0FUUjtBQVVBQyxJQUFBQSxVQUFVLEVBQUUsRUFWWjtBQVdBQyxJQUFBQSxZQUFZLEVBQUUsQ0FYZDtBQVlBQyxJQUFBQSxXQUFXLEVBQUU7QUFaYixHQWxFUztBQUZJLEMiLCJzb3VyY2VSb290IjoiRDpcXFVzdWFyaW8gUGFibG9cXERlc2t0b3BcXENvZGVyaG91c2VcXGphbWF6b25hXFxiYWNrZW5kXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcblx0IG1vZGU6ICdkZXZlbG9wbWVudCcsXHJcblx0cHJvZHVjdHM6IFtcclxuXHRcdFx0e1xyXG5cdFx0X2lkOicxJywgXHJcblx0XHRuYW1lOiAnU2lrYSAxJyxcclxuXHRcdGNhdGVnb3J5OiAnYWNlbGVyYW50ZScsXHJcblx0XHRpbWFnZTogJy9pbWFnZXMvU2lrYTEuanBnJyxcclxuXHRcdHByaWNlOiAxMTAwLFxyXG5cdFx0c2l6ZTogMTAgKyBcIkxcIixcclxuXHRcdGJyYW5kOiAnU2lrYScsXHJcblx0XHRyYXRpbmc6IDQuNSxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOiA2LFxyXG5cdFx0ZGVzY3JpcHRpb246ICdBZGl0aXZvIGzDrXF1aWRvIHF1ZSByZWFjY2lvbmEgY29uIGxvcyBjb21wb25lbnRlcyBkZSBsYSBtZXpjbGEgZGUgY2VtZW50byB5IGFyZW5hIHBhcmEgYmxvcXVlYXIgbG9zIGNhcGlsYXJlcyB5IHBvcm9zIGRlIG1vcnRlcm9zIHkgaG9ybWlnb25lcy4gSW1waWRlIGVsIHBhc28gZGVsIGFndWEgeSBwZXJtaXRlIGxhIHJlc3BpcmFjacOzbiBkZWwgc3VzdHJhdG8uJyxcclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRfaWQ6JzInLFxyXG5cdFx0bmFtZTogJ1Npa2EgMycsXHJcblx0XHRjYXRlZ29yeTogJ2FjZWxlcmFudGUnLFxyXG5cdFx0aW1hZ2U6ICcvaW1hZ2VzL1Npa2EzLmpwZycsXHJcblx0XHRwcmljZTogMTIwMCxcclxuXHRcdHNpemU6IDYgKyAna2cnLFxyXG5cdFx0YnJhbmQ6ICdTaWthJyxcclxuXHRcdHJhdGluZzogMyxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOiA1LFxyXG5cdFx0ZGVzY3JpcHRpb246ICdBZGl0aXZvIGFjZWxlcmFkb3IgZGVsIGZyYWd1YWRvIHkgZW5kdXJlY2ltaWVudG8sIGEgYmFzZSBkZSBjbG9ydXJvcywgYWN0w7phIGF1bWVudGFuZG8gbGEgdmVsb2NpZGFkIGRlIGhpZHJhdGFjacOzbiB5IGxhcyByZWFjY2lvbmVzIHF1w61taWNhcyBkZSBsb3MgY29uc3RpdHV5ZW50ZXMgZGVsIGNlbWVudG8uJyxcclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRfaWQ6JzMnLCBcclxuXHRcdG5hbWU6ICdTaWthIDMgc2luIGNsb3J1cm8nLFxyXG5cdFx0Y2F0ZWdvcnk6ICdhY2VsZXJhbnRlJyxcclxuXHRcdGltYWdlOiAnLi9pbWFnZXMvU2lrYTNTQy5qcGcnLFxyXG5cdFx0cHJpY2U6IDMyMDAsXHJcblx0XHRzaXplOiA2ICsgXCJrZ1wiLFxyXG5cdFx0YnJhbmQ6ICdTaWthJyxcclxuXHRcdHJhdGluZzogNC41LFxyXG5cdFx0bnVtUmV2aWV3czogMTAsXHJcblx0XHRjb3VudGluU3RvY2s6IDMsXHJcblx0XHRkZXNjcmlwdGlvbjogJyBBZGl0aXZvIGRlc2Fycm9sbGFkbyBlc3BlY2lhbG1lbnRlIHBhcmEgYWNlbGVyYXIgZWwgZnJhZ8O8ZSBkZSBtb3J0ZXJvcyB5IGhvcm1pZ29uZXMgYXJtYWRvcy4gTm8gY29udGllbmUgY2xvcnVyb3MuIE5vIGNvcnJvZSBsYXMgYXJtYWR1cmFzIG5pIGxvcyBpbnNlcnRvcyBtZXTDoWxpY29zLicsXHJcblx0XHR9LFxyXG5cdFx0e1xyXG5cdFx0X2lkOic0JywgXHJcblx0XHRuYW1lOiAnU2lrYSBHdWFyZCA2MyBFc21hbHRlJyxcclxuXHRcdGNhdGVnb3J5OiAnYWNlbGVyYW50ZScsXHJcblx0XHRpbWFnZTogJy9pbWFnZXMvU2lrYUd1YXJkNjNFc21hbHRlLmpwZycsXHJcblx0XHRwcmljZTogMTAzMDAsXHJcblx0XHRzaXplOiAxMCArICdMJyxcclxuXHRcdGJyYW5kOiAnU2lrYScsXHJcblx0XHRyYXRpbmc6IDQuNSxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOjEwLFxyXG5cdFx0ZGVzY3JpcHRpb246ICdQcm9kdWN0byBkZSBkb3MgY29tcG9uZW50ZXMgYSBiYXNlIGRlIHJlc2luYXMgZXBveMOtZGljYXMsIGbDoWNpbCBkZSBtZXpjbGFyLCBhcGxpY2FibGUgYSBwaW5jZWwsIHJvZGlsbG8gbyBwaXN0b2xhcyBhIGFpcmUuIENvbnN0aXR1eWUgdW5hIGV4Y2VsZW50ZSBwcm90ZWNjacOzbiBxdcOtbWljYSwgbWVjw6FuaWNhIHkgYW50aWNvcnJvc2l2YS4nLFxyXG5cdFx0fSxcclxuXHRcdHtcclxuXHRcdF9pZDonNScsIFxyXG5cdFx0bmFtZTogJ1Npa2EgTGF0ZXgnLFxyXG5cdFx0Y2F0ZWdvcnk6ICdhY2VsZXJhbnRlJyxcclxuXHRcdGltYWdlOiAnL2ltYWdlcy9TaWthTGF0ZXguanBnJyxcclxuXHRcdHByaWNlOiA1MDAwLFxyXG5cdFx0c2l6ZTogNSArICdMJyxcclxuXHRcdGJyYW5kOiAnU2lrYScsXHJcblx0XHRyYXRpbmc6IDQuNSxcclxuXHRcdG51bVJldmlld3M6IDEwLFxyXG5cdFx0Y291bnRpblN0b2NrOiA4LFxyXG5cdFx0ZGVzY3JpcHRpb246ICdFbXVsc2nDs24gYSBiYXNlIGRlIHJlc2luYXMgc2ludMOpdGljYXMsIHF1ZSBhZ3JlZ2FkYSBhbCBhZ3VhIGRlIGVtcGFzdGFkbyBkZSBsZWNoYWRhcyBkZSBjZW1lbnRvLCBsZXMgYXBvcnRhIGFsdGEgY2FwYWNpZGFkIGRlIGFkaGVyZW5jaWEgZW50cmUgZGlmZXJlbnRlcyBldGFwYXMgZGUgY29uc3RydWNjacOzbi4gQWRlbcOhcywgaW5jb3Jwb3JhZG8gYWwgYWd1YSBkZSBlbXBhc3RhZG8gZGUgbW9ydGVyb3MsIGxlcyBtZWpvcmFyw6EgbGEgY2FsaWRhZCBsb2dyYW5kbyBjb2hlc2nDs24gZW50cmUgbGFzIHBhcnTDrWN1bGFzLCBhdW1lbnRhbmRvIHN1IGFkaGVyZW5jaWEsIG1lam9yYW5kbyBzdSBmbGV4aWJpbGlkYWQgeSBkaXNtaW51eWVuZG8gbGEgY2FwYWNpZGFkIGRlIGFic29yYmVyIGFndWEuJyxcclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRfaWQ6JzYnLFxyXG5cdFx0IG5hbWU6ICcxJyxcclxuXHRcdG5hbWU6ICdTaWthIFdULTEwMCcsXHJcblx0XHRjYXRlZ29yeTogJ2FjZWxlcmFudGUnLFxyXG5cdFx0aW1hZ2U6ICcvaW1hZ2VzL1Npa2FXVDEwMC5qcGcnLFxyXG5cdFx0cHJpY2U6IDE0NTAwLFxyXG5cdFx0c2l6ZTogMjAgKyAna2cnLFxyXG5cdFx0YnJhbmQ6ICdTaWthJyxcclxuXHRcdHJhdGluZzogNC41LFxyXG5cdFx0bnVtUmV2aWV3czogMTAsXHJcblx0XHRjb3VudGluU3RvY2s6IDksXHJcblx0XHRkZXNjcmlwdGlvbjogJ0FkaXRpdm8gbMOtcXVpZG8gcXVlIHJlc2lzdGUgbGEgZW50cmFkYSBkZSBhZ3VhIHVzYWRvIHBhcmEgcmVkdWNpciBsYSBwZXJtZWFiaWxpZGFkIGRlbCBob3JtaWfDs24uJyxcclxuXHRcdH0sXHJcblx0XHRcdCAgICBdLFxyXG5cdFx0XHRcdFx0fTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "mode",
        "products",
        "_id",
        "name",
        "category",
        "image",
        "price",
        "size",
        "brand",
        "rating",
        "numReviews",
        "countinStock",
        "description"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,IAAI,EAAE,aADO;AAEdC,EAAAA,QAAQ,EAAE,CACR;AACDC,IAAAA,GAAG,EAAC,GADH;AAEDC,IAAAA,IAAI,EAAE,QAFL;AAGDC,IAAAA,QAAQ,EAAE,YAHT;AAIDC,IAAAA,KAAK,EAAE,mBAJN;AAKDC,IAAAA,KAAK,EAAE,IALN;AAMDC,IAAAA,IAAI,EAAE,KAAK,GANV;AAODC,IAAAA,KAAK,EAAE,MAPN;AAQDC,IAAAA,MAAM,EAAE,GARP;AASDC,IAAAA,UAAU,EAAE,EATX;AAUDC,IAAAA,YAAY,EAAE,CAVb;AAWDC,IAAAA,WAAW,EAAE;AAXZ,GADQ,EAcT;AACAV,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,QAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,mBAJP;AAKAC,IAAAA,KAAK,EAAE,IALP;AAMAC,IAAAA,IAAI,EAAE,IAAI,IANV;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,CARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE,CAVd;AAWAC,IAAAA,WAAW,EAAE;AAXb,GAdS,EA2BT;AACAV,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,oBAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,sBAJP;AAKAC,IAAAA,KAAK,EAAE,IALP;AAMAC,IAAAA,IAAI,EAAE,IAAI,IANV;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,GARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE,CAVd;AAWAC,IAAAA,WAAW,EAAE;AAXb,GA3BS,EAwCT;AACAV,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,uBAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,gCAJP;AAKAC,IAAAA,KAAK,EAAE,KALP;AAMAC,IAAAA,IAAI,EAAE,KAAK,GANX;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,GARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAC,EAVb;AAWAC,IAAAA,WAAW,EAAE;AAXb,GAxCS,EAqDT;AACAV,IAAAA,GAAG,EAAC,GADJ;AAEAC,IAAAA,IAAI,EAAE,YAFN;AAGAC,IAAAA,QAAQ,EAAE,YAHV;AAIAC,IAAAA,KAAK,EAAE,uBAJP;AAKAC,IAAAA,KAAK,EAAE,IALP;AAMAC,IAAAA,IAAI,EAAE,IAAI,GANV;AAOAC,IAAAA,KAAK,EAAE,MAPP;AAQAC,IAAAA,MAAM,EAAE,GARR;AASAC,IAAAA,UAAU,EAAE,EATZ;AAUAC,IAAAA,YAAY,EAAE,CAVd;AAWAC,IAAAA,WAAW,EAAE;AAXb,GArDS,EAkET;AACAV,IAAAA,GAAG,EAAC,GADJ;AAECC,IAAAA,IAAI,EAAE,GAFP;AAGAA,IAAAA,IAAI,EAAE,aAHN;AAIAC,IAAAA,QAAQ,EAAE,YAJV;AAKAC,IAAAA,KAAK,EAAE,uBALP;AAMAC,IAAAA,KAAK,EAAE,KANP;AAOAC,IAAAA,IAAI,EAAE,KAAK,IAPX;AAQAC,IAAAA,KAAK,EAAE,MARP;AASAC,IAAAA,MAAM,EAAE,GATR;AAUAC,IAAAA,UAAU,EAAE,EAVZ;AAWAC,IAAAA,YAAY,EAAE,CAXd;AAYAC,IAAAA,WAAW,EAAE;AAZb,GAlES;AAFI,C",
      "sourceRoot": "D:\\Usuario Pablo\\Desktop\\Coderhouse\\jamazona\\backend\\",
      "sourcesContent": [
        "export default {\r\n\t mode: 'development',\r\n\tproducts: [\r\n\t\t\t{\r\n\t\t_id:'1', \r\n\t\tname: 'Sika 1',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/Sika1.jpg',\r\n\t\tprice: 1100,\r\n\t\tsize: 10 + \"L\",\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 6,\r\n\t\tdescription: 'Aditivo líquido que reacciona con los componentes de la mezcla de cemento y arena para bloquear los capilares y poros de morteros y hormigones. Impide el paso del agua y permite la respiración del sustrato.',\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'2',\r\n\t\tname: 'Sika 3',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/Sika3.jpg',\r\n\t\tprice: 1200,\r\n\t\tsize: 6 + 'kg',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 3,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 5,\r\n\t\tdescription: 'Aditivo acelerador del fraguado y endurecimiento, a base de cloruros, actúa aumentando la velocidad de hidratación y las reacciones químicas de los constituyentes del cemento.',\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'3', \r\n\t\tname: 'Sika 3 sin cloruro',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: './images/Sika3SC.jpg',\r\n\t\tprice: 3200,\r\n\t\tsize: 6 + \"kg\",\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 3,\r\n\t\tdescription: ' Aditivo desarrollado especialmente para acelerar el fragüe de morteros y hormigones armados. No contiene cloruros. No corroe las armaduras ni los insertos metálicos.',\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'4', \r\n\t\tname: 'Sika Guard 63 Esmalte',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/SikaGuard63Esmalte.jpg',\r\n\t\tprice: 10300,\r\n\t\tsize: 10 + 'L',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock:10,\r\n\t\tdescription: 'Producto de dos componentes a base de resinas epoxídicas, fácil de mezclar, aplicable a pincel, rodillo o pistolas a aire. Constituye una excelente protección química, mecánica y anticorrosiva.',\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'5', \r\n\t\tname: 'Sika Latex',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/SikaLatex.jpg',\r\n\t\tprice: 5000,\r\n\t\tsize: 5 + 'L',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 8,\r\n\t\tdescription: 'Emulsión a base de resinas sintéticas, que agregada al agua de empastado de lechadas de cemento, les aporta alta capacidad de adherencia entre diferentes etapas de construcción. Además, incorporado al agua de empastado de morteros, les mejorará la calidad logrando cohesión entre las partículas, aumentando su adherencia, mejorando su flexibilidad y disminuyendo la capacidad de absorber agua.',\r\n\t\t},\r\n\t\t{\r\n\t\t_id:'6',\r\n\t\t name: '1',\r\n\t\tname: 'Sika WT-100',\r\n\t\tcategory: 'acelerante',\r\n\t\timage: '/images/SikaWT100.jpg',\r\n\t\tprice: 14500,\r\n\t\tsize: 20 + 'kg',\r\n\t\tbrand: 'Sika',\r\n\t\trating: 4.5,\r\n\t\tnumReviews: 10,\r\n\t\tcountinStock: 9,\r\n\t\tdescription: 'Aditivo líquido que resiste la entrada de agua usado para reducir la permeabilidad del hormigón.',\r\n\t\t},\r\n\t\t\t    ],\r\n\t\t\t\t\t};"
      ]
    },
    "sourceType": "script",
    "mtime": 1637201368024
  }
}